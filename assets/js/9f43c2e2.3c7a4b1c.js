"use strict";(self.webpackChunkpiwik_pro=self.webpackChunkpiwik_pro||[]).push([[7115],{70052:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>o});var s=r(85893),i=r(11151);const d={},a="OnCheckAudienceMembership() \ud83d\uddd1",t={id:"sdks/android-sdk/methods/OnCheckAudienceMembership()",title:"OnCheckAudienceMembership() \ud83d\uddd1",description:"16.0.0 This method is no longer recommended. Audience Manager is no",source:"@site/docs/sdks/android-sdk/methods/OnCheckAudienceMembership().md",sourceDirName:"sdks/android-sdk/methods",slug:"/sdks/android-sdk/methods/OnCheckAudienceMembership()",permalink:"/docs/sdks/android-sdk/methods/OnCheckAudienceMembership()",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sdks/android-sdk/methods/OnCheckAudienceMembership().md",tags:[],version:"current",frontMatter:{}},c={},o=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Related methods",id:"related-methods",level:2}];function l(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"oncheckaudiencemembership-",children:"OnCheckAudienceMembership() \ud83d\uddd1"}),"\n",(0,s.jsx)("div",{class:"deprecated",children:(0,s.jsx)(n.p,{children:"16.0.0 This method is no longer recommended. Audience Manager is no\nlonger available in the latest product version."})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"OnCheckAudienceMembership()"})," method checks if the user belongs to\na given audience."]}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsxs)("div",{class:"tabs",children:[(0,s.jsxs)("div",{class:"group-tab",children:[(0,s.jsx)(n.p,{children:"Java"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"getTracker().checkAudienceMembership(audienceId, new Tracker.OnCheckAudienceMembership() {\n  @Override\n  public void onChecked(boolean isMember) {\n      // handle result\n  }\n\n  @Override\n  public void onError(String errorData) {\n      // handle error\n  }\n});\n"})})]}),(0,s.jsxs)("div",{class:"group-tab",children:[(0,s.jsx)(n.p,{children:"Kotlin"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'tracker.checkAudienceMembership(\n  binding.audienceId.text.toString(),\n  object : OnCheckAudienceMembership {\n    override fun onChecked(isMember: Boolean) {\n      // handle result\n    }\n\n    override fun onError(errorData: String) {\n    var errorData: String? = errorData\n    errorData = if (TextUtils.isEmpty(errorData)) "Network error" else errorData\n      // handle error\n    }\n  })\n'})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"audienceId"})," (string, required)",(0,s.jsx)(n.br,{}),"\n","The audience ID that you want to check. You can find it in Audience\nManager > Audiences."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"OnCheckAudienceMembership()"})," (required)",(0,s.jsx)(n.br,{}),"\n","The callback to handle a request result. The call is asynchronous. It\nhas two methods ",(0,s.jsx)(n.code,{children:"void onChecked(boolean isMember)"})," and ",(0,s.jsx)(n.code,{children:"void onError(String errorData)"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isMember"})," (boolean, output)",(0,s.jsx)(n.br,{}),"\n","Whether a user belongs to the given audience or not. True: Belongs.\nFalse: Doesn't belong."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"errorData"})," (output)",(0,s.jsx)(n.br,{}),"\n","The error string. If an error occurs, only this method will be called."]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"To check if the user belongs to the audience:"}),"\n",(0,s.jsxs)("div",{class:"tabs",children:[(0,s.jsxs)("div",{class:"group-tab",children:[(0,s.jsx)(n.p,{children:"Java"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"getTracker().checkAudienceMembership(audienceId, new Tracker.OnCheckAudienceMembership() {\n  @Override\n  public void onChecked(boolean isMember) {\n      // handle result\n  }\n\n  @Override\n  public void onError(String errorData) {\n      // handle error\n  }\n});\n"})})]}),(0,s.jsxs)("div",{class:"group-tab",children:[(0,s.jsx)(n.p,{children:"Kotlin"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'tracker.checkAudienceMembership(\n  binding.audienceId.text.toString(),\n  object : OnCheckAudienceMembership {\n    override fun onChecked(isMember: Boolean) {\n      // handle result\n    }\n\n    override fun onError(errorData: String) {\n    var errorData: String? = errorData\n    errorData = if (TextUtils.isEmpty(errorData)) "Network error" else errorData\n      // handle error\n    }\n  })\n'})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"related-methods",children:"Related methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"android audienceManagerSetProfileAttribute()"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"android audienceManagerGetProfileAttributes()"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>t,a:()=>a});var s=r(67294);const i={},d=s.createContext(i);function a(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);