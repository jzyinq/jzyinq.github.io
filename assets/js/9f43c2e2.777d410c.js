"use strict";(self.webpackChunkpiwik_pro=self.webpackChunkpiwik_pro||[]).push([[7115],{3905:(e,r,n)=>{n.d(r,{Zo:()=>l,kt:()=>h});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),d=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},l=function(e){var r=d(e.components);return t.createElement(c.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return n?t.createElement(h,i(i({ref:r},l),{},{components:n})):t.createElement(h,i({ref:r},l))}));function h(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},52864:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var t=n(87462),a=(n(67294),n(3905));const o={},i="OnCheckAudienceMembership() \ud83d\uddd1",s={unversionedId:"sdks/android-sdk/methods/OnCheckAudienceMembership()",id:"sdks/android-sdk/methods/OnCheckAudienceMembership()",title:"OnCheckAudienceMembership() \ud83d\uddd1",description:"16.0.0 This method is no longer recommended. Audience Manager is no",source:"@site/docs/sdks/android-sdk/methods/OnCheckAudienceMembership().md",sourceDirName:"sdks/android-sdk/methods",slug:"/sdks/android-sdk/methods/OnCheckAudienceMembership()",permalink:"/docs/sdks/android-sdk/methods/OnCheckAudienceMembership()",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sdks/android-sdk/methods/OnCheckAudienceMembership().md",tags:[],version:"current",frontMatter:{}},c={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Related methods",id:"related-methods",level:2}],l={toc:d},u="wrapper";function p(e){let{components:r,...n}=e;return(0,a.kt)(u,(0,t.Z)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"oncheckaudiencemembership-"},"OnCheckAudienceMembership() \ud83d\uddd1"),(0,a.kt)("div",{class:"deprecated"},(0,a.kt)("p",null,"16.0.0 This method is no longer recommended. Audience Manager is no\nlonger available in the latest product version.")),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"OnCheckAudienceMembership()")," method checks if the user belongs to\na given audience."),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("div",{class:"tabs"},(0,a.kt)("div",{class:"group-tab"},(0,a.kt)("p",null,"Java"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"getTracker().checkAudienceMembership(audienceId, new Tracker.OnCheckAudienceMembership() {\n  @Override\n  public void onChecked(boolean isMember) {\n      // handle result\n  }\n\n  @Override\n  public void onError(String errorData) {\n      // handle error\n  }\n});\n"))),(0,a.kt)("div",{class:"group-tab"},(0,a.kt)("p",null,"Kotlin"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'tracker.checkAudienceMembership(\n  binding.audienceId.text.toString(),\n  object : OnCheckAudienceMembership {\n    override fun onChecked(isMember: Boolean) {\n      // handle result\n    }\n\n    override fun onError(errorData: String) {\n    var errorData: String? = errorData\n    errorData = if (TextUtils.isEmpty(errorData)) "Network error" else errorData\n      // handle error\n    }\n  })\n')))),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"audienceId")," (string, required)",(0,a.kt)("br",{parentName:"p"}),"\n","The audience ID that you want to check. You can find it in Audience\nManager ",">"," Audiences."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OnCheckAudienceMembership()")," (required)",(0,a.kt)("br",{parentName:"p"}),"\n","The callback to handle a request result. The call is asynchronous. It\nhas two methods ",(0,a.kt)("inlineCode",{parentName:"p"},"void onChecked(boolean isMember)")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"void\nonError(String errorData)"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"isMember")," (boolean, output)",(0,a.kt)("br",{parentName:"p"}),"\n","Whether a user belongs to the given audience or not. True: Belongs.\nFalse: Doesn't belong."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"errorData")," (output)",(0,a.kt)("br",{parentName:"p"}),"\n","The error string. If an error occurs, only this method will be called."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"To check if the user belongs to the audience:"),(0,a.kt)("div",{class:"tabs"},(0,a.kt)("div",{class:"group-tab"},(0,a.kt)("p",null,"Java"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"getTracker().checkAudienceMembership(audienceId, new Tracker.OnCheckAudienceMembership() {\n  @Override\n  public void onChecked(boolean isMember) {\n      // handle result\n  }\n\n  @Override\n  public void onError(String errorData) {\n      // handle error\n  }\n});\n"))),(0,a.kt)("div",{class:"group-tab"},(0,a.kt)("p",null,"Kotlin"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'tracker.checkAudienceMembership(\n  binding.audienceId.text.toString(),\n  object : OnCheckAudienceMembership {\n    override fun onChecked(isMember: Boolean) {\n      // handle result\n    }\n\n    override fun onError(errorData: String) {\n    var errorData: String? = errorData\n    errorData = if (TextUtils.isEmpty(errorData)) "Network error" else errorData\n      // handle error\n    }\n  })\n')))),(0,a.kt)("h2",{id:"related-methods"},"Related methods"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"android audienceManagerSetProfileAttribute()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"android audienceManagerGetProfileAttributes()"))))}p.isMDXComponent=!0}}]);