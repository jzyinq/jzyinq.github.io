{"searchDocs":[{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"","version":null},{"title":"Changelog","type":0,"sectionRef":"#","url":"/docs/changelog","content":"Changelog We update our product bi-weekly, except for on-premises accounts that are updated once every year. To see recent changes, see ourchangelog.","keywords":"","version":"Next"},{"title":"Integrations","type":0,"sectionRef":"#","url":"/docs/integrations/","content":"Integrations If you need to set up Piwik PRO on a PWA or AMP or collect data using web log analytics, we’ve got solutions for you. See the listed documentation and apply it to your specific project. See more amp-integration.rst paw-integration.md web-log-analytics.rst","keywords":"","version":"Next"},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":"","version":null},{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":"","version":null},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"","version":null},{"title":"JS API","type":0,"sectionRef":"#","url":"/docs/js-api/","content":"JS API Piwik PRO offers two JS APIs – one for Analytics and one for Consent Manager. You can use them after you install Piwik PRO on your site or app. We've put together solid documentation for both JS APIs, so read on and see what you can do with them. See more js-api-analytics/index.rst js-api-consent-manager/index.rst","keywords":"","version":"Next"},{"title":"Getting started","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/getting-started","content":"Getting started Our JavaScript library has methods that let you send data from your site or web app to Piwik PRO. You can use these methods in JavaScript or within our dedicated libraries for Angular and React. In short, our JavaScript library lets you collect data like: Page viewsGoalsInternal searchesDownloads and outlinksCustom eventsEcommerce eventsAnd more Next steps plain-javascript-analyticsangularreactmethods","keywords":"","version":"Next"},{"title":"Progressive Web Applications integration","type":0,"sectionRef":"#","url":"/docs/integrations/paw-integration","content":"","keywords":"","version":"Next"},{"title":"Enabling the Piwik PRO module for Progressive web applications​","type":1,"pageTitle":"Progressive Web Applications integration","url":"/docs/integrations/paw-integration#enabling-the-piwik-pro-module-for-progressive-web-applications","content":" To enable collecting data from your PWAs using Piwik PRO Analytics, call the initialize() method in your service worker:  import PiwikPro from '@piwikpro/pwa-piwik-pro'; PiwikPro.initialize({ containerURL: 'example.com', containerId: '12345678-1234-1234-1234-1234567890ab' });   This is all that's required to queue and retry failed requests to Piwik PRO, and it's the simplest way to get Piwik PRO working offline.  However, if using only the code above, the retried requests are indistinguishable from requests that succeed on the first try. This means you'll receive all the interaction data from offline users, but you won't be able to tell which interactions occurred while the user was offline.  To address this concern, you can use one of the optional methods described below.  ","version":"Next","tagName":"h2"},{"title":"Enable automatic tracking of the status of the user's Internet connection​","type":1,"pageTitle":"Progressive Web Applications integration","url":"/docs/integrations/paw-integration#enable-automatic-tracking-of-the-status-of-the-users-internet-connection","content":" If you want to be able to differentiate retried requests from non-retried requests, you can use a command that will start automatic tracing of the internet connection status. With this solution, when the internet is lost, a Custom Event will be generated containing information about the status of the internet connection.  In your application, include the default PiwikPro object in the highest level application module. ie index.  import PiwikPro from '@piwikpro/pwa-piwik-pro'; PiwikPro.enableInternetConnectionTracking();   ","version":"Next","tagName":"h2"},{"title":"Enable automatic tracking of the app install event​","type":1,"pageTitle":"Progressive Web Applications integration","url":"/docs/integrations/paw-integration#enable-automatic-tracking-of-the-app-install-event","content":" If you want to additionally track as a Custom Event the information about when your customers have installed the application, you can do so using the method:  import PiwikPro from '@piwikpro/pwa-piwik-pro'; PiwikPro.enableInstallTracking();  ","version":"Next","tagName":"h2"},{"title":"JS API Analytics","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/","content":"JS API Analytics getting-started.rst plain-javascript.rst frameworks/index.rst methods/index.rst","keywords":"","version":"Next"},{"title":"Frameworks","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/frameworks/","content":"Frameworks If you use React or Angular to build your website or web app, you can install our dedicated libraries and use Piwik PRO to collect visitor data or user data. You don't need to use our JavaScript methods manually, they are all built in as ready-to-use services. Here is a list of the supported frameworks together with the links to their dedicated libraries: Framework\tLibraryAngular\t@piwikpro/ngx-piwik-pro (NPM / Yarn) React\t@piwikpro/react-piwik-pro (NPM / Yarn) See detailed descriptions: angular.rst react.rst","keywords":"","version":"Next"},{"title":"Methods","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/","content":"Methods Here's a list of all available JS methods for Analytics in Piwik PRO.","keywords":"","version":"Next"},{"title":"appendToTrackingUrl()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/appendToTrackingUrl()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"appendToTrackingUrl()","url":"/docs/js-api/js-api-analytics/methods/appendToTrackingUrl()#syntax","content":" JS appendToTrackingUrl(appendToUrl)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"appendToTrackingUrl()","url":"/docs/js-api/js-api-analytics/methods/appendToTrackingUrl()#parameters","content":" appendToUrl (string, required) A custom query string that'll be attached to each tracking request. Parameter names and values need to be URL encoded. Example: lat=140&amp;long=100  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"appendToTrackingUrl()","url":"/docs/js-api/js-api-analytics/methods/appendToTrackingUrl()#examples","content":" To add lat=140&amp;long=100 parameter to each request:  JS (queue) _paq.push([&quot;appendToTrackingUrl&quot;, &quot;lat=140&amp;long=100&quot;]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.appendToTrackingUrl(&quot;lat=140&amp;long=100&quot;);  ","version":"Next","tagName":"h2"},{"title":"addTracker()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/addTracker()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"addTracker()","url":"/docs/js-api/js-api-analytics/methods/addTracker()#syntax","content":" JS addTracker(trackerUrl, siteId)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"addTracker()","url":"/docs/js-api/js-api-analytics/methods/addTracker()#parameters","content":" trackerURL (string, required) A tracker URL (tracking endpoint).  siteID (string, required) A site or app ID in Piwik PRO where you want to send data. (Where to find it?)  ","version":"Next","tagName":"h2"},{"title":"Returns​","type":1,"pageTitle":"addTracker()","url":"/docs/js-api/js-api-analytics/methods/addTracker()#returns","content":" A tracker's instance. Format: Example: Type: object  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"addTracker()","url":"/docs/js-api/js-api-analytics/methods/addTracker()#examples","content":" To create a new tracker's instance:  JS (queue) _paq.push([&quot;addTracker&quot;, &quot;https://example.piwik.pro/ppms.php&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot;]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.setTrackerUrl(&quot;https://example.piwik.pro/ppms.php&quot;);   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"addTracker()","url":"/docs/js-api/js-api-analytics/methods/addTracker()#related-methods","content":" setTrackerUrl()getTrackerUrl() ","version":"Next","tagName":"h2"},{"title":"deleteCookies()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/deleteCookies()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"deleteCookies()","url":"/docs/js-api/js-api-analytics/methods/deleteCookies()#syntax","content":" JS deleteCookies()   ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"deleteCookies()","url":"/docs/js-api/js-api-analytics/methods/deleteCookies()#examples","content":" To delete visitor cookies:  JS (queue) _paq.push([&quot;deleteCookies&quot;]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); console.log(jstc.hasCookies());   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"deleteCookies()","url":"/docs/js-api/js-api-analytics/methods/deleteCookies()#related-methods","content":" enableCookies()disableCookies()hasCookies()setCookieNamePrefix()setCookieDomain()getCookieDomain()setCookiePath()getCookiePath()setSecureCookie()setVisitorCookieTimeout()getConfigVisitorCookieTimeout()setReferralCookieTimeout()setSessionCookieTimeout()getSessionCookieTimeout()setVisitorIdCookie() ","version":"Next","tagName":"h2"},{"title":"Web Log Analytics","type":0,"sectionRef":"#","url":"/docs/integrations/web-log-analytics","content":"","keywords":"","version":"Next"},{"title":"Set up log import​","type":1,"pageTitle":"Web Log Analytics","url":"/docs/integrations/web-log-analytics#set-up-log-import","content":" You need to run the Log Importer tool with the correct parameters. Some of them must be present, while others are optional.  Sample command:  Python package piwik_pro_log_analytics --url=https://demo.piwik.pro --client-id=*** --client-secret=*** --enable-static --enable-bots --show-progress --idsite=*** --recorders=2 sample.log Python script ./import_logs.py --url=https://demo.piwik.pro --client-id=*** --client-secret=*** --enable-static --enable-bots --show-progress --idsite=*** --recorders=2 sample.log   --url=https://demo.piwik.pro This is a mandatory parameter which points to the location of your Piwik instance  --client-id=*** Part of API credentials. They can be obtained from PPAS (check how to do it).  --client-secret=*** Part of API credentials. They can be obtained from PPAS (check how to do it).  --idsite=*** Defines the Site ID of the website (eg.99e33528-8da4-46d8-be90-a62bfb3a7bba).  There are many other options that can be added to this script, which are described in the Tracker-log-import-add-parameters-to-log-import.  If you plan to import logs on a regular basis it is advised to setup a scheduled job using a tool such as CRON.  ","version":"Next","tagName":"h2"},{"title":"Exclude log lines​","type":1,"pageTitle":"Web Log Analytics","url":"/docs/integrations/web-log-analytics#exclude-log-lines","content":" There are several methods allowing you to exclude particular log lines or visitors from being tracked:  You can exclude specific IP addresses or IP ranges from being tracked. To configure excluded IPs, log into Piwik as a superuser, then click Administration &gt; Websites.Excluding lines from specific IP or IP ranges - this can be done the same way as in the default tracking method in Piwik (by adding an excluded IP or IP range in the Administration -&gt; Websites menu)You can exclude visitors based on their User Agent HTTP headers by using --useragent-excludeYou can also provide a sole hostname that you would like to import from. This means that all the logs from other hosts will be ignored. The parameter allowing this is: --hostnameIt is also possible to exclude specific log lines where the URL path matches a particular URL path. See the option --exclude-path  If you need to add multiple paths or hostnames, you will need to add these parameters multiple times.  ","version":"Next","tagName":"h2"},{"title":"Add parameters to log import​","type":1,"pageTitle":"Web Log Analytics","url":"/docs/integrations/web-log-analytics#add-parameters-to-log-import","content":" The Web Log Analytics script does not track static files (JS, CSS, images, etc.). It also excludes all bot traffic.  Use the following commands to enable tracking of these elements:  --enable-bots This enables tracking of search/spam bots via Piwik. Just add a custom variable with the bot’s name. The User-agent field is examined to determine whether a log line comes from a bot or a real user.--enable-static Specifies tracking of all static files (images, JS, CSS) in Piwik PRO.--enable-http-redirects This tracks HTTP redirects as page views, with a custom title and custom variable.--enable-reverse-dns Activates reverse DNS, which is used in generating the Visitors &gt; Providers report. NOTE: this may lead to a serious drop in performance as reverse DNS is very slow.--recorders=N Sets a specific number of threads. We recommend matching it to the number of CPU cores in the system.--enable-bulk-tracking Enables bulk tracking mode. Tracking requests will be bunched up and send using bulk request.--recorder-max-payload-size=N When importer uses the Piwik PRO bulk tracking feature in order to boost speed (option--enable-bulk-tracking), this option configures max number of tracking requests that bulk request can contain. Adjust the number of pageviews (or log lines) to see what generates the best performance.  More information about log import parameters can be found using the help parameter:  Python package piwik_pro_log_analytics --help Python script ./import_logs.py --help   ","version":"Next","tagName":"h2"},{"title":"Import data with server log analytics and standard JavaScript simultaneously​","type":1,"pageTitle":"Web Log Analytics","url":"/docs/integrations/web-log-analytics#import-data-with-server-log-analytics-and-standard-javascript-simultaneously","content":" JavaScript Tracking Client and web server log file analytics can be used at the same time, on the condition that data is recorded for each method in a separate Piwik PRO website.  To avoid double counts of visits, follow these steps:  Create a new website in Piwik PRO with a name, for example, example.com (log files).Record the website ID of this new website. The website ID will be used for importing log file data.In the command line, force all requests from log files to be recorded in a specific website ID via the command --idsite=X.  ","version":"Next","tagName":"h2"},{"title":"Technical requirements​","type":1,"pageTitle":"Web Log Analytics","url":"/docs/integrations/web-log-analytics#technical-requirements","content":" Technical requirements for running Web Log Analytics:  Access to the server or server logs - for example via SSHPython 3.6+ - older versions (e.g. 2.6, 2.7 or 3.5) are not supported. Most often you'll want to import your data straight from the server where it is created. To do this, you’ll need to be able to run a Python script on the machine that will send the logs to Piwik PRO.Log Analytics script - this is a script written in Python ensuring that logs are sent to your Piwik PRO instance, available onGitHub  Supported log formats:  all default log formats for: Nginx, Apache, IIS, Tomcatall common log formats like: NCSA Common log format, Extended log format, W3C Extended log files, Nginx JSONlog files of some popular Cloud Saas services: Amazon CloudFront logs, Amazon S3 logsstreaming media server log files such as: Icecastlog files with and without the virtual host will be imported  This script does not directly support importing logs from log aggregation tools, like Grafana Loki or ELK. If you'd like to import logs from one of those, you need to download them to the disk first.  Performance considerations &amp; rate limiting ----------------------  The script needs CPU to read and parse the log files, but it is usually Piwik PRO server itself which will limit the import speed due to network latency. To improve performance, you can use the --recorders option to specify the number of parallel threads which will import hits into Piwik PRO. By default we are using one recorder, but you can increase this value until you achieve satisfying speed.  If you are Piwik PRO Core user, please make sure, that you are not hitting rate limits, by using --sleep-between-requests-ms flag to slow down the import process. ","version":"Next","tagName":"h2"},{"title":"React","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/frameworks/react","content":"","keywords":"","version":"Next"},{"title":"Installation​","type":1,"pageTitle":"React","url":"/docs/js-api/js-api-analytics/frameworks/react#installation","content":" To install JS library for React, follow these steps:  In your project folder, run the following command:  npm install @piwik-pro/react-piwik-pro   or  yarn add ​​@piwikpro/react-piwik-pro   Add the PiwikPro module to your project files. Call theinitialize() method by passing your account address (Example:https://example.piwik.pro/) and the site ID (Where to find it?):  import PiwikPro from '@piwik-pro/react-piwik-pro'; PiwikPro.initialize('site-id', 'account-address'); ReactDOM.render(&lt;App /&gt;, document.getElementById('root'))   Note: This method makes sure that collected data is sent to the your account in Piwik PRO and is reported as a corresponding site or app.  Add tracking methods like screen views or custom events to your application.Data will appear in reports in about an hour. Data in the tracker debugger will appear instantly.  ","version":"Next","tagName":"h2"},{"title":"Additional setup for SPA​","type":1,"pageTitle":"React","url":"/docs/js-api/js-api-analytics/frameworks/react#additional-setup-for-spa","content":" If your web app is built as a single-page application (SPA), you need to track virtual page views. In SPAs, when a user goes from one page to the other, the page doesn't reload. It loads just once at the beginning of the session. Because of that, page views can't be recorded in the usual way. You need virtual page views.  To automatically track virtual page views in React projects, you need to follow these steps:  SomethingSomethingSomething  ","version":"Next","tagName":"h2"},{"title":"Methods​","type":1,"pageTitle":"React","url":"/docs/js-api/js-api-analytics/frameworks/react#methods","content":" Here's a list of all JS methods you can use in your React project. Descriptions and other information are available after clicking on links.  A  addDownloadExtensions()addEcommerceItem()  C  clearEcommerceCart()  D  deleteCustomDimension()  E  enableLinkTracking()  G  getCustomDimensionValue()getEcommerceItems()getLinkTrackingTimer()getUserId()getVisitorId()getVisitorInfo()  R  removeDownloadExtensions()removeEcommerceItem()resetUserId()  S  setCustomDimensionValue()setDownloadClasses()setDownloadExtensions()setEcommerceView()setIgnoreClasses()setLinkClasses()setLinkTrackingTimer()setUserId()  T  trackContentImpression()trackContentInteraction()trackEcommerceCartUpdate()trackEcommerceOrder()trackEvent()trackGoal()trackLink()trackPageView()trackSiteSearch() ","version":"Next","tagName":"h2"},{"title":"customCrossDomainLinkVisitorIdGetter()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkVisitorIdGetter()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"customCrossDomainLinkVisitorIdGetter()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkVisitorIdGetter()#syntax","content":" JS customCrossDomainLinkVisitorIdGetter(urlParser)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"customCrossDomainLinkVisitorIdGetter()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkVisitorIdGetter()#parameters","content":" urlParser (function, required) Extracts a visitor ID from a page URL.  urlParser (url, name) The urlParser() method accepts a URL and name, and returns a visitor ID.  url (string, required) A page URL.  name (string, required) A parameter name that holds a visitor ID.  ","version":"Next","tagName":"h2"},{"title":"Returns​","type":1,"pageTitle":"customCrossDomainLinkVisitorIdGetter()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkVisitorIdGetter()#returns","content":" A visitor ID extracted from a page URL. Format: Example: c52b5d0969220761 Type: string  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"customCrossDomainLinkVisitorIdGetter()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkVisitorIdGetter()#example","content":" To do something:  JS (queue) _paq.push([&quot;customCrossDomainLinkVisitorIdGetter&quot;, function (url, name) { return (new URL(url)).searchParams.get(name) || &quot;&quot;; }]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.customCrossDomainLinkVisitorIdGetter(function (url, name) { return (new URL(url)).searchParams.get(name) || &quot;&quot;; });   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"customCrossDomainLinkVisitorIdGetter()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkVisitorIdGetter()#related-methods","content":" enableCrossDomainLinking()disableCrossDomainLinking()isCrossDomainLinkingEnabled()setCrossDomainLinkingTimeout()getCrossDomainLinkingUrlParameter()customCrossDomainLinkDecorator() ","version":"Next","tagName":"h2"},{"title":"deleteCustomDimension()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/deleteCustomDimension()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"deleteCustomDimension()","url":"/docs/js-api/js-api-analytics/methods/deleteCustomDimension()#syntax","content":" JS getCustomDimensionValue(customDimensionID) Angular deleteCustomDimension(customDimensionId: string) React deleteCustomDimension(customDimensionId: string)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"deleteCustomDimension()","url":"/docs/js-api/js-api-analytics/methods/deleteCustomDimension()#parameters","content":" customDimensionID (number, required) An ID of the custom dimension.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"deleteCustomDimension()","url":"/docs/js-api/js-api-analytics/methods/deleteCustomDimension()#examples","content":" To remove a custom dimension:  JS (queue) _paq.push([&quot;deleteCustomDimension&quot;, 1]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.deleteCustomDimension(1); Angular React  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"deleteCustomDimension()","url":"/docs/js-api/js-api-analytics/methods/deleteCustomDimension()#related-methods","content":" setCustomDimensionValue()getCustomDimensionValue() ","version":"Next","tagName":"h2"},{"title":"customCrossDomainLinkDecorator()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkDecorator()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"customCrossDomainLinkDecorator()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkDecorator()#syntax","content":" JS customCrossDomainLinkDecorator(urlDecorator)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"customCrossDomainLinkDecorator()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkDecorator()#parameters","content":" urlDecorator (function, required) Defines parameters that are used to hold a visitor ID when domains are linked.  urlDecorator (url, value, name) The urlDecorator() method accepts a URL, value and name, and returns a decorated URL.  url (string, required) A page URL.  value (string, required) The visitor ID that should be passed via the URL.  name (string, required) The name of the visitor ID used in Piwik PRO. It can be customized.  ","version":"Next","tagName":"h2"},{"title":"Returns​","type":1,"pageTitle":"customCrossDomainLinkDecorator()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkDecorator()#returns","content":" A decorated URL or null. Format: Example: https://example.com?pk\\_vid=36 Type: string | null  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"customCrossDomainLinkDecorator()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkDecorator()#examples","content":" To xxxxxxxxxxx:  JS (queue) _paq.push([&quot;customCrossDomainLinkDecorator&quot;, function (url, value, name) { var parsedUrl = new URL(url); parsedUrl.searchParams.append(name, value); return parsedUrl.href; }]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.customCrossDomainLinkDecorator(function (url, value, name) { var parsedUrl = new URL(url); parsedUrl.searchParams.append(name, value); return parsedUrl.href; }]);   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"customCrossDomainLinkDecorator()","url":"/docs/js-api/js-api-analytics/methods/customCrossDomainLinkDecorator()#related-methods","content":" enableCrossDomainLinking()disableCrossDomainLinking()isCrossDomainLinkingEnabled()setCrossDomainLinkingTimeout()getCrossDomainLinkingUrlParameter()customCrossDomainLinkVisitorIdGetter() ","version":"Next","tagName":"h2"},{"title":"disableHeartBeatTimer()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/disableHeartBeatTimer()","content":"disableHeartBeatTimer()","keywords":"","version":"Next"},{"title":"disableCookies()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/disableCookies()","content":"disableCookies()","keywords":"","version":"Next"},{"title":"deleteCustomVariable() 🗑","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/deleteCustomVariable()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"deleteCustomVariable() 🗑","url":"/docs/js-api/js-api-analytics/methods/deleteCustomVariable()#syntax","content":" JS deleteCustomVariable(index[, scope])   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"deleteCustomVariable() 🗑","url":"/docs/js-api/js-api-analytics/methods/deleteCustomVariable()#parameters","content":" index (number, required) Index from 1 to 5 where the variable is stored.  scope (string, optional) Scope of the variable: &quot;visit&quot; or &quot;page&quot;. The default value is &quot;visit&quot;.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"deleteCustomVariable() 🗑","url":"/docs/js-api/js-api-analytics/methods/deleteCustomVariable()#examples","content":" To remove a custom variable:  JS (queue) _paq.push([&quot;deleteCustomVariable&quot;, 1, &quot;page&quot;]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.deleteCustomVariable(1, &quot;page&quot;);  ","version":"Next","tagName":"h2"},{"title":"addListener()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/addListener()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"addListener()","url":"/docs/js-api/js-api-analytics/methods/addListener()#syntax","content":" JS addListener(domElement)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"addListener()","url":"/docs/js-api/js-api-analytics/methods/addListener()#parameters","content":" domElement (DOM element, required) The element that you want to track as a link.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"addListener()","url":"/docs/js-api/js-api-analytics/methods/addListener()#examples","content":" To add a link to this element #dynamically-added-link:  JS (queue) _paq.push([&quot;addListener&quot;, document.querySelector(&quot;#dynamically-added-link&quot;)]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.addListener(document.querySelector(&quot;#dynamically-added-link&quot;));  ","version":"Next","tagName":"h2"},{"title":"disableCrossDomainLinking()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/disableCrossDomainLinking()","content":"disableCrossDomainLinking()","keywords":"","version":"Next"},{"title":"enableCookies()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/enableCookies()","content":"enableCookies()","keywords":"","version":"Next"},{"title":"addDownloadExtensions()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/addDownloadExtensions()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"addDownloadExtensions()","url":"/docs/js-api/js-api-analytics/methods/addDownloadExtensions()#syntax","content":" JSAngularReact addDownloadExtensions(extensions)  ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"addDownloadExtensions()","url":"/docs/js-api/js-api-analytics/methods/addDownloadExtensions()#parameters","content":" extensions (string | array &lt;string&gt;, required) The list of file extensions to be tracked as downloads. Can be written as string (Example: &quot;zip|rar&quot;) or an array (Example: [&quot;zip&quot;, &quot;rar&quot;]).  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"addDownloadExtensions()","url":"/docs/js-api/js-api-analytics/methods/addDownloadExtensions()#examples","content":" To add a mhj|docx extensions to the existing list of file extensions:  JS (queue) _paq.push([&quot;addDownloadExtensions&quot;, &quot;mhj|docx&quot;]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.addDownloadExtensions(&quot;mhj|docx&quot;); Angular React  ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"addDownloadExtensions()","url":"/docs/js-api/js-api-analytics/methods/addDownloadExtensions()#notes","content":" The list of file extensions is not persisted in a visitor's browser. You need to call it on each page load. We check for extensions at the end of the URL path and in query parameter values. Here are a few examples of how we detect the extension: http://example.com/path/file.zip http://example.com/path/file.zip\\#hello http://example.com/path/file.zip?a=102 http://example.com/path/?a=file.zip http://example.com/path/?a=file.zip\\&amp;b=29 Here's the default list of file extensions tracked as downloads: 7z, aac, apk, arc, arj, asf, asx, avi, azw3, bin, csv, deb, dmg, doc, docx, epub, exe, flv, gif, gz, gzip, hqx, ibooks, jar, jpg, jpeg, js, mobi, mp2, mp3, mp4, mpg, mpeg, mov, movie, msi, msp, odb, odf, odg, ods, odt, ogg, ogv, pdf, phps, png, ppt, pptx, qt, qtm, ra, ram, rar, rpm, sea, sit, tar, tbz, tbz2, bz, bz2, tgz, torrent, txt, wav, wma, wmv, wpd, xls, xlsx, xml, z, zip.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"addDownloadExtensions()","url":"/docs/js-api/js-api-analytics/methods/addDownloadExtensions()#related-methods","content":" trackLink()enableLinkTracking()disableLinkTracking()setIgnoreClasses()setLinkClasses()setDownloadClasses()setDownloadExtensions()removeDownloadExtensions()getConfigDownloadExtensions() ","version":"Next","tagName":"h2"},{"title":"disableLinkTracking()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/disableLinkTracking()","content":"disableLinkTracking()","keywords":"","version":"Next"},{"title":"clearEcommerceCart()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/clearEcommerceCart()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"clearEcommerceCart()","url":"/docs/js-api/js-api-analytics/methods/clearEcommerceCart()#syntax","content":" JS clearEcommerceCart() Angular clearEcommerceCart() React clearEcommerceCart()   ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"clearEcommerceCart()","url":"/docs/js-api/js-api-analytics/methods/clearEcommerceCart()#examples","content":" To remove all items from the cart:  JS (queue) _paq.push([&quot;clearEcommerceCart&quot;]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.clearEcommerceCart(); Angular React  ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"clearEcommerceCart()","url":"/docs/js-api/js-api-analytics/methods/clearEcommerceCart()#notes","content":" The cart with cleared items is not stored in the browser storage. Make sure that you add or clear all items again after the page reloads.This method doesn't send any data to Piwik PRO. It just updates the cart. You can use the trackEcommerceCartUpdate() or trackEcommerceOrder() method to send cart data to Piwik PRO.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"clearEcommerceCart()","url":"/docs/js-api/js-api-analytics/methods/clearEcommerceCart()#related-methods","content":" addEcommerceItem()removeEcommerceItem()getEcommerceItems()setEcommerceView()trackEcommerceCartUpdate()trackEcommerceOrder() ","version":"Next","tagName":"h2"},{"title":"disablePerformanceTracking()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/disablePerformanceTracking()","content":"disablePerformanceTracking()","keywords":"","version":"Next"},{"title":"enableHeartBeatTimer()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/enableHeartBeatTimer()","content":"enableHeartBeatTimer()","keywords":"","version":"Next"},{"title":"getConfigIdPageView()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/getConfigIdPageView()","content":"getConfigIdPageView()","keywords":"","version":"Next"},{"title":"enableLinkTracking()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/enableLinkTracking()","content":"enableLinkTracking()","keywords":"","version":"Next"},{"title":"enableJSErrorTracking()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/enableJSErrorTracking()","content":"enableJSErrorTracking()","keywords":"","version":"Next"},{"title":"getConfigDownloadExtensions()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/getConfigDownloadExtensions()","content":"getConfigDownloadExtensions()","keywords":"","version":"Next"},{"title":"discardHashTag()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/discardHashTag()","content":"discardHashTag()","keywords":"","version":"Next"},{"title":"enableCrossDomainLinking()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/enableCrossDomainLinking()","content":"enableCrossDomainLinking()","keywords":"","version":"Next"},{"title":"getCookiePath()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/getCookiePath()","content":"getCookiePath()","keywords":"","version":"Next"},{"title":"getConfigVisitorCookieTimeout()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/getConfigVisitorCookieTimeout()","content":"getConfigVisitorCookieTimeout()","keywords":"","version":"Next"},{"title":"Angular","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/frameworks/angular","content":"","keywords":"","version":"Next"},{"title":"Installation​","type":1,"pageTitle":"Angular","url":"/docs/js-api/js-api-analytics/frameworks/angular#installation","content":" To install JS library for Angular, follow these steps:  In your project folder, run the following command:  npm install @piwik-pro/ngx-piwik-pro   or  yarn add @piwikpro/ngx-piwik-pro   Add the NgxPiwikProModule module in your highest level app module. Call the forRoot() method by passing your account address (Example: https://example.piwik.pro/) and the site ID (Where to find it?):  import { NgxPiwikProModule } from '@piwik-pro/ngx-piwik-pro'; @NgModule({ declarations: [ AppComponent ], imports: [ BrowserModule, NgxPiwikProModule.forRoot('site-id', 'account-address') ], providers: [], bootstrap: [AppComponent] }) export class AppModule { }   Note: This method makes sure that collected data is sent to the your account in Piwik PRO and is reported as a corresponding site or app.  Add tracking methods like page views or custom events to your application.Data will appear in reports in about an hour. Data in the tracker debugger will appear instantly.  ","version":"Next","tagName":"h2"},{"title":"Additional setup for SPA​","type":1,"pageTitle":"Angular","url":"/docs/js-api/js-api-analytics/frameworks/angular#additional-setup-for-spa","content":" If your web app is built as a single-page application (SPA), you need to track virtual page views. In SPAs, when a user goes from one page to the other, the page doesn't reload. It loads just once at the beginning of the session. Because of that, page views can't be recorded in the usual way. You need virtual page views.  To automatically track virtual page views in Angular projects, you need to follow these steps:  Add NgxPiwikProRouterModule on AppModule to enable automatic tracking of Router events.  Example:  import { NgxPiwikProModule, NgxPiwikProRouterModule } from '@piwik-pro/ngx-piwik-pro'; ... @NgModule({ ... imports: [ ... NgxPiwikProModule.forRoot('account-address'), NgxPiwikProRouterModule // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ] }) export class AppModule {}   Note: The NgxPiwikProRouterModule module subscribes to Router events when the bootstrap component is created. After that, it cleans up any subscriptions related to the previous component when it is destroyed. If you use this module with server-side rendering or multiple bootstrap components, you may get some issues. In that case, we recommend subscribing to the page view events manually.  Additionally, you can use the following include/exclude settings:  { include: [ '/full-uri-match' ] } – simple route matching{ include: [ '/public/' ] } – wildcard route matching{ include: [ /^/public/.*/ ] } – regular expression route matching  Example:  import { NgxPiwikProModule, NgxPiwikProRouterModule } from '@piwik-pro/ngx-piwik-pro'; ... @NgModule({ ... imports: [ ... NgxPiwikProModule.forRoot('account-address'), NgxPiwikProRouterModule.forRoot({ include: [...], exclude: [...] }) // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ] }) export class AppModule {}   ","version":"Next","tagName":"h2"},{"title":"Methods​","type":1,"pageTitle":"Angular","url":"/docs/js-api/js-api-analytics/frameworks/angular#methods","content":" Here's a list of all JS methods you can use in your Angular project. Descriptions and other information are available after clicking on links.  A  addDownloadExtensions()addEcommerceItem()  C  clearEcommerceCart()  D  deleteCustomDimension()  E  enableLinkTracking()  G  getCustomDimensionValue()getEcommerceItems()getLinkTrackingTimer()getUserId()getVisitorId()getVisitorInfo()  R  removeDownloadExtensions()removeEcommerceItem()resetUserId()  S  setCustomDimensionValue()setDownloadClasses()setDownloadExtensions()setEcommerceView()setIgnoreClasses()setLinkClasses()setLinkTrackingTimer()setUserId()  T  trackContentImpression()trackContentInteraction()trackEcommerceCartUpdate()trackEcommerceOrder()trackEvent()trackGoal()trackLink()trackPageView()trackSiteSearch() ","version":"Next","tagName":"h2"},{"title":"getCurrentUrl()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/getCurrentUrl()","content":"getCurrentUrl()","keywords":"","version":"Next"},{"title":"Methods","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/","content":"Methods Here's a list of all available JS methods for Consent Manager in Piwik PRO.","keywords":"","version":"Next"},{"title":"Getting started","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/getting-started","content":"Getting started Our JavaScript library has methods that let you use Consent Manager. You can use these methods in JavaScript. In short, our JavaScript library lets you: Get compliance typesGet and set complience settingsSend a data requestOpen a consent formTrack consent stats Next steps plain-java-script-consent-managermethods-consent-manager","keywords":"","version":"Next"},{"title":"getCrossDomainLinkingUrlParameter()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/getCrossDomainLinkingUrlParameter()","content":"getCrossDomainLinkingUrlParameter()","keywords":"","version":"Next"},{"title":"JS API Consent Manager","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/","content":"JS API Consent Manager getting-started.rst plain-javascript.rst methods/index.rst","keywords":"","version":"Next"},{"title":"getCookieDomain()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/getCookieDomain()","content":"getCookieDomain()","keywords":"","version":"Next"},{"title":"getCustomDimension() •","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/getCustomDimension()","content":"getCustomDimension() •","keywords":"","version":"Next"},{"title":"getComplianceTypes()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/getComplianceTypes()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"getComplianceTypes()","url":"/docs/js-api/js-api-consent-manager/methods/getComplianceTypes()#syntax","content":" ppms.cm.api('getComplianceTypes', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"getComplianceTypes()","url":"/docs/js-api/js-api-consent-manager/methods/getComplianceTypes()#parameters","content":" onFulfilled(types) (function, required) The fulfillment handler callback (called with result).  types (string, required) Array of consent types. Example: [&quot;remarketing&quot;, &quot;analytics&quot;]  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"getComplianceTypes()","url":"/docs/js-api/js-api-consent-manager/methods/getComplianceTypes()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"getNewComplianceTypes()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/getNewComplianceTypes()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"getNewComplianceTypes()","url":"/docs/js-api/js-api-consent-manager/methods/getNewComplianceTypes()#syntax","content":" ppms.cm.api('getNewComplianceTypes', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"getNewComplianceTypes()","url":"/docs/js-api/js-api-consent-manager/methods/getNewComplianceTypes()#parameters","content":" onFulfilled(types) (function, required) The fulfillment handler callback (called with result).  types (string, required) Array of consent types. Example: [&quot;remarketing&quot;, &quot;analytics&quot;]  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"getNewComplianceTypes()","url":"/docs/js-api/js-api-consent-manager/methods/getNewComplianceTypes()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"getComplianceSettings()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/getComplianceSettings()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"getComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/getComplianceSettings()#syntax","content":" ppms.cm.api('getComplianceSettings', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"getComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/getComplianceSettings()#parameters","content":" onFulfilled(settings) (function, required) The fulfillment handler callback (called with result).  settings (object, required) The consent setting object Example: {consents: {analytics: {status: -1, updatedAt: '2018-07-03T12:18:19.957Z'}}} Where consent.analytics is consent type and status indicate: -1: A vistior didn't interact. For example, they closed a consent popup without any decision.0: A visitor rejected consent.1: A vistior approved consent.  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"getComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/getComplianceSettings()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"setComplianceSettings()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/setComplianceSettings()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/setComplianceSettings()#syntax","content":" ppms.cm.api('setComplianceSettings', settings, onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/setComplianceSettings()#parameters","content":" settings (object, required) The consent settings object. Example: \\{consents: \\{analytics: \\{status: 1\\}\\}\\} Where consent.analytics is consent type and status indicate:  0: A visitor rejected consent.1: A visitor approved consent.  onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/setComplianceSettings()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"openConsentForm()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/openConsentForm()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"openConsentForm()","url":"/docs/js-api/js-api-consent-manager/methods/openConsentForm()#syntax","content":" ppms.cm.api('openConsentForm', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"openConsentForm()","url":"/docs/js-api/js-api-consent-manager/methods/openConsentForm()#parameters","content":" onFulfilled(popupId, consentTypes, consents) The fulfillment handler callback  popupId (string) ID of the consent popup. Example:&quot;ppms_cm_consent_popup_30a851b6-6bf4-45f9-9a53-583401bb5d60&quot; consentTypes (array) Array of consent types. Example: [&quot;analytics&quot;, &quot;conversion_tracking&quot;, &quot;remarketing&quot;] consents (string) Array list of all given consents. Example: [&quot;analytics&quot;, &quot;remarketing&quot;]  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"openConsentForm()","url":"/docs/js-api/js-api-consent-manager/methods/openConsentForm()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"setInitialComplianceSettings()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/setInitialComplianceSettings()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setInitialComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/setInitialComplianceSettings()#syntax","content":" ppms.cm.api('setInitialComplianceSettings', settings, onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setInitialComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/setInitialComplianceSettings()#parameters","content":" settings (object, required) The consent settings object. Example: {consents: ['analytics']} or['analytics'].  onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setInitialComplianceSettings()","url":"/docs/js-api/js-api-consent-manager/methods/setInitialComplianceSettings()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"Plain JavaScript","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/plain-javascript","content":"","keywords":"","version":"Next"},{"title":"sendDataRequest()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/sendDataRequest()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"sendDataRequest()","url":"/docs/js-api/js-api-consent-manager/methods/sendDataRequest()#syntax","content":" ppms.cm.api('sendDataRequest', request, onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"sendDataRequest()","url":"/docs/js-api/js-api-consent-manager/methods/sendDataRequest()#parameters","content":" request (object, required) The subject data request. Example: {content: 'user input', email: 'example@example.org', type: 'delete_data'} Where type is request type, and can be one of:  change_data for data alteration requestview_data for view data requestdelete_data for delete data request  onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"sendDataRequest()","url":"/docs/js-api/js-api-consent-manager/methods/sendDataRequest()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"index","type":0,"sectionRef":"#","url":"/docs/other/","content":"index Other If you need help with topics other than web API, JS API or SDKs, see this section. More help articles are also available in our help center. See more content-security-policy.rst event-type-detection.rst skip-link-tracking.rst data-layer-name.rst custom-popup-examples.rst","keywords":"","version":"Next"},{"title":"Installation​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-analytics/plain-javascript#installation","content":" Our JavaScript library can be used only after you installed our container's code (or only a tracking code) on your site. The code creates a &lt;script&gt; tag that asynchronously loads the JavaScript library in the website's body section.  If you haven't installed the code yet, you can find it directly in Piwik PRO in Menu &gt; Administration &gt; Sites &amp; apps &gt;Installation.  For more, see our installation guides:  Install a container (with a tracking code)Google Tag Manager: install a container (with a tracking code)Google Tag Manager: install only a tracking codeInstapage: install a container (with a tracking code)No Piwik PRO Tag Manager: install a tracking codeSquarespace: install a container (with a tracking code)WordPress: install a container (with a tracking code)  ","version":"Next","tagName":"h2"},{"title":"Methods used for calls​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-analytics/plain-javascript#methods-used-for-calls","content":" In JavaScript, our methods can be called in a few ways:  JS (queue): After installing our container's code, it'll create the _paq object (a queue). You can use the push() method to add methods to the queue. Our tracker will then access and proceed these methods. With this method, you can also use this keyword to send a few methods within one call.JS (direct): After installing our container's code, you can access our tracker directly (and don't use the queue) with thegetTracker() or getAsyncTracker() method.  ","version":"Next","tagName":"h2"},{"title":"push()​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-analytics/plain-javascript#push","content":" The push() method adds methods to the _paq object (a queue). The methods are called after the container's code (or a tracking code) loads on a page. They are called synchronously (one by one).  Syntax​  _paq.push(command)   Parameters​  command (string, required) An array containing our JavaScript methods.  Examples​  To send a page view:  _paq.push([&quot;trackPageView&quot;]);   To send a custom event:  _paq.push([&quot;trackEvent&quot;, &quot;Button&quot;, &quot;Sign up&quot;]);   ","version":"Next","tagName":"h3"},{"title":"JS this keyword​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-analytics/plain-javascript#js-this-keyword","content":" The JavaScript this keyword lets you add a few methods to the _paqobject (a queue) in a single call.  Examples​  To send a page view and a custom event at once:  _paq.push([function () { this.trackPageView(); this.trackEvent(&quot;Button&quot;, &quot;Sign up&quot;); }]);   ","version":"Next","tagName":"h3"},{"title":"getTracker()​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-analytics/plain-javascript#gettracker","content":" The getTracker() method gives you a direct access to an async tracker. An async tracker is the basic one used for collecting data and using async tags. This method lets you read the return value of the sent method. It also lets you send methods for a few sites or apps at once.  Syntax​  Piwik.getTracker(account-address, site-id)   Parameters​  account-address (string, required) Account address in Piwik PRO. Example: https://example.piwik.pro/  site-id (string, required) Your site or app ID in Piwik PRO where you want to send data. Where to find it?  Return value​  An object with account details in Piwik PRO.  Examples​  To send a page view:  var jstc = Piwik.getTracker(&quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot;); jstc.trackPageView();   To send a custom event:  var jstc = Piwik.getTracker(&quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot;); jstc.trackEvent(&quot;trackEvent&quot;, &quot;Button&quot;, &quot;Sign up&quot;);   ","version":"Next","tagName":"h3"},{"title":"getAsyncTracker()​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-analytics/plain-javascript#getasynctracker","content":" The getAsyncTracker() method gives you a direct access to an async tracker. An async tracker is used additionally if you've installed the async container on your site. This method lets you read the return value of the sent method. It also lets you send methods for a few sites or apps at once.  Syntax​  Piwik.getTracker(account-address, site-id)   Parameters​  account-address (string, required) Account address in Piwik PRO. Example: https://example.piwik.pro/  site-id (string, required) Your site or app ID in Piwik PRO where you want to send data. Where to find it?  Return value​  An object with account details in Piwik PRO.  Examples​  To send a page view:  var jstc = Piwik.getAsyncTracker(&quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot;); jstc.trackPageView();   To send a custom event:  var jstc = Piwik.getAsyncTracker(&quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot;); jstc.trackEvent(&quot;trackEvent&quot;, &quot;Button&quot;, &quot;Sign up&quot;);   ","version":"Next","tagName":"h3"},{"title":"Reserved variable names​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-analytics/plain-javascript#reserved-variable-names","content":" When you use our JavaScript library, you can't name your variables with names that we've set as global variables -- it can break the tracking. Here's the list of reserved variable names:  Piwik_paqJSON_PIWIKpiwikPluginAsyncInitpiwikAsyncInitAnalyticsTrackerpiwik_install_trackerpiwik_tracker_pausepiwik_download_extensionspiwik_hosts_aliaspiwik_ignore_classespiwik_logpiwik_tracksevenTag ","version":"Next","tagName":"h2"},{"title":"trackCloseButtonClick()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/trackCloseButtonClick()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"trackCloseButtonClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackCloseButtonClick()#syntax","content":" ppms.cm.api('trackCloseButtonClick', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"trackCloseButtonClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackCloseButtonClick()#parameters","content":" onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"trackCloseButtonClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackCloseButtonClick()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"trackMainFormView()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/trackMainFormView()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"trackMainFormView()","url":"/docs/js-api/js-api-consent-manager/methods/trackMainFormView()#syntax","content":" ppms.cm.api('trackMainFormView', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"trackMainFormView()","url":"/docs/js-api/js-api-consent-manager/methods/trackMainFormView()#parameters","content":" onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"trackMainFormView()","url":"/docs/js-api/js-api-consent-manager/methods/trackMainFormView()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"trackPrivacyPolicyLinkView()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/trackPrivacyPolicyLinkView()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"trackPrivacyPolicyLinkView()","url":"/docs/js-api/js-api-consent-manager/methods/trackPrivacyPolicyLinkView()#syntax","content":" ppms.cm.api('trackPrivacyPolicyLinkView', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"trackPrivacyPolicyLinkView()","url":"/docs/js-api/js-api-consent-manager/methods/trackPrivacyPolicyLinkView()#parameters","content":" onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"trackPrivacyPolicyLinkView()","url":"/docs/js-api/js-api-consent-manager/methods/trackPrivacyPolicyLinkView()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"trackSaveChoicesClick()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/trackSaveChoicesClick()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"trackSaveChoicesClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackSaveChoicesClick()#syntax","content":" ppms.cm.api('trackSaveChoicesClick', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"trackSaveChoicesClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackSaveChoicesClick()#parameters","content":" onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"trackSaveChoicesClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackSaveChoicesClick()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"SDKs","type":0,"sectionRef":"#","url":"/docs/sdks/","content":"SDKs Our SDKs let you collect user data from mobile apps built for Android, Flutter, React Native and iOS. With over 30 built-in methods, you can easily track screen views, goals, ecommerce orders and more. See more android-sdk/index.rst Flutter-sdk.md iOS-sdk.md React-Native-sdk.md","keywords":"","version":"Next"},{"title":"trackAgreeToAllClick()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/trackAgreeToAllClick()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"trackAgreeToAllClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackAgreeToAllClick()#syntax","content":" ppms.cm.api('trackAgreeToAllClick', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"trackAgreeToAllClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackAgreeToAllClick()#parameters","content":" onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"trackAgreeToAllClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackAgreeToAllClick()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"Custom popup examples","type":0,"sectionRef":"#","url":"/docs/other/custom-popup-examples","content":"","keywords":"","version":"Next"},{"title":"Introduction​","type":1,"pageTitle":"Custom popup examples","url":"/docs/other/custom-popup-examples#introduction","content":" Since version 10.1 of PPAS there is a possiblity of creating aCustom popup tag template. To add one, head to Tag Manager and while onTags tab, choose+ Crate new tag. From there you can select Custom popup template. Once added, you will be greated by default template code which consists of overlay, popup box and close button. To highlight what can be created with the use of this template, we decided to share some example implementations that can be further modified and expanded.  ","version":"Next","tagName":"h2"},{"title":"Example 1​","type":1,"pageTitle":"Custom popup examples","url":"/docs/other/custom-popup-examples#example-1","content":"   Example code:  popup-examples/example-popup-1.html  Note Handling of the close button is provided out of the box, as long as the class name ppms-popup-close-button is unchanged. Your own JavaScript code to handle Subscribe now button needs to be provided.  ","version":"Next","tagName":"h2"},{"title":"Example 2​","type":1,"pageTitle":"Custom popup examples","url":"/docs/other/custom-popup-examples#example-2","content":"   Example code:  popup-examples/example-popup-2.html  Note Handling of the close button is provided out of the box, as long as the class name ppms-popup-close-button is unchanged. Your own JavaScript code to handle Sign up now button needs to be provided.  ","version":"Next","tagName":"h2"},{"title":"Example 3​","type":1,"pageTitle":"Custom popup examples","url":"/docs/other/custom-popup-examples#example-3","content":"   Example code:  popup-examples/example-popup-3.html  Note Handling of the close button is provided out of the box, as long as the class name ppms-popup-close-button is unchanged. Your own JavaScript code to handle Sure, let's talk andNah, I'm fine buttons needs to be provided. ","version":"Next","tagName":"h2"},{"title":"addEcommerceItem()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-analytics/methods/addEcommerceItem()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"addEcommerceItem()","url":"/docs/js-api/js-api-analytics/methods/addEcommerceItem()#syntax","content":" JS addEcommerceItem(productSKU[, productName[, productCategory[, productPrice[, productQuantity]]]]) Angular addEcommerceItem(productSKU: string, productName: string, productCategory: string | string[], productPrice: number, productQuantity: number) React addEcommerceItem(productSKU: string, productName: string, productCategory: string | string[], productPrice: number, productQuantity: number)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"addEcommerceItem()","url":"/docs/js-api/js-api-analytics/methods/addEcommerceItem()#parameters","content":" productSKU (string, required) The stock-keeping unit of the added product.  productName (string, optional) The name of the added product.  productCategory (string | array&lt;string&gt;, optional) The category of the added product. It can be an array of up to 5 categories.  productPrice (number, optional) The price of the added product.  productQuantity (number, optional) The number of added items.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"addEcommerceItem()","url":"/docs/js-api/js-api-analytics/methods/addEcommerceItem()#examples","content":" To add one product to the cart:  JS (queue) _paq.push([ &quot;addEcommerceItem&quot;, &quot;584340&quot;, &quot;Specialized Stumpjumper&quot;, &quot;Mountain bike&quot;, 5000, 1, ]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.addEcommerceItem( &quot;addEcommerceItem&quot;, &quot;584340&quot;, &quot;Specialized Stumpjumper&quot;, &quot;Mountain bike&quot;, 5000, 1 ); Angular React  To add two products to the cart:  JS (queue) _paq.push([ &quot;addEcommerceItem&quot;, &quot;584340&quot;, &quot;Specialized Stumpjumper&quot;, &quot;Mountain bike&quot;, 5000, 1, ]); _paq.push([ &quot;addEcommerceItem&quot;, &quot;460923&quot;, &quot;Specialized Chamonix&quot;, &quot;Helmets&quot;, 200, 1, ]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.addEcommerceItem( &quot;addEcommerceItem&quot;, &quot;584340&quot;, &quot;Specialized Stumpjumper&quot;, &quot;Mountain bike&quot;, 5000, 1 ); jstc.addEcommerceItem( &quot;addEcommerceItem&quot;, &quot;460923&quot;, &quot;Specialized Chamonix&quot;, &quot;Helmets&quot;, 200, 1 ); Angular React  To add a product and send a cart update to Piwik PRO:  JS (queue) _paq.push([ &quot;addEcommerceItem&quot;, &quot;584340&quot;, &quot;Specialized Stumpjumper&quot;, &quot;Mountain bike&quot;, 5000, 1, ]); _paq.push([&quot;trackEcommerceCartUpdate&quot;, 5000]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.addEcommerceItem( &quot;addEcommerceItem&quot;, &quot;584340&quot;, &quot;Specialized Stumpjumper&quot;, &quot;Mountain bike&quot;, 5000, 1 ); jstc.trackEcommerceCartUpdate(5000); Angular React  To add two products to the cart and send a cart update:  JS (queue) _paq.push([ &quot;addEcommerceItem&quot;, &quot;584340&quot;, &quot;Specialized Stumpjumper&quot;, &quot;Mountain bike&quot;, 5000, 1, ]); _paq.push([ &quot;addEcommerceItem&quot;, &quot;460923&quot;, &quot;Specialized Chamonix&quot;, &quot;Helmets&quot;, 200, 1, ]); _paq.push([&quot;trackEcommerceCartUpdate&quot;, 5200]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.addEcommerceItem( &quot;addEcommerceItem&quot;, &quot;584340&quot;, &quot;Specialized Stumpjumper&quot;, &quot;Mountain bike&quot;, 5000, 1 ); jstc.addEcommerceItem( &quot;addEcommerceItem&quot;, &quot;460923&quot;, &quot;Specialized Chamonix&quot;, &quot;Helmets&quot;, 200, 1 ); jstc.trackEcommerceCartUpdate(5200); Angular React  To track a confirmed order:  JS (queue) // register all purchased items _paq.push([ &quot;addEcommerceItem&quot;, &quot;584340&quot;, // SKU &quot;Specialized Stumpjumper&quot;, // name &quot;Mountain bike&quot;, // category 5000, // price 1, // quantity ]); _paq.push([ &quot;addEcommerceItem&quot;, &quot;460923&quot;, // SKU &quot;Specialized Chamonix&quot;, // name &quot;Helmets&quot;, // category 200, // price 1, // quantity ]); // track order _paq.push([ &quot;trackEcommerceOrder&quot;, &quot;43967392&quot;, // order ID 5250, // grand total (value + tax + discount + shipping) 5200, // sub total (value + tax + discount) 970, // tax 150, // shipping 100, // discount ]); JS (direct) var jstc = Piwik.getTracker( &quot;https://example.com/&quot;, &quot;45e07cbf-c8b3-42f3-a6d6-a5a176f623ef&quot; ); jstc.trackEcommerceOrder( &quot;584340&quot;, // SKU &quot;Specialized Stumpjumper&quot;, // name &quot;Mountain bike&quot;, // category 5000, // price 1 // quantity ); jstc.trackEcommerceOrder( &quot;460923&quot;, // SKU &quot;Specialized Chamonix&quot;, // name &quot;Helmets&quot;, // category 200, // price 1 // quantity ); // track order jstc.trackEcommerceOrder( &quot;43967392&quot;, // order ID 5250, // grand total (value + tax + discount + shipping) 5200, // sub total (value + tax + discount) 970, // tax 150, // shipping 100 // discount ); Angular React  ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"addEcommerceItem()","url":"/docs/js-api/js-api-analytics/methods/addEcommerceItem()#notes","content":" The cart with added items is not stored in the browser storage. Make sure that you add all items again after the page reloads.If a product with the same SKU is already in the cart, it'll be removed and replaced with the one added with the addEcommerceItem() method.This method doesn't send any data to Piwik PRO. It just creates a cart. You can use the trackEcommerceCartUpdate() or trackEcommerceOrder() method to send cart data to Piwik PRO.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"addEcommerceItem()","url":"/docs/js-api/js-api-analytics/methods/addEcommerceItem()#related-methods","content":" removeEcommerceItem()clearEcommerceCart()getEcommerceItems()setEcommerceView()trackEcommerceCartUpdate()trackEcommerceOrder() ","version":"Next","tagName":"h2"},{"title":"Methods","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/","content":"Methods Here's a list of methods that you can use with our SDK for Android:","keywords":"","version":"Next"},{"title":"Android SDK","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/","content":"Android SDK getting-started.rst methods/index.rst","keywords":"","version":"Next"},{"title":"trackReminderWidgetView()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/trackReminderWidgetView()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"trackReminderWidgetView()","url":"/docs/js-api/js-api-consent-manager/methods/trackReminderWidgetView()#syntax","content":" ppms.cm.api('trackReminderWidgetView', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"trackReminderWidgetView()","url":"/docs/js-api/js-api-consent-manager/methods/trackReminderWidgetView()#parameters","content":" onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"trackReminderWidgetView()","url":"/docs/js-api/js-api-consent-manager/methods/trackReminderWidgetView()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"Plain JavaScript","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/plain-javascript","content":"","keywords":"","version":"Next"},{"title":"Installation​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-consent-manager/plain-javascript#installation","content":" Our JavaScript library can be used only after you installed our container's code (or only a tracking code) on your site. The code creates a &lt;script&gt; tag that asynchronously loads the JavaScript library in the website's body section.  If you haven't installed the code yet, you can find it directly in Piwik PRO in Menu &gt; Administration &gt; Sites &amp; apps &gt;Installation.  For more, see our installation guides:  Install a container (with a tracking code)Google Tag Manager: install a container (with a tracking code)Google Tag Manager: install only a tracking codeInstapage: install a container (with a tracking code)No Piwik PRO Tag Manager: install a tracking codeSquarespace: install a container (with a tracking code)WordPress: install a container (with a tracking code)  ","version":"Next","tagName":"h2"},{"title":"Methods used for calls​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-consent-manager/plain-javascript#methods-used-for-calls","content":" In JavaScript, our methods can be called in this way:  JS (queue): After installing our container’s code, it’ll create the _paq object (a queue). You can use the ppms.cm.api method to add methods to the queue. Our tracker will then access and proceed these methods.  ","version":"Next","tagName":"h2"},{"title":"ppms.cm.api​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-consent-manager/plain-javascript#ppmscmapi","content":" The ppms.cm.api method adds methods to the _paq object (a queue). The methods are called after the container’s code (or a tracking code) loads on a page. They are called synchronously (one by one).  Syntax​  ppms.cm.api(command, ...args)   Parameters​  command (string, required) Command name  args (optional) Command arguments. The number of arguments and their function depend on command.  Returns​  Commands are expected to be run asynchronously and return no value. Type: undefined  Notes​  All commands work in the context of the current visitor and website. Additionally, they sometimes require communication with a Piwik PRO's server and are asynchronous.Callback functions are used to provide response value or information about errors.onSuccess(...args) callback is required, with the exception ofopenConsentForm command where it is optional.onFailure(exception) callback is optional and if is specified, any error object occurred will be passed as an argument. If not specified, an error is reported directly on the console output.  ","version":"Next","tagName":"h3"},{"title":"Custom consent form​","type":1,"pageTitle":"Plain JavaScript","url":"/docs/js-api/js-api-consent-manager/plain-javascript#custom-consent-form","content":" Our Consent Manager JS API lets you build a custom consent form in place of the default one.  To turn on custom consent form, follow these steps:  Log in to Piwik PRO.Go to Menu.Go to Administration &gt; Sites &amp; apps.Navigate to Privacy.Turn on Ask visitors for consent.Turn on Use a custom consent form. ","version":"Next","tagName":"h2"},{"title":"trackRejectAllClick()","type":0,"sectionRef":"#","url":"/docs/js-api/js-api-consent-manager/methods/trackRejectAllClick()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"trackRejectAllClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackRejectAllClick()#syntax","content":" ppms.cm.api('trackRejectAllClick', onFulfilled, onRejected);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"trackRejectAllClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackRejectAllClick()#parameters","content":" onFulfilled() (function, required) The fulfillment handler callback (called with result).  onRejected(error) The rejection handler callback (called with error code). If not specified, the exception will be thrown in the main stack trace.  error (string | object, required) Error code or exception  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"trackRejectAllClick()","url":"/docs/js-api/js-api-consent-manager/methods/trackRejectAllClick()#examples","content":" See custom consent form example. ","version":"Next","tagName":"h2"},{"title":"audienceManagerSetProfileAttribute() 🗑","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/audienceManagerSetProfileAttribute()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"audienceManagerSetProfileAttribute() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerSetProfileAttribute()#syntax","content":" Java TrackHelper.track() .audienceManagerSetProfileAttribute(&quot;name&quot;, &quot;value&quot;) .add(&quot;name&quot;, &quot;value&quot;) .with(getTracker()); Kotlin TrackHelper.track() .audienceManagerSetProfileAttribute(&quot;name&quot;, &quot;value&quot;) .add(&quot;name&quot;, &quot;value&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"audienceManagerSetProfileAttribute() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerSetProfileAttribute()#parameters","content":" name (string, required) The name of the profile attribute. Example: plan type.  value (string, required) The value of the profile attribute. Example: premium.  add() (chain method) Other attributes that you want to send with the same event.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"audienceManagerSetProfileAttribute() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerSetProfileAttribute()#examples","content":" To set the attribute plan type with the value premium and send it with .with(getTracker()) to Audience Manager:  Java TrackHelper.track() .audienceManagerSetProfileAttribute(&quot;plan type&quot;, &quot;premium&quot;) .add(&quot;&quot;, &quot;&quot;) .with(getTracker()); Kotlin TrackHelper.track() .audienceManagerSetProfileAttribute((&quot;plan type&quot;), &quot;premium&quot;) .add(&quot;&quot;, &quot;&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"audienceManagerSetProfileAttribute() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerSetProfileAttribute()#notes","content":" Each event always sends the following attributes: Site or app ID, Visitor ID, and Device ID.If setAnonymizationState(false) is set and User ID and Email are set, each event will also send User ID and Email.You can see all added attributes in Audience Manager &gt; Profile.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"audienceManagerSetProfileAttribute() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerSetProfileAttribute()#related-methods","content":" android audienceManagerGetProfileAttributes()android OnCheckAudienceMembership() ","version":"Next","tagName":"h2"},{"title":"Custom data layer name","type":0,"sectionRef":"#","url":"/docs/other/data-layer-name","content":"","keywords":"","version":"Next"},{"title":"Choose a unique data layer name​","type":1,"pageTitle":"Custom data layer name","url":"/docs/other/data-layer-name#choose-a-unique-data-layer-name","content":" Use a unique data layer name. Make sure that it's not used by other tools installed on your site or app. If the names are the same, the tools can interfere with each other.  To check if the data layer name is used on your site or app, follow these steps:  Pick your new data layer name. Example: customDataLayer.In a browser's console, run the following script with the picked name:  var dataLayerName = &quot;customDataLayer&quot;; !window.hasOwnProperty(dataLayerName);   If the return statement is true, you can use this name safely. It means that no other tool is using this name.  ","version":"Next","tagName":"h2"},{"title":"Rename your data layer​","type":1,"pageTitle":"Custom data layer name","url":"/docs/other/data-layer-name#rename-your-data-layer","content":" To rename the data layer, follow these steps:  Log in to Piwik PRO.Go to Menu &gt; Administration.Navigate to Sites &amp; apps.Select the site or app for which you want to rename the data layer.Navigate to Installation.Copy the basic container's code. You'll modify this code in the next steps.    In the copied code, change dataLayer to a custom name.  (window, document, 'dataLayer', '69bc995f-c40a-42ae-b756-b8b9fbc16508');     Paste the code right after the opening &lt;body&gt; tag on every page of your website or app.Optionally, copy the additional container's code. You'll modify this code in the next steps.    In the copied code, change dataLayer to a custom name.  (window, document, 'dataLayer', '69bc995f-c40a-42ae-b756-b8b9fbc16508');     Note Note: If you're using both containers, use the same data layer name in each container. Otherwise, things can break.  Paste the code inside &lt;head&gt;&lt;/head&gt; tags on your website or app. Don’t add this code elsewhere because it may slow down your site and tracking won’t work correctly.Replace all existing references to the old data layer name. For example, if you use  dataLayer.push({event: &quot;test-event&quot;});   replace it with  customDataLayer.push({event: &quot;test-event&quot;});   ","version":"Next","tagName":"h2"},{"title":"WordPress plugin: rename your data layer​","type":1,"pageTitle":"Custom data layer name","url":"/docs/other/data-layer-name#wordpress-plugin-rename-your-data-layer","content":" If you installed our containers with the WordPress plugin, you can quickly rename the data layer in the plugin settings.  To rename the data layer in our WordPress plugin, follow these steps:  In your WordPress admin panel, go to Settings &gt; Piwik PRO.In Data layer, change the name to a custom one.    Click Save changes.Replace all existing references to the old data layer name. For example, if you use  dataLayer.push({event: &quot;test-event&quot;});   replace it with  customDataLayer.push({event: &quot;test-event&quot;});  ","version":"Next","tagName":"h2"},{"title":"setAnonymizationState()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setAnonymizationState()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setAnonymizationState()","url":"/docs/sdks/android-sdk/methods/setAnonymizationState()#syntax","content":" Java ((PiwikApplication) getApplication()).getTracker().setAnonymizationState(isAnonymous); Kotlin (application as PiwikApplication).tracker.setAnonymizationState( isAnonymous )   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setAnonymizationState()","url":"/docs/sdks/android-sdk/methods/setAnonymizationState()#parameters","content":" isAnonymous (boolean, required) Weather a user is anonymous or non-anonymous. True: anonymous. False: non-anonymous.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setAnonymizationState()","url":"/docs/sdks/android-sdk/methods/setAnonymizationState()#examples","content":" To mark a visitor as non-anonymous:  Java ((PiwikApplication) getApplication()).getTracker().setAnonymizationState(false); Kotlin (application as PiwikApplication).tracker.setAnonymizationState( false )   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"setAnonymizationState()","url":"/docs/sdks/android-sdk/methods/setAnonymizationState()#related-methods","content":" android isAnonymizationOn() ","version":"Next","tagName":"h2"},{"title":"setDeviceId()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setDeviceId()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setDeviceId()","url":"/docs/sdks/android-sdk/methods/setDeviceId()#syntax","content":" Java getTracker().setDeviceId(deviceID) Kotlin tracker.deviceId = deviceID   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setDeviceId()","url":"/docs/sdks/android-sdk/methods/setDeviceId()#parameters","content":" deviceID (string, optional) A custom device ID. If the value is not set, the automatic value is generated.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setDeviceId()","url":"/docs/sdks/android-sdk/methods/setDeviceId()#examples","content":" To set a device ID to ABC123:  Java getTracker().setDeviceId(ABC123) Kotlin tracker.deviceId = ABC123   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"setDeviceId()","url":"/docs/sdks/android-sdk/methods/setDeviceId()#notes","content":" The device ID won't be sent if setAnonymizationState(true) is set.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"setDeviceId()","url":"/docs/sdks/android-sdk/methods/setDeviceId()#related-methods","content":" android setTrackDeviceId()android getDeviceId() ","version":"Next","tagName":"h2"},{"title":"isAnonymizationOn()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/isAnonymizationOn()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"isAnonymizationOn()","url":"/docs/sdks/android-sdk/methods/isAnonymizationOn()#syntax","content":" Java ((PiwikApplication) getApplication()).getTracker().isAnonymizationOn(); Kotlin (application as PiwikApplication).tracker.isAnonymizationOn   ","version":"Next","tagName":"h2"},{"title":"Returns​","type":1,"pageTitle":"isAnonymizationOn()","url":"/docs/sdks/android-sdk/methods/isAnonymizationOn()#returns","content":" Whether a user is marked as anonymous or non-anonymous. Format: True: is anonymous. False: is non-anonymous. Type: Boolean  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"isAnonymizationOn()","url":"/docs/sdks/android-sdk/methods/isAnonymizationOn()#examples","content":" To check if data anonymization is turned on or off for a given visitor:  Java ((PiwikApplication) getApplication()).getTracker().isAnonymizationOn(); Kotlin (application as PiwikApplication).tracker.isAnonymizationOn   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"isAnonymizationOn()","url":"/docs/sdks/android-sdk/methods/isAnonymizationOn()#related-methods","content":" android setAnonymizationState() ","version":"Next","tagName":"h2"},{"title":"getDeviceId()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/getDeviceId()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"getDeviceId()","url":"/docs/sdks/android-sdk/methods/getDeviceId()#syntax","content":" Java getTracker().getDeviceId(); Kotlin tracker.deviceId   ","version":"Next","tagName":"h2"},{"title":"Returns​","type":1,"pageTitle":"getDeviceId()","url":"/docs/sdks/android-sdk/methods/getDeviceId()#returns","content":" The unique device ID Format: Example: abcd123e-a123-bcFG-d123 Type: String  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"getDeviceId()","url":"/docs/sdks/android-sdk/methods/getDeviceId()#examples","content":" To get a device ID:  Java getTracker().getDeviceId(); Kotlin tracker.deviceId   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"getDeviceId()","url":"/docs/sdks/android-sdk/methods/getDeviceId()#related-methods","content":" android setTrackDeviceId()android setDeviceId() ","version":"Next","tagName":"h2"},{"title":"Event processing","type":0,"sectionRef":"#","url":"/docs/other/event-type-detection","content":"","keywords":"","version":"Next"},{"title":"Other events​","type":1,"pageTitle":"Event processing","url":"/docs/other/event-type-detection#other-events","content":" Here are events that aren't detected in the described way. They are a result of the post-processing of an event or a session.  Abandoned cart: When a session did not track a OrderCompletedevent, the last event of that type will be converted to AbandonedCart.  Excluded event: There are several ways of excluding an event (e.g. by blacklisting source IP or User-Agent header matching). If an event matches given criteria it will be excluded from the reports but is still tracked and receives ExcludedEvent type. If you experien any report abnormalities you may check Tracker Debugger if any of the legitimate traffic is not excluded by mistake.  Broken event: The last type is assigned to the tracked event when any error occurs during the processing (e.g. you provided incorrect value in the idgoal parameter, provided idsite does not exist, etc). That way you can still check it in the tracker debugger and attached error message will tell you what is wrong with it. ","version":"Next","tagName":"h2"},{"title":"setDispatchInterval()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setDispatchInterval()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setDispatchInterval()","url":"/docs/sdks/android-sdk/methods/setDispatchInterval()#syntax","content":" Java getTracker().setDispatchInterval(milliseconds) Kotlin tracker.dispatchInterval = milliseconds   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setDispatchInterval()","url":"/docs/sdks/android-sdk/methods/setDispatchInterval()#parameters","content":" milliseconds (number, required) The interval time (in milliseconds) for dispatching tracked events. If 0 milliseconds, events will be sent right away. If -1 milliseconds, events won't be sent automatically, and you'll be able to send them manually.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setDispatchInterval()","url":"/docs/sdks/android-sdk/methods/setDispatchInterval()#examples","content":" To set the dispatch interval time to 60 seconds (60*1000 milliseconds):  Java getTracker().setDispatchInterval(60 * 1000) Kotlin tracker.dispatchInterval = 60 * 1000   To block sending events automatically and send it manually:  Java Tracker tracker = ((MyApplication) getApplication()).getTracker(); tracker.setDispatchInterval(-1); // Catch and track exception try { cartItems = getCartItems(); } catch (Exception e) { TrackHelper.track().exception(e).description(e.getMessage()); tracker.dispatch(); cartItems = null; } Kotlin val tracker: Tracker = (application as PiwikApplication).getTracker() tracker.dispatchInterval = -1 // Catch and track exception try { cartItems = tracker.getCartItems() } catch (e: java.lang.Exception) { TrackHelper.track().exception(e).description(e.message) tracker.dispatch() cartItems = null }   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"setDispatchInterval()","url":"/docs/sdks/android-sdk/methods/setDispatchInterval()#notes","content":" If there's more than one event in the queue, data is sent in bulk using the POST method with the JSON payload. ","version":"Next","tagName":"h2"},{"title":"setIncludeDefaultCustomVars()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setIncludeDefaultCustomVars()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setIncludeDefaultCustomVars()","url":"/docs/sdks/android-sdk/methods/setIncludeDefaultCustomVars()#syntax","content":" Java getTracker().setIncludeDefaultCustomVars(isFetched); Kotlin tracker.includeDefaultCustomVars = isFetched   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setIncludeDefaultCustomVars()","url":"/docs/sdks/android-sdk/methods/setIncludeDefaultCustomVars()#parameters","content":" isFetched (boolean, required) Whether the platform version, OS version and app version is fetched from the tracker instance or not. True: is fetched. False: is not fetched.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setIncludeDefaultCustomVars()","url":"/docs/sdks/android-sdk/methods/setIncludeDefaultCustomVars()#examples","content":" To turn off automatic fetching of the platform version, OS version and app version from the tracker instance:  Java getTracker().setIncludeDefaultCustomVars(false); Kotlin tracker.includeDefaultCustomVars = false   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"setIncludeDefaultCustomVars()","url":"/docs/sdks/android-sdk/methods/setIncludeDefaultCustomVars()#notes","content":" If setIncludeDefaultCustomVars(true) is set, indexes 1-3 are used to track the platform version, OS version and app version as custom variables.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"setIncludeDefaultCustomVars()","url":"/docs/sdks/android-sdk/methods/setIncludeDefaultCustomVars()#related-methods","content":" android track().dimension()android track().variable()android track().visitVariables() ","version":"Next","tagName":"h2"},{"title":"setOptOut()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setOptOut()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setOptOut()","url":"/docs/sdks/android-sdk/methods/setOptOut()#syntax","content":" Java getTracker().setOptOut(isOptOut); Kotlin tracker.isOptOut = isOptOut   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setOptOut()","url":"/docs/sdks/android-sdk/methods/setOptOut()#parameters","content":" isOptOut (boolean, required) Whether or not. True: is opted out. False: is opted in.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setOptOut()","url":"/docs/sdks/android-sdk/methods/setOptOut()#examples","content":" To set the opt-out flag and don't collect any data:  Java getTracker().setOptOut(true); Kotlin tracker.isOptOut = true  ","version":"Next","tagName":"h2"},{"title":"Skip link tracking with a data-disable-delay attribute","type":0,"sectionRef":"#","url":"/docs/other/skip-link-tracking","content":"","keywords":"","version":"Next"},{"title":"Introduction​","type":1,"pageTitle":"Skip link tracking with a data-disable-delay attribute","url":"/docs/other/skip-link-tracking#introduction","content":" As per theMDNdefinition:  The &lt;a&gt; HTML element (or anchor element), with its href attribute, creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.  If you wish to trigger tags, when the anchor element is clicked, they need time to execute before the redirect happens. That is why our container is equipped with a delay mechanism.  ","version":"Next","tagName":"h2"},{"title":"Delay mechanism​","type":1,"pageTitle":"Skip link tracking with a data-disable-delay attribute","url":"/docs/other/skip-link-tracking#delay-mechanism","content":" Each app or site you create has the option toDelay loading the next page in its settings. You can adjust this value in Data collection -&gt; Other options section in your app settings underAdministration -&gt; Sites &amp; apps. The default value for each app is 500ms. Once you assign a trigger and a tag to an anchor element on your page, this mechanism will ensure that the tag fires and has time to execute, before the visitor is redirected to the desired page.  However, not every anchor element is supposed to perform a redirect. One such example can be SPA pages where a elements can serve as buttons. In such case, the action performed inside the container can break the functionality of the page. That is where the data-disable-delayattribute comes in.  ","version":"Next","tagName":"h2"},{"title":"data-disable-delay attribute​","type":1,"pageTitle":"Skip link tracking with a data-disable-delay attribute","url":"/docs/other/skip-link-tracking#data-disable-delay-attribute","content":" data-disable-dalay is special custom attribute that is recognized by the container. Once the anchor element is clicked and the aforementioned attribute is detected on the element, it tells the container to skip the execution of the logic responsible for delaying the default action. Listeners attached to the element are executed immediatly after clicking.  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"Skip link tracking with a data-disable-delay attribute","url":"/docs/other/skip-link-tracking#example","content":" Let's assume that your Tag Manager setup includes aCustom code (async) tag (the contents of the tag does not matter in this case) and a basicClick trigger assigned to the said tag.On your page, the following code is present:  &lt;a id='link-id' href=&quot;/&quot; &gt; link &lt;/a&gt; &lt;script&gt; window.setTimeout(function() { document.addEventListener('click', function(event) { if(event.target.id === 'link-id') { event.preventDefault() } }) }, 1000) &lt;/script&gt;   Once the visitor clicks the link, a redirect happens. This is not desired, since the listener performs apreventDefault action.Now let's modify the anchor element to look like this:  &lt;a id='link-id' href=&quot;/&quot; data-disable-delay &gt; link &lt;/a&gt;   After the modification is done, clicking the link no longer performs a redirect and fires the click listener immediately. ","version":"Next","tagName":"h3"},{"title":"setDryRunTarget()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setDryRunTarget()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setDryRunTarget()","url":"/docs/sdks/android-sdk/methods/setDryRunTarget()#syntax","content":" Java getTracker().setDryRunTarget(dryRunTarget); Kotlin tracker.dryRunTarget = Collections.synchronizedList(dryRunTarget)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setDryRunTarget()","url":"/docs/sdks/android-sdk/methods/setDryRunTarget()#parameters","content":" dryRunTarget (Collection, required) The data structure where the data should be passed into. Type: List&lt;Packet&gt;. Set it to null to disable a dry-run flag.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setDryRunTarget()","url":"/docs/sdks/android-sdk/methods/setDryRunTarget()#examples","content":" To set a dry-run flag:  Java getTracker().setDryRunTarget(Collections.synchronizedList(new ArrayList&lt;Packet&gt;())); Kotlin tracker.dryRunTarget = Collections.synchronizedList(Collections.synchronizedList(ArrayList()))  ","version":"Next","tagName":"h2"},{"title":"OnCheckAudienceMembership() 🗑","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/OnCheckAudienceMembership()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"OnCheckAudienceMembership() 🗑","url":"/docs/sdks/android-sdk/methods/OnCheckAudienceMembership()#syntax","content":" Java getTracker().checkAudienceMembership(audienceId, new Tracker.OnCheckAudienceMembership() { @Override public void onChecked(boolean isMember) { // handle result } @Override public void onError(String errorData) { // handle error } }); Kotlin tracker.checkAudienceMembership( binding.audienceId.text.toString(), object : OnCheckAudienceMembership { override fun onChecked(isMember: Boolean) { // handle result } override fun onError(errorData: String) { var errorData: String? = errorData errorData = if (TextUtils.isEmpty(errorData)) &quot;Network error&quot; else errorData // handle error } })   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"OnCheckAudienceMembership() 🗑","url":"/docs/sdks/android-sdk/methods/OnCheckAudienceMembership()#parameters","content":" audienceId (string, required) The audience ID that you want to check. You can find it in Audience Manager &gt; Audiences.  OnCheckAudienceMembership() (required) The callback to handle a request result. The call is asynchronous. It has two methods void onChecked(boolean isMember) and void onError(String errorData).  isMember (boolean, output) Whether a user belongs to the given audience or not. True: Belongs. False: Doesn't belong.  errorData (output) The error string. If an error occurs, only this method will be called.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"OnCheckAudienceMembership() 🗑","url":"/docs/sdks/android-sdk/methods/OnCheckAudienceMembership()#examples","content":" To check if the user belongs to the audience:  Java getTracker().checkAudienceMembership(audienceId, new Tracker.OnCheckAudienceMembership() { @Override public void onChecked(boolean isMember) { // handle result } @Override public void onError(String errorData) { // handle error } }); Kotlin tracker.checkAudienceMembership( binding.audienceId.text.toString(), object : OnCheckAudienceMembership { override fun onChecked(isMember: Boolean) { // handle result } override fun onError(errorData: String) { var errorData: String? = errorData errorData = if (TextUtils.isEmpty(errorData)) &quot;Network error&quot; else errorData // handle error } })   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"OnCheckAudienceMembership() 🗑","url":"/docs/sdks/android-sdk/methods/OnCheckAudienceMembership()#related-methods","content":" android audienceManagerSetProfileAttribute()android audienceManagerGetProfileAttributes() ","version":"Next","tagName":"h2"},{"title":"setSessionTimeout()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setSessionTimeout()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setSessionTimeout()","url":"/docs/sdks/android-sdk/methods/setSessionTimeout()#syntax","content":" Java getTracker().setSessionTimeout(milliseconds); Kotlin tracker.setSessionTimeout(milliseconds)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setSessionTimeout()","url":"/docs/sdks/android-sdk/methods/setSessionTimeout()#parameters","content":" milliseconds (number, required) The time (in milliseconds) after which the session expires.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setSessionTimeout()","url":"/docs/sdks/android-sdk/methods/setSessionTimeout()#examples","content":" To set the expiration time to 60 minutes (60*60*1000 milliseconds):  Java getTracker().setSessionTimeout(30 * 60 * 1000)); Kotlin tracker.setSessionTimeout(30 * 60 * 1000))  ","version":"Next","tagName":"h2"},{"title":"setOfflineCacheSize()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setOfflineCacheSize()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setOfflineCacheSize()","url":"/docs/sdks/android-sdk/methods/setOfflineCacheSize()#syntax","content":" Java tracker.setOfflineCacheSize(bytes); Kotlin tracker.offlineCacheSize = bytes   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setOfflineCacheSize()","url":"/docs/sdks/android-sdk/methods/setOfflineCacheSize()#parameters","content":" bytes (number, required) The size limit (in bytes) for storing events in the local storage. Default value: 4 Mb (4*1024*1024 bytes). If 0 is set, the size is unlimited.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setOfflineCacheSize()","url":"/docs/sdks/android-sdk/methods/setOfflineCacheSize()#examples","content":" To set the size limit to 2 Mb (2 * 1024 * 1024 bytes):  Java tracker.setOfflineCacheSize(2 * 1024 * 1024); Kotlin tracker.offlineCacheSize = 2 * 1024 * 1024   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"setOfflineCacheSize()","url":"/docs/sdks/android-sdk/methods/setOfflineCacheSize()#related-methods","content":" android setOfflineCacheAge() ","version":"Next","tagName":"h2"},{"title":"setPrefixing()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setPrefixing()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setPrefixing()","url":"/docs/sdks/android-sdk/methods/setPrefixing()#syntax","content":" Java getTracker().setPrefixing(isAutomatic); Kotlin tracker.isPrefixing = isAutomatic   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setPrefixing()","url":"/docs/sdks/android-sdk/methods/setPrefixing()#parameters","content":" isAutomatic (boolean, required) Whether URLs get prefixes automatically or not. True: prefixes are added automatically. False: prefixes are not added automatically.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setPrefixing()","url":"/docs/sdks/android-sdk/methods/setPrefixing()#examples","content":" To turn off automatic prefixing:  Java getTracker().setPrefixing(false); Kotlin tracker.isPrefixing = false  ","version":"Next","tagName":"h2"},{"title":"setOfflineCacheAge()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setOfflineCacheAge()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setOfflineCacheAge()","url":"/docs/sdks/android-sdk/methods/setOfflineCacheAge()#syntax","content":" Java tracker.setOfflineCacheAge(milliseconds); Kotlin tracker.offlineCacheAge = milliseconds   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setOfflineCacheAge()","url":"/docs/sdks/android-sdk/methods/setOfflineCacheAge()#parameters","content":" milliseconds (number, required) The time (in milliseconds) after which events are removed from the local storage. Default value: 24 hours (24 * 60 * 60 * 1000 milliseconds). If 0 is set, events are stored forever (unlimited time). If -1 is set, storing is turned off.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setOfflineCacheAge()","url":"/docs/sdks/android-sdk/methods/setOfflineCacheAge()#examples","content":" To set the time limit to 12 hours (12 * 60 * 60 * 1000 milliseconds):  Java tracker.setOfflineCacheAge(12 * 60 * 60 * 1000); Kotlin tracker.offlineCacheAge = 12 * 60 * 60 * 1000   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"setOfflineCacheAge()","url":"/docs/sdks/android-sdk/methods/setOfflineCacheAge()#related-methods","content":" android setOfflineCacheSize() ","version":"Next","tagName":"h2"},{"title":"setUserMail() 🗑","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setUserMail()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setUserMail() 🗑","url":"/docs/sdks/android-sdk/methods/setUserMail()#syntax","content":" Java getTracker().setUserMail(&quot;userEmail&quot;); Kotlin getTracker().setUserMail(&quot;userEmail&quot;);   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setUserMail() 🗑","url":"/docs/sdks/android-sdk/methods/setUserMail()#parameters","content":" userEmail (string, required) The user's email address.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setUserMail() 🗑","url":"/docs/sdks/android-sdk/methods/setUserMail()#examples","content":" To set and user's email address and send it to Audience Manager with a screen view:  Java getTracker().setUserMail(&quot;john.doe@example.com&quot;); TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker); Kotlin tracker.userMail = &quot;john.doe@example.com&quot; TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker);   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"setUserMail() 🗑","url":"/docs/sdks/android-sdk/methods/setUserMail()#notes","content":" The user's email address is only used by Audience Manager. It is visible in Audience Manager &gt; Profiles.The user's email address won't be sent if setAnonymizationState(true) is set. ","version":"Next","tagName":"h2"},{"title":"setVisitorId()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setVisitorId()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setVisitorId()","url":"/docs/sdks/android-sdk/methods/setVisitorId()#syntax","content":" Java getTracker().setVisitorId(&quot;visitorID&quot;); Kotlin tracker.visitorId = &quot;visitorID&quot;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setVisitorId()","url":"/docs/sdks/android-sdk/methods/setVisitorId()#parameters","content":" visitorID (string, required) A visitor ID set for a given user. Format: 16-character hexadecimal string. Example: 0123456789abcdef.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setVisitorId()","url":"/docs/sdks/android-sdk/methods/setVisitorId()#examples","content":" To set a visitor ID to 0123456789abcdef:  Java getTracker().setVisitorId(&quot;0123456789abcdef&quot;); Kotlin tracker.visitorId = &quot;0123456789abcdef&quot;   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"setVisitorId()","url":"/docs/sdks/android-sdk/methods/setVisitorId()#notes","content":" If setAnonymizationState(true) is set, a new visitor ID is created each time an app starts.Each user should have a unique visitor ID assigned. The visitor ID shouldn't change between app launches.We recommend using the user ID instead of the visitor ID. ","version":"Next","tagName":"h2"},{"title":"Set up Piwik PRO","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/getting-started","content":"","keywords":"","version":"Next"},{"title":"Method #1​","type":1,"pageTitle":"Set up Piwik PRO","url":"/docs/sdks/android-sdk/getting-started#method-1","content":" We recommend using this method for most cases. It forces the implementation of just one abstract method.  To set up the Piwik PRO tracker, follow these steps:  Extend PiwikApplication class with your Android Application class. Use your account address (Example: https://example.piwik.pro/) and the site/app ID (Where to find it?)  public class YourApplication extends PiwikApplication{ @Override public TrackerConfig onCreateTrackerConfig() { return TrackerConfig.createDefault(&quot;account-address&quot;, &quot;site-id&quot;); } }   Tip: See our demo app where we used this method.  Share the Tracker instance across your app. The Tracker is now thread-safe.  Tracker tracker = ((PiwikApplication) getApplication()).getTracker();   Done! Now your app can use Piwik PRO SDK.We recommend using the TrackHelper class to track events. For tracking each event with TrackHelper, you will need to pass theTracker instance.  Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track().screen(&quot;Main screen&quot;).with(tracker);   Note: The TrackerHelper class has methods for all common actions, which can be chained to facilitate the correct order and use. Combine it with the IDE autocompletion, and using the SDK will be more convenient.  ","version":"Next","tagName":"h2"},{"title":"Method #2​","type":1,"pageTitle":"Set up Piwik PRO","url":"/docs/sdks/android-sdk/getting-started#method-2","content":" To set up the Piwik PRO tracker, follow these steps:  Manage the tracker on your own. Use your account address (Example:https://example.piwik.pro/) and the site/app ID (Where to find it?).  public class YourApplication extends Application { private Tracker tracker; public synchronized Tracker getTracker() { if (tracker == null) tracker = Piwik.getInstance(this).newTracker(new TrackerConfig(&quot;&quot;account-address&quot;, &quot;site-id&quot;, &quot;Default Tracker&quot;)); return tracker; } }   Note: We recommend using just one tracker instance for your app. Otherwise, you can end up with over-counted metrics.  Share the Tracker instance across your app. The Tracker is now thread-safe.  Tracker tracker = ((YourApplication) getApplication()).getTracker();   Done! Now your app can use Piwik PRO SDK.We recommend using the TrackHelper class to track events. For tracking each event with TrackHelper, you will need to pass theTracker instance.  Tracker tracker = ((YourApplication) getApplication()).getTracker(); TrackHelper.track().screen(&quot;Main screen&quot;).with(tracker);   Note: The TrackerHelper class has methods for all common actions, which can be chained to facilitate the correct order and use. Combine it with the IDE autocompletion, and using the SDK will be more convenient.  Kotlin  Our SDK is written in Java, but it can also be used in Kotlin. If you refer to any of our SDK methods in Kotlin, it'll be automatically shown as a Kotlin syntax.  Here's an example of the track().screen() method in both languages:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track().screen(&quot;path&quot;).title(&quot;title&quot;).with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track().screen(&quot;path&quot;).title(&quot;title&quot;).with(tracker)   Tip: For more on calling Java from Kotlin, see this article. ","version":"Next","tagName":"h2"},{"title":"setUserId()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setUserId()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setUserId()","url":"/docs/sdks/android-sdk/methods/setUserId()#syntax","content":" Java getTracker().setUserId(&quot;userId&quot;); Kotlin tracker.userId = &quot;userId&quot;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setUserId()","url":"/docs/sdks/android-sdk/methods/setUserId()#parameters","content":" userId (string, required) A non-empty unique ID of a user. Example: customer ID. It needs to be unique for each user. Can be up to 1024 bytes (1024 ASCII characters).  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setUserId()","url":"/docs/sdks/android-sdk/methods/setUserId()#examples","content":" To set a user ID as ABC123 and send it with a screen view:  Java getTracker().setUserId(&quot;ABC123&quot;); TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker); Kotlin tracker.userId = &quot;ABC123&quot; TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker);   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"setUserId()","url":"/docs/sdks/android-sdk/methods/setUserId()#notes","content":" The user ID won't be sent if setAnonymizationState(true) is set.For more on user ID, see this article. ","version":"Next","tagName":"h2"},{"title":"audienceManagerGetProfileAttributes() 🗑","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/audienceManagerGetProfileAttributes()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"audienceManagerGetProfileAttributes() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerGetProfileAttributes()#syntax","content":" Java getTracker().audienceManagerGetProfileAttributes(new Tracker.OnGetProfileAttributes() { @Override public void onAttributesReceived(Map&lt;String, String&gt; attributes) { // handle result } @Override public void onError(String errorData) { errorData = TextUtils.isEmpty(errorData) ? &quot;Network error&quot;: errorData; // handle error } }); Kotlin tracker.audienceManagerGetProfileAttributes(object : OnGetProfileAttributes { override fun onAttributesReceived(attributes: Map&lt;String, String&gt;) { // handle result } override fun onError(errorData: String) { var errorData: String? = errorData errorData = if (TextUtils.isEmpty(errorData)) &quot;Network error&quot; else errorData // handle error } })   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"audienceManagerGetProfileAttributes() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerGetProfileAttributes()#parameters","content":" OnGetProfileAttributes () (required) The callback to handle a request result. The call is asynchronous. It has two methods void onAttributesReceived(Map&lt;String, String&gt; attributes) and void onError(String errorData).  attributes (output) The dictionary of key-value pairs. Key: attribute name. Value: attribute value.  errorData (output) The error string. If an error occurs, only this method will be called.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"audienceManagerGetProfileAttributes() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerGetProfileAttributes()#examples","content":" To get profile attributes:  Java getTracker().audienceManagerGetProfileAttributes(new Tracker.OnGetProfileAttributes() { @Override public void onAttributesReceived(Map&lt;String, String&gt; attributes) { // handle result } @Override public void onError(String errorData) { errorData = TextUtils.isEmpty(errorData) ? &quot;Network error&quot;: errorData; // handle error } }); Kotlin tracker.audienceManagerGetProfileAttributes(object : OnGetProfileAttributes { override fun onAttributesReceived(attributes: Map&lt;String, String&gt;) { // handle result } override fun onError(errorData: String) { var errorData: String? = errorData errorData = if (TextUtils.isEmpty(errorData)) &quot;Network error&quot; else errorData // handle error } })   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"audienceManagerGetProfileAttributes() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerGetProfileAttributes()#notes","content":" You can get only the attributes with granted access.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"audienceManagerGetProfileAttributes() 🗑","url":"/docs/sdks/android-sdk/methods/audienceManagerGetProfileAttributes()#related-methods","content":" android audienceManagerSetProfileAttribute()android OnCheckAudienceMembership() ","version":"Next","tagName":"h2"},{"title":"track().interaction()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().interaction()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().interaction()","url":"/docs/sdks/android-sdk/methods/track().interaction()#syntax","content":" Java TrackHelper.track() .impression(&quot;contentName&quot;, &quot;contentInteraction &quot;) .piece(&quot;contentPiece&quot;) .target(&quot;contentTarget&quot;) .with(getTracker()); Kotlin TrackHelper.track() .impression(&quot;contentName&quot;, &quot;contentInteraction &quot;) .piece(&quot;contentPiece&quot;) .target(&quot;contentTarget&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().interaction()","url":"/docs/sdks/android-sdk/methods/track().interaction()#parameters","content":" contentName (string, required) The name of a content block.  contentInteraction (string, required) The type of interaction with a content block. Example: click.  contentPiece (string, required) The piece of the tracked content block, for example, a creative, banner, or video.  contentTarget (string, required) The target of the tracked content block, for example, a link in the content block.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().interaction()","url":"/docs/sdks/android-sdk/methods/track().interaction()#examples","content":" To track an interaction with a content block on your mobile app:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .impression(&quot;gravel bikes collection&quot;, &quot;click&quot;) .piece(&quot;banner&quot;) .target(&quot;https://example.com/bikes/&quot;) .with(getTracker()); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .impression(&quot;gravel bikes collection&quot;, &quot;click&quot;) .piece(&quot;banner&quot;) .target(&quot;https://example.com/bikes/&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().interaction()","url":"/docs/sdks/android-sdk/methods/track().interaction()#notes","content":" To track content interaction, this option needs to be turned on: Menu &gt; Tag Manager &gt; Tags &gt; Piwik PRO (tracking code) &gt; Data collection &gt; Interactions with popups and content (on). Read moreTracked interactions will be visible in Analytics &gt; Reports &gt; Content performance.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"track().interaction()","url":"/docs/sdks/android-sdk/methods/track().interaction()#related-methods","content":" android track().impression() ","version":"Next","tagName":"h2"},{"title":"track().goal()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().goal()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().goal()","url":"/docs/sdks/android-sdk/methods/track().goal()#syntax","content":" Java TrackHelper.track() .goal(&quot;goalID&quot;) .revenue(conversionValue) .with(getTracker()); Kotlin TrackHelper.track() .goal(&quot;goalID&quot;) .revenue(conversionValue) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().goal()","url":"/docs/sdks/android-sdk/methods/track().goal()#parameters","content":" goalID (string , required) The ID of the goal to be tracked. (To find a goal ID go to Menu &gt; Analytics &gt; Goals.)  conversionValue (number, optional) The value of the goal. It's used to calculate the goal revenue.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().goal()","url":"/docs/sdks/android-sdk/methods/track().goal()#examples","content":" To send a goal with the ID 27ecc5e3-8ae0-40c3-964b-5bd8ee3da059 and value 20:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .goal(&quot;27ecc5e3-8ae0-40c3-964b-5bd8ee3da059&quot;) .revenue(20) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .goal(&quot;27ecc5e3-8ae0-40c3-964b-5bd8ee3da059&quot;) .revenue(20) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().goal()","url":"/docs/sdks/android-sdk/methods/track().goal()#notes","content":" After you set up a goal in Analytics &gt; Goals &gt; Add a goal, the goal is tracked automatically. The track().goal() method can be used in addition to the automatic method.For more on goals, see our help center article. ","version":"Next","tagName":"h2"},{"title":"track().exception()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().exception()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().exception()","url":"/docs/sdks/android-sdk/methods/track().exception()#syntax","content":" Java TrackHelper.track() .exception(ex) .description(&quot;description&quot;) .with(getTracker()); Kotlin TrackHelper.track() .exception(ex) .description(&quot;description&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().exception()","url":"/docs/sdks/android-sdk/methods/track().exception()#parameters","content":" ex (Throwable, optional) The caught exception instance. The exception instance is automatically translated to a URL, and the following information is added to it: package name, activity path, method name and line number where the crash occurred.  description (string, optional) Additional information about the issue.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().exception()","url":"/docs/sdks/android-sdk/methods/track().exception()#examples","content":" To send a caught exception:  Java TrackHelper.track() .exception(new Exception(&quot;OnPurposeException&quot;)) .description(&quot;Download error&quot;) .with(getTracker()); Kotlin TrackHelper.track() .exception(Exception(&quot;OnPurposeException&quot;)) .description(&quot;Download error&quot;) .with(tracker)  ","version":"Next","tagName":"h2"},{"title":"track().download()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().download()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().download()","url":"/docs/sdks/android-sdk/methods/track().download()#syntax","content":" Java TrackHelper.track() .sendDownload(&quot;downloadURL&quot;) .with(getTracker()); Kotlin TrackHelper.track() .sendDownload(&quot;downloadURL&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().download()","url":"/docs/sdks/android-sdk/methods/track().download()#parameters","content":" downloadURL (string, required) The download URL. Example: https://example.com/paid-app.zip  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().download()","url":"/docs/sdks/android-sdk/methods/track().download()#examples","content":" To track a click on https://example.com/paid-app.zip as a download:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .sendDownload(&quot;https://example.com/paid-app.zip&quot;) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .sendDownload(&quot;https://example.com/paid-app.zip&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().download()","url":"/docs/sdks/android-sdk/methods/track().download()#notes","content":" Downloads are visible in the download report in Analytics &gt; Reports &gt; Downloads.Here's the default list of file extensions tracked as downloads: 7z, aac, apk, arc, arj, asf, asx, avi, azw3, bin, csv, deb, dmg, doc, docx, epub, exe, flv, gif, gz, gzip, hqx, ibooks, jar, jpg, jpeg, js, mobi, mp2, mp3, mp4, mpg, mpeg, mov, movie, msi, msp, odb, odf, odg, ods, odt, ogg, ogv, pdf, phps, png, ppt, pptx, qt, qtm, ra, ram, rar, rpm, sea, sit, tar, tbz, tbz2, bz, bz2, tgz, torrent, txt, wav, wma, wmv, wpd, xls, xlsx, xml, z, zip. ","version":"Next","tagName":"h2"},{"title":"setTrackDeviceId()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/setTrackDeviceId()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"setTrackDeviceId()","url":"/docs/sdks/android-sdk/methods/setTrackDeviceId()#syntax","content":" Java getTracker().setTrackDeviceId(isFetched); Kotlin tracker.isTrackDeviceId = isFetched   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"setTrackDeviceId()","url":"/docs/sdks/android-sdk/methods/setTrackDeviceId()#parameters","content":" isFetched (boolean, required) Weather a user ID is fetched automatically from the tracker instance. A user ID is the advertising ID (AAID) assigned by Google. True: is fetched. False: is not fetched.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"setTrackDeviceId()","url":"/docs/sdks/android-sdk/methods/setTrackDeviceId()#examples","content":" To turn off fetching a device ID from the tracker instance:  Java getTracker().setTrackDeviceId(false); Kotlin tracker.isTrackDeviceId = false   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"setTrackDeviceId()","url":"/docs/sdks/android-sdk/methods/setTrackDeviceId()#notes","content":" The device ID won't be sent if setAnonymizationState(true) is set.If your app uses the device ID (AAID) and you plan to send your app to the Google Play, you need to ask each user for permission to share their data.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"setTrackDeviceId()","url":"/docs/sdks/android-sdk/methods/setTrackDeviceId()#related-methods","content":" android setDeviceId()android getDeviceId() ","version":"Next","tagName":"h2"},{"title":"track().impression()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().impression()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().impression()","url":"/docs/sdks/android-sdk/methods/track().impression()#syntax","content":" Java TrackHelper.track() .impression(&quot;contentName&quot;) .piece(&quot;contentPiece&quot;) .target(&quot;contentTarget&quot;) .with(getTracker()); Kotlin TrackHelper.track() .impression(&quot;contentName&quot;) .piece(&quot;contentPiece&quot;) .target(&quot;contentTarget&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().impression()","url":"/docs/sdks/android-sdk/methods/track().impression()#parameters","content":" contentName (string, required) The name of a content block.  contentPiece (string, required) The piece of the tracked content block, for example, a creative, banner, or video.  contentTarget (string, required) he target of the tracked content block, for example, a link in the content block.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().impression()","url":"/docs/sdks/android-sdk/methods/track().impression()#examples","content":" To track an impression of a content block on your mobile app:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .impression(&quot;gravel bikes collection&quot;) .piece(&quot;banner&quot;) .target(&quot;https://example.com/bikes/&quot;) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .impression(&quot;gravel bikes collection&quot;) .piece(&quot;banner&quot;) .target(&quot;https://example.com/bikes/&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().impression()","url":"/docs/sdks/android-sdk/methods/track().impression()#notes","content":" To track content impressions, this option needs to be turned on: Menu &gt; Tag Manager &gt; Tags &gt; Piwik PRO (tracking code) &gt; Data collection &gt; Interactions with popups and content (on). Read moreTracked impressions will be visible in Analytics &gt; Reports &gt; Content performance.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"track().impression()","url":"/docs/sdks/android-sdk/methods/track().impression()#related-methods","content":" android track().interaction() ","version":"Next","tagName":"h2"},{"title":"track().screens()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().screens()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().screens()","url":"/docs/sdks/android-sdk/methods/track().screens()#syntax","content":" Java TrackHelper.track() .screens(getApplication()) .with(getTracker()); Kotlin TrackHelper.track() .screens(getApplication()) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().screens()","url":"/docs/sdks/android-sdk/methods/track().screens()#examples","content":" To automatically record screen views:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .screens(getApplication()) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .screens(getApplication()) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"track().screens()","url":"/docs/sdks/android-sdk/methods/track().screens()#related-methods","content":" android track().screen() ","version":"Next","tagName":"h2"},{"title":"items.addItem()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/items.addItem()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"items.addItem()","url":"/docs/sdks/android-sdk/methods/items.addItem()#syntax","content":" Java EcommerceItems items = new EcommerceItems(); items.addItem(new EcommerceItems .Item(&quot;productSKU&quot;) .name(&quot;productName&quot;) .category(&quot;productCategory&quot;) .price(productPrice) .quantity(productQuantity)); Kotlin var items: EcommerceItems = EcommerceItems() items.addItem(EcommerceItems .Item(&quot;productSKU&quot;) .name(&quot;productName&quot;) .category(&quot;productCategory&quot;) .price(productPrice) .quantity(productQuantity))   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"items.addItem()","url":"/docs/sdks/android-sdk/methods/items.addItem()#parameters","content":" productSKU (string, required) The stock-keeping unit of the added product.  productName (string, optional) The name of the added product.  productCategory (string | array&lt;string&gt;, optional) The category of the added product. It can be an array of up to 5 categories.  productPrice (number, optional) The price of the added product.  productQuantity (number, optional) The number of added items.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"items.addItem()","url":"/docs/sdks/android-sdk/methods/items.addItem()#examples","content":" To track a confirmed order:  Java Tracker tracker = ((YourApplication) getApplication()).getTracker(); EcommerceItems items = new EcommerceItems(); // register all purchased items // EcommerceItems.Item(&quot;&lt;SKU&gt;&quot;).name(&quot;&lt;name&gt;&quot;).category(&quot;&lt;category&gt;&quot;).price(&lt;price&gt;).quantity(&lt;quantity&gt;) items.addItem(new EcommerceItems .Item(&quot;584340&quot;) .name(&quot;Specialized Stumpjumper&quot;) .category(&quot;Mountain bike&quot;) .price(500000) .quantity(1)); items.addItem(new EcommerceItems .Item(&quot;460923&quot;) .name(&quot;Specialized Chamonix&quot;) .category(&quot;Helmets&quot;) .price(20000) .quantity(1)); // track order TrackHelper.track() .order(&quot;43967392&quot;, 525000) .subTotal(520000) .tax(97000) .shipping(15000) .discount(10000) .items(items) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker var items: EcommerceItems = EcommerceItems() // register all purchased items // EcommerceItems.Item(&quot;&lt;SKU&gt;&quot;).name(&quot;&lt;name&gt;&quot;).category(&quot;&lt;category&gt;&quot;).price(&lt;price&gt;).quantity(&lt;quantity&gt;) items.addItem(EcommerceItems .Item(&quot;584340&quot;) .name(&quot;Specialized Stumpjumper&quot;) .category(&quot;Mountain bike&quot;) .price(500000) .quantity(1)) items.addItem(EcommerceItems .Item(&quot;460923&quot;) .name(&quot;Specialized Chamonix&quot;) .category(&quot;Helmets&quot;) .price(20000) .quantity(1)) // track order TrackHelper.track() .order(&quot;43967392&quot;, 525000) .subTotal(520000) .tax(97000) .shipping(15000) .discount(10000) .items(items) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"items.addItem()","url":"/docs/sdks/android-sdk/methods/items.addItem()#notes","content":" The cart with added items is not stored in the browser storage. Make sure that you add all items again after the page reloads.If a product with the same SKU is already in the cart, it'll be removed and replaced with the one added with the items.addItem() method.This method doesn't send any data to Piwik PRO. It just creates a cart. You can use the track().order() method to send cart data to Piwik PRO.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"items.addItem()","url":"/docs/sdks/android-sdk/methods/items.addItem()#related-methods","content":" android track().order() ","version":"Next","tagName":"h2"},{"title":"track().outlink()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().outlink()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().outlink()","url":"/docs/sdks/android-sdk/methods/track().outlink()#syntax","content":" Java TrackHelper.track() .outlink(&quot;outlink&quot;) .with(getTracker()); Kotlin TrackHelper.track() .outlink(&quot;outlink&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().outlink()","url":"/docs/sdks/android-sdk/methods/track().outlink()#parameters","content":" outlink (string, required) The outlink. Example: https://example.com.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().outlink()","url":"/docs/sdks/android-sdk/methods/track().outlink()#examples","content":" To track an outlink to https://example.com:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .outlink(&quot;https://example.com&quot;) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .outlink(&quot;https://example.com&quot;) .with(tracker)  ","version":"Next","tagName":"h2"},{"title":"startNewSession()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/startNewSession()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"startNewSession()","url":"/docs/sdks/android-sdk/methods/startNewSession()#syntax","content":" Java getTracker().startNewSession(); Kotlin tracker.startNewSession()   ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"startNewSession()","url":"/docs/sdks/android-sdk/methods/startNewSession()#examples","content":" To start a new session:  Java getTracker().startNewSession(); Kotlin tracker.startNewSession()  ","version":"Next","tagName":"h2"},{"title":"track().event()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().event()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().event()","url":"/docs/sdks/android-sdk/methods/track().event()#syntax","content":" Java TrackHelper.track() .event(&quot;category&quot;, &quot;action&quot;) .path(&quot;path&quot;) .name(&quot;name&quot;) .value(value) .with(getTracker()); Kotlin TrackHelper.track() .event(&quot;category&quot;, &quot;action&quot;) .path(&quot;path&quot;) .name(&quot;name&quot;) .value(value) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().event()","url":"/docs/sdks/android-sdk/methods/track().event()#parameters","content":" category (string, required) The category of the event you're tracking. You can define event categories based on actions (clicks, gestures, voice commands, and the like) or features (play, pause, fast forward, and the like).  action (string, required) The action of the event you're tracking. Example: A category can be user clicks, an action can be a button click.  name (string, optional) The name of the event you're tracking. For example, if you have multiple button controls on a screen, you can use the name to record a specific view control identifier that was clicked.  value (float, optional) The value you want to assign to the event you're tracking. For example, if you're tracking “Buy” button presses, you can record the number of purchased items or the total cost.  path (string, optional) A URL path set for this event.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().event()","url":"/docs/sdks/android-sdk/methods/track().event()#examples","content":" To send a custom event when a user clicks on a signup button on/main/signup and assign 100 value to it:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .event(&quot;Clicks&quot;, &quot;Button&quot;) .path(&quot;/main/signup&quot;) .name(&quot;Sign up&quot;) .value(100) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .event(&quot;Clicks&quot;, &quot;Button&quot;) .path(&quot;/main/signup&quot;) .name(&quot;Sign up&quot;) .value(100) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().event()","url":"/docs/sdks/android-sdk/methods/track().event()#notes","content":" For more on custom events, see this article. ","version":"Next","tagName":"h2"},{"title":"track().campaign()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().campaign()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().campaign()","url":"/docs/sdks/android-sdk/methods/track().campaign()#syntax","content":" Java TrackHelper.track() .campaign(&quot;campaignURL&quot;); Kotlin TrackHelper.track() .campaign(&quot;campaignURL&quot;)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().campaign()","url":"/docs/sdks/android-sdk/methods/track().campaign()#parameters","content":" campaignURL (string, required) The URL you used in your campaign to bring traffic to your mobile app. Valid formats: HTTPS, HTTP and FTP. Example:http://example.com?pk_campaign=Summer_Promo&amp;pk_keyword=banking_app  Note: You can tag campaigns manually or use our Piwik PRO URL builder. For now, only the pk_campaign and pk_keyword work on SDKs, so don't use other parameters.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().campaign()","url":"/docs/sdks/android-sdk/methods/track().campaign()#examples","content":" To pass campaign data from a campaign linkhttp://example.com?pk_campaign=Summer_Promo&amp;pk_keyword=banking_app:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .campaign(&quot;http://example.com?pk_campaign=Summer_Promo&amp;pk_keyword=banking_app&quot;); TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .campaign(&quot;http://example.com?pk_campaign=Summer_Promo&amp;pk_keyword=banking_app&quot;) TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().campaign()","url":"/docs/sdks/android-sdk/methods/track().campaign()#notes","content":" For now, only pk_campaign and pk_keyword work on SDKs, so don't use other parameters.Piwik PRO recognizes the pk_campaign and pk_keyword parameters by default. But if you run into any problems, check if these parameters are added in Administration &gt; Sites &amp; apps &gt; Data collection &gt; Campaigns &gt; Campaign parameters. Read more. ","version":"Next","tagName":"h2"},{"title":"track().screen()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().screen()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().screen()","url":"/docs/sdks/android-sdk/methods/track().screen()#syntax","content":" Java TrackHelper.track() .screen(&quot;path&quot;) .title(&quot;title&quot;) .with(tracker); Kotlin TrackHelper.track() .screen(&quot;path&quot;) .title(&quot;title&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().screen()","url":"/docs/sdks/android-sdk/methods/track().screen()#parameters","content":" path (string, required) A path set for your screen. Example: example/welcome. A path is automatically translated to a URL and it gets a prefix screen (if tracker.setPrefixing(true) is set).  Note: Set the current instance of Android Activity class instead of the path if you want to use the activity stack. It'll then automatically set the activity stack as a path and activity title as a title.  title (string, optional) A title set for your screen. Example: Welcome.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().screen()","url":"/docs/sdks/android-sdk/methods/track().screen()#examples","content":" To send a screen view with a path example/welcome and title Welcome:  Java public class activityClass extends Activity { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker); } } Kotlin public class activityClass : Activity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker) } }   To send a screen view and automatically use the activity stack as a path and activity name as a title if our activity class is activityClass:  Java public class activityClass extends Activity { … Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track().screen(activityClass).with(tracker); … } Kotlin public class activityClass : Activity() { … val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track().screen(activityClass).with(tracker) … }   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"track().screen()","url":"/docs/sdks/android-sdk/methods/track().screen()#related-methods","content":" android track().screens() ","version":"Next","tagName":"h2"},{"title":"track().dimension()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().dimension()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().dimension()","url":"/docs/sdks/android-sdk/methods/track().dimension()#syntax","content":" Java TrackHelper.track() .dimension(customDimensionId, &quot;customDimensionValue&quot;); Kotlin TrackHelper.track() .dimension(customDimensionId, &quot;customDimensionValue&quot;)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().dimension()","url":"/docs/sdks/android-sdk/methods/track().dimension()#parameters","content":" customDimensionId (number, required) An ID of the custom dimension.  customDimensionValue (string, required) A value of the custom dimension.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().dimension()","url":"/docs/sdks/android-sdk/methods/track().dimension()#examples","content":" To set a custom dimension with the ID 1 and value 5 stars and send it with a screen view:  Java TrackHelper.track() .dimension(1, &quot;5 stars&quot;); .screen(&quot;example/product-rating&quot;) .title(&quot;Product rating&quot;) .with(tracker) Kotlin TrackHelper.track() .dimension(1, &quot;5 stars&quot;); .screen(&quot;example/product-rating&quot;) .title(&quot;Product rating&quot;) .with(tracker)   To set a custom dimension with the ID 2 and value paid subscriberand send it with an event:  Java TrackHelper.track() .dimension(2, &quot;paid subscriber&quot;); TrackHelper.track() .event(&quot;Button&quot;, &quot;Sign up&quot;) .with(tracker); Kotlin TrackHelper.track() .dimension(2, &quot;paid subscriber&quot;); TrackHelper.track() .event(&quot;Button&quot;, &quot;Sign up&quot;) .with(tracker);   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().dimension()","url":"/docs/sdks/android-sdk/methods/track().dimension()#notes","content":" After sending the set dimension with the event, the dimension is deleted. It won't be sent with the next event. So you need to set it each time you want to send it. ","version":"Next","tagName":"h2"},{"title":"Accelerated Mobile Pages integration","type":0,"sectionRef":"#","url":"/docs/integrations/amp-integration","content":"","keywords":"","version":"Next"},{"title":"Basic setup​","type":1,"pageTitle":"Accelerated Mobile Pages integration","url":"/docs/integrations/amp-integration#basic-setup","content":" This setup allows you to track page views. Copy following code to your AMP page while replacing:  &lt;INSTANCE_DOMAIN&gt; - PPAS instance domain (e.g.analytics.example.com)&lt;APP_ID&gt; - PPAS application ID (e.g.12345678-1234-1234-1234-1234567890ab)&lt;TRACKER_HASH&gt; - Cookie hash generated by JavaScript Tracking Client. Check how to get cookie hash&lt;howToGetJSTCCookieHash&gt;section for detailed information.  &lt;script async custom-element=&quot;amp-analytics&quot; src=&quot;https://cdn.ampproject.org/v0/amp-analytics-0.1.js&quot;&gt;&lt;/script&gt; &lt;amp-analytics type=&quot;ppasanalytics&quot;&gt; &lt;script type=&quot;application/json&quot;&gt; { &quot;vars&quot;: { &quot;host&quot;: &quot;&lt;INSTANCE_DOMAIN&gt;&quot;, &quot;website_id&quot;: &quot;&lt;APP_ID&gt;&quot;, &quot;website_hash&quot;: &quot;&lt;TRACKER_HASH&gt;&quot; } } &lt;/script&gt; &lt;/amp-analytics&gt;   ","version":"Next","tagName":"h2"},{"title":"How to get JavaScript Tracking Client cookie hash​","type":1,"pageTitle":"Accelerated Mobile Pages integration","url":"/docs/integrations/amp-integration#how-to-get-javascript-tracking-client-cookie-hash","content":" If there is no non-AMP page tracked by traditional JavaScript Tracking Client, this value may be removed from configuration or left empty. It's used to guarantee that same cookie will be used by AMP and non-AMP pages on client domain. This value should be taken from the name of the ID cookie generated by JavaScript Tracking Client. Each JavaScript Tracking Client generates unique cookie name based on its configuration. Follow these instructions to get hash from cookie generated by JavaScript Tracking Client:  Setup JavaScript Tracking Client on non-AMP page (if it was not done already).Open tracked page in the browser.Open developer tools in the browser and look for cookie starting with _pk_id.. Cookie name should look similar to this:_pk_id.12345678-1234-1234-1234-1234567890ab.cdef. The part after first dot is the value of App ID of the cookie (if there are multiple cookies starting with _pk_id. it may be used to identify correct cookie). After second dot you'll find the cookie hash generated by JavaScript Tracking Client (in the example its value iscdef). Copy this part and replace &lt;TRACKER_HASH&gt; with it.  Here you can see how to look for JavaScript Tracking Client cookie in Google Chrome developer tools:    ","version":"Next","tagName":"h2"},{"title":"Tracking custom events​","type":1,"pageTitle":"Accelerated Mobile Pages integration","url":"/docs/integrations/amp-integration#tracking-custom-events","content":" To track custom event&lt;jtc-api-custom-events&gt; you should attach a trigger on the interactive page element and define event values. To do that add to the configuration thetriggerssection and set up event trigger.  This example will send custom event when page element using &quot;mybutton&quot; ID will be clicked:  &lt;amp-analytics type=&quot;ppasanalytics&quot;&gt; &lt;script type=&quot;application/json&quot;&gt; { &quot;vars&quot;: { &quot;host&quot;: &lt;instance_domain&gt;, &quot;website_id&quot;: &lt;app_id&gt;, &quot;website_hash&quot;: &lt;tracker_hash&gt; }, &quot;triggers&quot;: { &quot;exampleEvent&quot;: { &quot;selector&quot;: &quot;#mybutton&quot;, &quot;on&quot;: &quot;click&quot;, &quot;request&quot;: &quot;customevent&quot;, &quot;vars&quot;: { &quot;event_category&quot;: &quot;buttons&quot;, &quot;event_action&quot;: &quot;click&quot;, &quot;event_name&quot;: &quot;testButton&quot; } } } } &lt;/script&gt; &lt;/amp-analytics&gt;   These are parameters used by custom event:  “selector” CSS selector for element that should be watched “on” - HTML event type “vars” - Variables that should be used by this event. Custom events expect: “event_category” - required“event_action” - required“event_name” - optional“event_value” - optional  ","version":"Next","tagName":"h2"},{"title":"Tracking download events​","type":1,"pageTitle":"Accelerated Mobile Pages integration","url":"/docs/integrations/amp-integration#tracking-download-events","content":" To track download event&lt;jtc-api-download-and-outlink&gt; attach trigger to a link in a similar way to custom event &lt;ampCustomEvent&gt;.  This example will send download event when page element using &quot;mydownload&quot; ID will be clicked:  &lt;amp-analytics type=&quot;ppasanalytics&quot;&gt; &lt;script type=&quot;application/json&quot;&gt; { &quot;vars&quot;: { &quot;host&quot;: &lt;instance_domain&gt;, &quot;website_id&quot;: &lt;app_id&gt;, &quot;website_hash&quot;: &lt;tracker_hash&gt; }, &quot;triggers&quot;: { &quot;exampleEvent&quot;: { &quot;selector&quot;: &quot;#mydownload&quot;, &quot;on&quot;: &quot;click&quot;, &quot;request&quot;: &quot;download&quot;, &quot;vars&quot;: { &quot;download_url&quot;: &quot;https://example.com/whitepaper.pdf&quot; } } } } &lt;/script&gt; &lt;/amp-analytics&gt;   These are parameters used by download event:  “selector” CSS selector for element that should be watched “on” - HTML event type “vars” - Variables that should be used by this event. Custom events expect: “download_url” - required  ","version":"Next","tagName":"h2"},{"title":"Tracking outlink events​","type":1,"pageTitle":"Accelerated Mobile Pages integration","url":"/docs/integrations/amp-integration#tracking-outlink-events","content":" To track outlink event&lt;jtc-api-download-and-outlink&gt; attach trigger to a link in a similar way to custom event &lt;ampCustomEvent&gt;.  This example will send outlink event when page element using &quot;myoutlink&quot; ID will be clicked:  &lt;amp-analytics type=&quot;ppasanalytics&quot;&gt; &lt;script type=&quot;application/json&quot;&gt; { &quot;vars&quot;: { &quot;host&quot;: &lt;instance_domain&gt;, &quot;website_id&quot;: &lt;app_id&gt;, &quot;website_hash&quot;: &lt;tracker_hash&gt; }, &quot;triggers&quot;: { &quot;exampleEvent&quot;: { &quot;selector&quot;: &quot;#myoutlink&quot;, &quot;on&quot;: &quot;click&quot;, &quot;request&quot;: &quot;outlink&quot;, &quot;vars&quot;: { &quot;outlink_url&quot;: &quot;https://another-site.com/&quot; } } } } &lt;/script&gt; &lt;/amp-analytics&gt;   These are parameters used by outlink event:  “selector” CSS selector for element that should be watched “on” - HTML event type “vars” - Variables that should be used by this event. Custom events expect: “outlink_url” - required  ","version":"Next","tagName":"h2"},{"title":"Tracking goal conversions​","type":1,"pageTitle":"Accelerated Mobile Pages integration","url":"/docs/integrations/amp-integration#tracking-goal-conversions","content":" To track goal conversion&lt;jtc-api-goal-conversions&gt; attach trigger to a link in a similar way to custom event &lt;ampCustomEvent&gt;.  This example will send goal conversion when page element using &quot;mygoal&quot; ID will be clicked:  &lt;amp-analytics type=&quot;ppasanalytics&quot;&gt; &lt;script type=&quot;application/json&quot;&gt; { &quot;vars&quot;: { &quot;host&quot;: &lt;instance_domain&gt;, &quot;website_id&quot;: &lt;app_id&gt;, &quot;website_hash&quot;: &lt;tracker_hash&gt; }, &quot;triggers&quot;: { &quot;exampleEvent&quot;: { &quot;selector&quot;: &quot;#mygoal&quot;, &quot;on&quot;: &quot;click&quot;, &quot;request&quot;: &quot;goal&quot;, &quot;vars&quot;: { &quot;goal_id&quot;: &quot;1&quot;, &quot;revenue&quot;: &quot;59.99&quot; } } } } &lt;/script&gt; &lt;/amp-analytics&gt;   These are parameters used by goal event:  “selector” CSS selector for element that should be watched “on” - HTML event type “vars” - Variables that should be used by this event. Custom events expect: “goal_id” - required&quot;revenue&quot; - optional  ","version":"Next","tagName":"h2"},{"title":"Track internal search events​","type":1,"pageTitle":"Accelerated Mobile Pages integration","url":"/docs/integrations/amp-integration#track-internal-search-events","content":" To track internal search event&lt;jtc-api-site-search&gt; attach trigger to a link in a similar way to custom event &lt;ampCustomEvent&gt;.  This example will send internal search event when page element using &quot;mysearch&quot; ID will be clicked:  &lt;amp-analytics type=&quot;ppasanalytics&quot;&gt; &lt;script type=&quot;application/json&quot;&gt; { &quot;vars&quot;: { &quot;host&quot;: &lt;instance_domain&gt;, &quot;website_id&quot;: &lt;app_id&gt;, &quot;website_hash&quot;: &lt;tracker_hash&gt; }, &quot;triggers&quot;: { &quot;exampleEvent&quot;: { &quot;selector&quot;: &quot;#mysearch&quot;, &quot;on&quot;: &quot;click&quot;, &quot;request&quot;: &quot;search&quot;, &quot;vars&quot;: { &quot;search_keyword&quot;: &quot;apple&quot;, &quot;search_category&quot;: &quot;fruits&quot;, &quot;search_result_count&quot;: &quot;10&quot;, } } } } &lt;/script&gt; &lt;/amp-analytics&gt;   These are parameters used by internal search event:  “selector” CSS selector for element that should be watched “on” - HTML event type “vars” - Variables that should be used by this event. Custom events expect: “search_keyword” - required“search_category” - required“search_result_count” - optional  ","version":"Next","tagName":"h2"},{"title":"Complete page example​","type":1,"pageTitle":"Accelerated Mobile Pages integration","url":"/docs/integrations/amp-integration#complete-page-example","content":" This example shows complete AMP page with 2 buttons. It will send page view, custom event and goal conversion.  &lt;!doctype html&gt; &lt;html amp lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;AMP example page&lt;/title&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt; &lt;link rel=&quot;canonical&quot; href=&quot;example.html&quot;&gt; &lt;style amp-boilerplate&gt;body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}&lt;/style&gt;&lt;noscript&gt;&lt;style amp-boilerplate&gt;body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}&lt;/style&gt;&lt;/noscript&gt; &lt;script async src=&quot;https://cdn.ampproject.org/v0.js&quot;&gt;&lt;/script&gt; &lt;script async custom-element=&quot;amp-analytics&quot; src=&quot;https://cdn.ampproject.org/v0/amp-analytics-0.1.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;amp-analytics type=&quot;ppasanalytics&quot;&gt; &lt;script type=&quot;application/json&quot;&gt; { &quot;vars&quot;: { &quot;host&quot;: &quot;example.piwik.pro&quot;, &quot;website_id&quot;: &quot;12345678-1234-1234-1234-1234567890ab&quot;, &quot;website_hash&quot;: &quot;cdef&quot; }, &quot;triggers&quot;: { &quot;trackRecommendation&quot;: { &quot;on&quot;: &quot;click&quot;, &quot;selector&quot;: &quot;#recommend&quot;, &quot;request&quot;: &quot;customevent&quot;, &quot;vars&quot;: { &quot;event_category&quot;: &quot;social&quot;, &quot;event_action&quot;: &quot;recommend&quot;, &quot;event_name&quot;: &quot;News letter&quot; } }, &quot;trackSubscription&quot;: { &quot;on&quot;: &quot;click&quot;, &quot;selector&quot;: &quot;#subscribe&quot;, &quot;request&quot;: &quot;goal&quot;, &quot;vars&quot;: { &quot;goal_id&quot;: &quot;1&quot; } } } } &lt;/script&gt; &lt;/amp-analytics&gt; &lt;h1&gt;Welcome&lt;/h1&gt; &lt;div&gt; &lt;button id=&quot;recommend&quot;&gt;Share this page with friends&lt;/button&gt; &lt;/div&gt; &lt;div&gt; &lt;button id=&quot;subscribe&quot;&gt;Subscribe to news letter&lt;/button&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;  ","version":"Next","tagName":"h2"},{"title":"track().search()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().search()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().search()","url":"/docs/sdks/android-sdk/methods/track().search()#syntax","content":" Java TrackHelper.track() .search(&quot;keyword&quot;) .category(&quot;category&quot;) .count(searchCount) .with(getTracker()); Kotlin TrackHelper.track() .search(&quot;keyword&quot;) .category(&quot;category&quot;) .count(searchCount) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().search()","url":"/docs/sdks/android-sdk/methods/track().search()#parameters","content":" keyword (string, required) A keyword the user entered into the search box.  category (string | array&lt;string&gt;, optional) A category selected in the search engine.  searchCount (number, optional) The number of search results.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().search()","url":"/docs/sdks/android-sdk/methods/track().search()#examples","content":" To send an internal search with the keyword &quot;ATM in London&quot; and 20 search results, but no category:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .search(&quot;ATM in London&quot;) .category(&quot;&quot;) .count(20) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .search(&quot;ATM in London&quot;) .category(&quot;&quot;) .count(20) .with(tracker)  ","version":"Next","tagName":"h2"},{"title":"track().sendApplicationDownload()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().sendApplicationDownload()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().sendApplicationDownload()","url":"/docs/sdks/android-sdk/methods/track().sendApplicationDownload()#syntax","content":" Java TrackHelper.track() .sendApplicationDownload() .with(getTracker()); Kotlin TrackHelper.track() .sendApplicationDownload() .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"track().sendApplicationDownload()","url":"/docs/sdks/android-sdk/methods/track().sendApplicationDownload()#example","content":" To track your app install:  Java Tracker tracker = ((PiwikApplication) getApplication()).getTracker(); TrackHelper.track() .sendApplicationDownload() .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker TrackHelper.track() .sendApplicationDownload() .with(tracker)  ","version":"Next","tagName":"h2"},{"title":"track().socialInteraction()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().socialInteraction()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().socialInteraction()","url":"/docs/sdks/android-sdk/methods/track().socialInteraction()#syntax","content":" Java TrackHelper.track() .socialInteraction(&quot;interaction&quot;, &quot;network&quot;) .with(getTracker()); Kotlin TrackHelper.track() .socialInteraction(&quot;interaction&quot;, &quot;network&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().socialInteraction()","url":"/docs/sdks/android-sdk/methods/track().socialInteraction()#parameters","content":" interaction (string, required) The interaction type. Example: like, share, comment.  network (string, required) The social media for which the interaction happened. Example: Facebook, Instagram, YouTube.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().socialInteraction()","url":"/docs/sdks/android-sdk/methods/track().socialInteraction()#examples","content":" To track a like on Facebook on your app:  Java TrackHelper.track() .socialInteraction(&quot;like&quot;, &quot;Facebook&quot;) .with(getTracker()); Kotlin TrackHelper.track() .socialInteraction(&quot;like&quot;, &quot;Facebook&quot;) .with(tracker)  ","version":"Next","tagName":"h2"},{"title":"track().visitVariables() 🗑","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().visitVariables()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().visitVariables() 🗑","url":"/docs/sdks/android-sdk/methods/track().visitVariables()#syntax","content":" Java TrackHelper.track() .visitVariables(index, &quot;name&quot;, &quot;value&quot;); Kotlin TrackHelper.track() .visitVariables(index, &quot;name&quot;, &quot;value&quot;)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().visitVariables() 🗑","url":"/docs/sdks/android-sdk/methods/track().visitVariables()#parameters","content":" index (number, required) Index where the variable is stored.  Note: If setIncludeDefaultCustomVars(true) is set, you can't use the index 4-5 because that method automatically tracks some items under those indexes. The setIncludeDefaultCustomVars(true) method is set by default.  name (string, required) Name of the variable. Valid format: UTF-8. Limited to 200 characters.  value (string, optional) Value of the variable. Valid format: UTF-8. Limited to 200 characters.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().visitVariables() 🗑","url":"/docs/sdks/android-sdk/methods/track().visitVariables()#examples","content":" To set a custom variable in the visit (session) scope and send it with a screen view:  Java TrackHelper.track() .visitVariables(1, &quot;age&quot;, &quot;25&quot;) TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(getTracker()); Kotlin TrackHelper.track() .visitVariables(1, &quot;age&quot;, &quot;25&quot;) TrackHelper.track() .screen(&quot;example/welcome&quot;) .title(&quot;Welcome&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().visitVariables() 🗑","url":"/docs/sdks/android-sdk/methods/track().visitVariables()#notes","content":" The visit (session) scope relates to the whole visit and holds captured custom dimension for the whole session.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"track().visitVariables() 🗑","url":"/docs/sdks/android-sdk/methods/track().visitVariables()#related-methods","content":" android setIncludeDefaultCustomVars()android track().variable()android track().dimension() ","version":"Next","tagName":"h2"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/other/content-security-policy","content":"Content Security Policy (CSP) ============== Introduction Specifying Content Security Policy is a common way to secure web applications. This mechanism allows specifying which scripts and styles can execute on page. It can be done either by adding aContent-Security-Policy header or an appropriate meta tag. You can read about Consent Security Policy here:https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP Content Security Policy nonce configuration ---------------It is common to allow only scripts and styles that were received from known domains or ones that have special nonce attribute. Nonce mechanism relies on two steps, defining nonce value in Content Security Policy and placing nonce value as an attribute in styles and scripts. Defining nonce in Content Security Policy settings `` `` `` `` `` `` `` ``` Nonce mechanism requires additional definition in script-src`directive of Content Security Policy: .. code-block:: javascript script-src &lt;your-sources&gt; 'nonce-INSERT_VALID_NONCE_VALUE'; .. note:: **Note:** Nonce value should be generated on the server-side. Its value should be different for each request. Please note that we leave here space for your permitted sources`\\&lt;your-sources\\&gt;`. Add nonce to container code `` \\ Consequently, default container code requires following modifications to work: Asynchronous snippet: In this container code the following changes (highlighted) are required: &lt;script type=&quot;text/javascript&quot; nonce=&quot;INSERT_VALID_NONCE_VALUE&quot;&gt; (function(window, document, dataLayerName, id) { window[dataLayerName]=window[dataLayerName]||[],window[dataLayerName].push({start:(new Date).getTime(),event:&quot;stg.start&quot;}); var scripts=document.getElementsByTagName('script')[0],tags=document.createElement('script'); function stgCreateCookie(a,b,c){var d=&quot;&quot;;if(c){var e=new Date;e.setTime(e.getTime()+24*c*60*60*1e3),d=&quot;;expires=&quot;+e.toUTCString()}document.cookie=a+&quot;=&quot;+b+d+&quot;; path=/&quot;} var isStgDebug=(window.location.href.match(&quot;stg_debug&quot;)||document.cookie.match(&quot;stg_debug&quot;))&amp;&amp;!window.location.href.match(&quot;stg_disable_debug&quot;); stgCreateCookie(&quot;stg_debug&quot;,isStgDebug?1:&quot;&quot;,isStgDebug?14:-1); var qP=[];dataLayerName!==&quot;dataLayer&quot;&amp;&amp;qP.push(&quot;data_layer_name=&quot;+dataLayerName),isStgDebug&amp;&amp;qP.push(&quot;stg_debug&quot;); var qPString=qP.length&gt;0?(&quot;?&quot;+qP.join(&quot;&amp;&quot;)):&quot;&quot;; tags.async=!0,tags.src=&quot;//client.containers.piwik.pro/&quot;+id+&quot;.js&quot;+qPString, scripts.parentNode.insertBefore(tags,scripts); !function(a,n,i){a[n]=a[n]||{};for(var c=0;c&lt;i.length;c++)!function(i){a[n][i]=a[n][i]||{},a[n][i].api=a[n][i].api||function(){ var a=[].slice.call(arguments,0);&quot;string&quot;==typeof a[0]&amp;&amp;window[dataLayerName].push({event:n+&quot;.&quot;+i+&quot;:&quot;+a[0],parameters:[].slice.call(arguments,1)})}}(i[c])}(window,&quot;ppms&quot;,[&quot;tm&quot;,&quot;cm&quot;]); })(window, document, 'dataLayer', 'feacd61d-0232-40a1-96c3-7e469f7bfa7f'); &lt;/script&gt; &lt;noscript&gt; &lt;iframe src=&quot;//client.containers.piwik.pro/feacd61d-0232-40a1-96c3-7e469f7bfa7f/noscript.html&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; &lt;/noscript&gt; Synchronous snippet: In this container code the following changes (highlighted) are required: &lt;script type=&quot;text/javascript&quot; nonce=&quot;INSERT_VALID_NONCE_VALUE&quot;&gt; (function(window, document, dataLayerName, id) { function stgCreateCookie(a,b,c){var d=&quot;&quot;;if(c){var e=new Date;e.setTime(e.getTime()+24*c*60*60*1e3),d=&quot;;expires=&quot;+e.toUTCString()}document.cookie=a+&quot;=&quot;+b+d+&quot;; path=/&quot;} var isStgDebug=(window.location.href.match(&quot;stg_debug&quot;)||document.cookie.match(&quot;stg_debug&quot;))&amp;&amp;!window.location.href.match(&quot;stg_disable_debug&quot;); stgCreateCookie(&quot;stg_debug&quot;,isStgDebug?1:&quot;&quot;,isStgDebug?14:-1); var qP=[];dataLayerName!==&quot;dataLayer&quot;&amp;&amp;qP.push(&quot;data_layer_name=&quot;+dataLayerName),isStgDebug&amp;&amp;qP.push(&quot;stg_debug&quot;); var qPString=qP.length&gt;0?(&quot;?&quot;+qP.join(&quot;&amp;&quot;)):&quot;&quot;; document.write('&lt;script src=&quot;//client.containers.piwik.pro/'+id+'.sync.js' + qPString + '&quot; nonce=&quot;INSERT_VALID_NONCE_VALUE&quot;&gt;&lt;/' + 'script&gt;'); })(window, document, 'dataLayer', 'feacd61d-0232-40a1-96c3-7e469f7bfa7f'); &lt;/script&gt; Note Note: All that is needed for Tag Manager to work is to replaceINSERT_VALID_NONCE_VALUE with generated nonce value. It should be done twice for both asynchronous and synchronous snippet. Adjust tags to work with Content Security Policy --------------- Asynchronous tags: in most cases there should not be any change required to make asynchronous tags work. Tag Manager will automatically insert nonce attribute to all fired tags. Only exceptions is when Your tag adds other scripts/styles on page by itself - in such case, You should add nonce attribute manually. Synchronous tags: since synchronous tags have to fire before whole page is loaded, following procedure is recommended. This procedure is recommended: Create new variable with value of nonce parameter. It is not required to create nonce variable in admin panel. Just pushing it on dataLayer before script is executed is enough. window.dataLayer.push({ nonce: INSERT_VALID_NONCE_VALUE }); Use created variable as value for nonce attribute like follows: &lt;script nonce=&quot;{{ nonce }}&quot;&gt; console.log(&quot;I'm synchronous tag!&quot;); document.write('&lt;p id=&quot;synchronous-tag&quot;&gt;I was inserted by synchronous tag&lt;/p&gt;'); &lt;/script&gt; Note Note: Finally, not all 3rd party tools that are available as built-in templates are adjusted to work with Content Security Policy. This includes e.g. Google Analytics. In such cases, please refer to documentation of each respective tool (e.g.https://developers.google.com/web/fundamentals/security/csp). Tag Manager debugger -------------- To load all necessary assets from Tag Manager debugger you need to define source with img-src, font-src and style-src directives: img-src &lt;your-sources&gt; client.containers.piwik.pro; font-src &lt;your-sources&gt; client.containers.piwik.pro; style-src &lt;your-sources&gt; client.containers.piwik.pro; Consent Manager form assets ------------ If your website is GDPR compliant then you need to describeconnect-src, style-src and img-src directives: connect-src &lt;your-sources&gt; client.piwik.pro client.containers.piwik.pro; style-src &lt;your-sources&gt; 'nonce-INSERT_VALID_NONCE_VALUE'; Note Please note that we define here tracking domain client.piwik.pro for collecting visitor consents and container domainclient.containers.piwik.pro for fetching consent form assets. Consent Manager's data subject request widget ------------ When using a data subject request widget, you need to add a nonce attribute to its &lt;script&gt; tag. &lt;div id=&quot;ppms_cm_data_subject&quot; class=&quot;ppms_cm_data_subject_widget__wrapper&quot; data-editor-centralize=&quot;true&quot; data-main-container=&quot;true&quot; data-root=&quot;true&quot;&gt; &lt;h3 id=&quot;ppms_cm_data_subject_header&quot; class=&quot;header3&quot;&gt;Data requests&lt;/h3&gt; &lt;p id=&quot;ppms_cm_data_subject_paragraph&quot; class=&quot;paragraph&quot;&gt; Please select below the type of data request along with any special requests in the body of the message. (...) &lt;/p&gt; &lt;form id=&quot;ppms_cm_data_subject_form&quot; class=&quot;ppms_cm_data_subject_form&quot; data-disable-select=&quot;true&quot;&gt; ... &lt;/form&gt; &lt;script nonce=&quot;INSERT_VALID_NONCE_VALUE&quot;&gt; ... &lt;/script&gt; &lt;/div&gt; Tracking with custom domain If your tracking domain is custom, then you need to define it withimg-src and script-src directives: img-src &lt;your-sources&gt; your-custom-cpp-domain.com; script-src &lt;your-sources&gt; your-custom-cpp-domain.com; Example Content Security Policy definition ------------ Following example configuration of CSP assumes: Client's website address: client.comConsent Manager is enabled for the websiteClient's organization name in Piwik PRO: clientClient's container domain: client.containers.piwik.proClient has Piwik PRO tag with default tracking domain:client.piwik.proNonce value: nceIOfn39fn3e9h3sdConfiguration allows 'self' source which is: client.com Content-Security-Policy: default-src 'self'; script-src 'self' client.piwik.pro 'nonce-nceIOfn39fn3e9h3sd'; connect-src 'self' client.containers.piwik.pro client.piwik.pro; img-src 'self' client.containers.piwik.pro client.piwik.pro; font-src 'self' client.containers.piwik.pro; style-src 'self' client.containers.piwik.pro 'nonce-nceIOfn39fn3e9h3sd'; ","keywords":"","version":"Next"},{"title":"Web API","type":0,"sectionRef":"#","url":"/docs/web-api/","content":"Web API Our web API lets you access data and features in Piwik PRO. Whether you need to get raw data, manage tags or add a new user, no problem – our API is at hand and ready to be used in your next project. See more getting-started/index.rst resources/index.rst methods/index.rst","keywords":"","version":"Next"},{"title":"Getting started","type":0,"sectionRef":"#","url":"/docs/web-api/getting-started/","content":"Getting started To get started with our web API, you need to set up authorization. You can try to follow our example and make a first call – just to see how it's like to work with our API. We also offer documentation that you can use in Postman. If you're ready to dig deeper, see the full list of methods. Next steps authorization.md make-a-first-call.md postman.md faq.md","keywords":"","version":"Next"},{"title":"Authorization","type":0,"sectionRef":"#","url":"/docs/web-api/getting-started/authorization","content":"","keywords":"","version":"Next"},{"title":"Create API keys​","type":1,"pageTitle":"Authorization","url":"/docs/web-api/getting-started/authorization#create-api-keys","content":" To create API keyes, follow these steps:  Log in to Piwik PRO.Go to Menu &gt; Profile.Navigate to API keys.Click Create a key.Enter Name and click OK.Copy Client ID and Client secret. They won’t be available after you close this window.  Note: Credentials are valid until they are deleted in Profile.  ","version":"Next","tagName":"h2"},{"title":"Create an access token​","type":1,"pageTitle":"Authorization","url":"/docs/web-api/getting-started/authorization#create-an-access-token","content":" To create an access token, follow these steps:  Piwik PRO API tokens use JWT format.Make a call:   curl -X POST 'https://&lt;example&gt;/auth/token' -H &quot;Content-Type: application/json&quot; --data '{ &quot;grant_type&quot;: &quot;client_credentials&quot;, &quot;client_id&quot;: &quot;&lt;client_id&gt;&quot;, &quot;client_secret&quot;: &quot;&lt;client_secret&gt;&quot; }'   Note: If you are the Core plan user, replace &lt;example&gt; with &lt;your_account_name&gt;.piwik.pro.  Response example:   {&quot;token_type&quot;:&quot;Bearer&quot;,&quot;expires_in&quot;:1800,&quot;access_token&quot;:&quot;&lt;your_access_token&gt;&quot;}   Now you can use &lt;your_access_token&gt; to communicate with Piwik PRO API. The token is a Bearer type, so you need to include it within the header in every API call.   Authorization: Bearer &lt;your_access_token&gt;   Note: Every token is valid for 30 minutes. expires_in shows the expiration time in seconds.  ","version":"Next","tagName":"h2"},{"title":"Delete API keys​","type":1,"pageTitle":"Authorization","url":"/docs/web-api/getting-started/authorization#delete-api-keys","content":" If you no longer want to use generated API credentials in access tokens, you need to delete them.  To delete API credentials, follow these steps:  Log in to Piwik PRO.Go to Menu &gt; Profile.Navigate to API keys.Choose credentials that you want to revoke and click X. ","version":"Next","tagName":"h2"},{"title":"track().order()","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().order()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().order()","url":"/docs/sdks/android-sdk/methods/track().order()#syntax","content":" Java TrackHelper.track() .order(&quot;orderID&quot;, orderGrandTotal) .subTotal(orderSubTotal) .tax(orderTax) .shipping(orderShipping) .discount(orderDiscount) .items(items) .with(getTracker()); Kotlin TrackHelper.track() .order(&quot;orderID&quot;, orderGrandTotal).subTotal(orderSubTotal) .tax(orderTax) .shipping(orderShipping) .discount(orderDiscount) .items(items) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().order()","url":"/docs/sdks/android-sdk/methods/track().order()#parameters","content":" orderID (string, required) The unique order ID.  orderGrandTotal (number, required) Total payment for an order. Including tax, shipping and discounts. Format: 1/100 of the basic monetary unit. Example: 100 is 1 USD.  orderSubTotal (number, optional) Payment for an order without shipping. Format: 1/100 of the basic monetary unit. Example: 100 is 1 USD.  orderTax (number, optional) Tax included in an order. Format: 1/100 of the basic monetary unit. Example: 100 is 1 USD.  orderShipping (number, optional) Shipping costs for an order. Format: 1/100 of the basic monetary unit. Example: 100 is 1 USD.  orderDiscount (number, optional) Discounts included in an order. Format: 1/100 of the basic monetary unit. Example: 100 is 1 USD.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().order()","url":"/docs/sdks/android-sdk/methods/track().order()#examples","content":" To track a confirmed order:  Java Tracker tracker = ((YourApplication) getApplication()).getTracker(); EcommerceItems items = new EcommerceItems(); // register all purchased items // EcommerceItems.Item(&quot;&lt;SKU&gt;&quot;).name(&quot;&lt;name&gt;&quot;).category(&quot;&lt;category&gt;&quot;).price(&lt;price&gt;).quantity(&lt;quantity&gt;) items.addItem(new EcommerceItems .Item(&quot;584340&quot;) .name(&quot;Specialized Stumpjumper&quot;) .category(&quot;Mountain bike&quot;) .price(500000) .quantity(1)); items.addItem(new EcommerceItems .Item(&quot;460923&quot;) .name(&quot;Specialized Chamonix&quot;) .category(&quot;Helmets&quot;) .price(20000) .quantity(1)); // track order TrackHelper.track() .order(&quot;43967392&quot;, 525000) .subTotal(520000) .tax(97000) .shipping(15000) .discount(10000) .items(items) .with(tracker); Kotlin val tracker: Tracker = (application as PiwikApplication).tracker var items: EcommerceItems = EcommerceItems() // register all purchased items // EcommerceItems.Item(&quot;&lt;SKU&gt;&quot;).name(&quot;&lt;name&gt;&quot;).category(&quot;&lt;category&gt;&quot;).price(&lt;price&gt;).quantity(&lt;quantity&gt;) items.addItem(EcommerceItems .Item(&quot;584340&quot;) .name(&quot;Specialized Stumpjumper&quot;) .category(&quot;Mountain bike&quot;) .price(500000) .quantity(1)) items.addItem(EcommerceItems .Item(&quot;460923&quot;) .name(&quot;Specialized Chamonix&quot;) .category(&quot;Helmets&quot;) .price(20000) .quantity(1)) // track order TrackHelper.track() .order(&quot;43967392&quot;, 525000) .subTotal(520000) .tax(97000) .shipping(15000) .discount(10000) .items(items) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"track().order()","url":"/docs/sdks/android-sdk/methods/track().order()#related-methods","content":" android items.addItem() ","version":"Next","tagName":"h2"},{"title":"FAQ","type":0,"sectionRef":"#","url":"/docs/web-api/getting-started/faq","content":"FAQ API returns application/json is not a valid JSON API Content-Type header, use application/vnd.api+json instead All API calls need to be created with this header: Content-Type: application/vnd.api+json. If you use curl, you need to use this flag: -H &quot;Content-Type: application/vnd.api+json&quot;. Postman allows configuring headers with the header tab. API returns JWT not found You need to use your API token with every API call. Always send your API token within this header: Authorization: Bearer &lt;your_access_token&gt;. If you use curl, you need to use this flag: -H &quot;Authorization: Bearer &lt;your_access_token&gt;&quot;. Postman allows configuring tokens in the authorization tab. Choose the Bearer Token type and paste the token there. Remember to keep your token secure because it gives access to sensitive data. API returns Expired JWT Token Every token is valid for 30 minutes. After the token expires, you can create it again. API returns access token not authorized This message means that you sent an access token within a correct Authorization: Bearer field, but the token is invalid. Check your token and try again.","keywords":"","version":"Next"},{"title":"Postman","type":0,"sectionRef":"#","url":"/docs/web-api/getting-started/postman","content":"Postman Postman is the tool that lets you build, send and test API calls. You can easily import Piwik PRO API to Postman and try it out. Here are the Swagger docs that you can you import: Access controlAppsAudit logMeta SitesModulesTracker settingsUsersUser GroupsAnd 12 more To use Postman, follow these steps: In Postman, click Import &gt; File or Link.Pick the file or link you want to import.Done. All of your paths are imported.Replace your account address in the URL. Example: https://example.piwik.pro.Add your token: In the selected API call, click Authorization.Use the Bearer Token type.Paste your token.Click Send to call API.","keywords":"","version":"Next"},{"title":"Methods","type":0,"sectionRef":"#","url":"/docs/web-api/methods/","content":"Methods","keywords":"","version":"Next"},{"title":"Access Control API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/access_control/access_control_api","content":"Access Control API","keywords":"","version":"Next"},{"title":"track().variable() 🗑","type":0,"sectionRef":"#","url":"/docs/sdks/android-sdk/methods/track().variable()","content":"","keywords":"","version":"Next"},{"title":"Syntax​","type":1,"pageTitle":"track().variable() 🗑","url":"/docs/sdks/android-sdk/methods/track().variable()#syntax","content":" Java TrackHelper.track() .variable(index, &quot;name&quot;, &quot;value&quot;); Kotlin TrackHelper.track() .variable(index, &quot;name&quot;, &quot;value&quot;)   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"track().variable() 🗑","url":"/docs/sdks/android-sdk/methods/track().variable()#parameters","content":" index (number, required) Index where the variable is stored.  Note: If setIncludeDefaultCustomVars(true) is set, you can only use index greater than 2 because that method automatically tracks some items under the index 1-2. The setIncludeDefaultCustomVars(true) method is set by default.  name (string, required) Name of the variable. Valid format: UTF-8.  value (string, optional) Value of the variable. Valid format: UTF-8. Limited to 200 characters.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"track().variable() 🗑","url":"/docs/sdks/android-sdk/methods/track().variable()#examples","content":" To set a custom variable in the screen scope and send it with a screen view:  Java TrackHelper.track() .variable(1, &quot;rating&quot;, &quot;5&quot;); TrackHelper.track() .screen(&quot;example/product-rating&quot;) .title(&quot;Product rating&quot;) .with(getTracker()); Kotlin TrackHelper.track() .variable(1, &quot;rating&quot;, &quot;5&quot;) TrackHelper.track() .screen(&quot;example/product-rating&quot;) .title(&quot;Product rating&quot;) .with(tracker)   Another way to set a custom variable and send it with a screen view:  Java TrackHelper.track() .variable(1, &quot;rating&quot;, &quot;5&quot;) .screen(&quot;example/product-rating&quot;) .title(&quot;Product rating&quot;) .with(getTracker()); Kotlin TrackHelper.track() .variable(1, &quot;rating&quot;, &quot;5&quot;) .screen(&quot;example/product-rating&quot;) .title(&quot;Product rating&quot;) .with(tracker)   ","version":"Next","tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"track().variable() 🗑","url":"/docs/sdks/android-sdk/methods/track().variable()#notes","content":" The screen scope relates to events like a screen view or downloading a file and holds captured variable for each event. The value is removed after an event is called.  ","version":"Next","tagName":"h2"},{"title":"Related methods​","type":1,"pageTitle":"track().variable() 🗑","url":"/docs/sdks/android-sdk/methods/track().variable()#related-methods","content":" android setIncludeDefaultCustomVars()android track().visitVariables()android track().dimension() ","version":"Next","tagName":"h2"},{"title":"Apps API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/apps/apps_api","content":"Apps API","keywords":"","version":"Next"},{"title":"Audit log API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/audit_log/audit_log_api","content":"Audit log API","keywords":"","version":"Next"},{"title":"Container Settings API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/container_settings/container_settings_api","content":"Container Settings API","keywords":"","version":"Next"},{"title":"Meta Sites API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/meta_sites/meta_sites_api","content":"Meta Sites API","keywords":"","version":"Next"},{"title":"Modules API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/modules/modules_api","content":"Modules API","keywords":"","version":"Next"},{"title":"Collecting & Processing Pipeline Settings API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/tracker_settings/tracker_settings_api","content":"Collecting &amp; Processing Pipeline Settings API","keywords":"","version":"Next"},{"title":"User Groups API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/user_groups/user_groups_api","content":"User Groups API","keywords":"","version":"Next"},{"title":"Authorized HTTP API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tag-manager-api/","content":"Authorized HTTP API tags triggers variables versions changelog operations","keywords":"","version":"Next"},{"title":"Operations","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tag-manager-api/operations","content":"Operations","keywords":"","version":"Next"},{"title":"Variables","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tag-manager-api/variables","content":"Variables","keywords":"","version":"Next"},{"title":"Object management API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/analytics-api/object_management_api","content":"Object management API","keywords":"","version":"Next"},{"title":"HTTP API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/raw-data-api/http_api","content":"HTTP API","keywords":"","version":"Next"},{"title":"Changelog","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tag-manager-api/changelog","content":"Changelog","keywords":"","version":"Next"},{"title":"API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tracker-api/","content":"API","keywords":"","version":"Next"},{"title":"Versions","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tag-manager-api/versions","content":"Versions","keywords":"","version":"Next"},{"title":"Users API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/administration-api/users/users_api","content":"Users API","keywords":"","version":"Next"},{"title":"Resources","type":0,"sectionRef":"#","url":"/docs/web-api/resources/","content":"Resources Here are all the things you might need when working with our web API. See more call-definition.rst permissions.rst columns/index.rst tags.rst built-in-variables.rst","keywords":"","version":"Next"},{"title":"Collecting & Processing Pipeline debugger API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tracker-api/tracker_debugger_api","content":"Collecting &amp; Processing Pipeline debugger API Collecting &amp; Processing Pipeline debugger API exposes sessions in live mode. It's a useful tool for verifying JavaScript Tracking Snippet implementation and observing changes done to it.","keywords":"","version":"Next"},{"title":"Make a first call","type":0,"sectionRef":"#","url":"/docs/web-api/getting-started/make-a-first-call","content":"","keywords":"","version":"Next"},{"title":"Generate your access token​","type":1,"pageTitle":"Make a first call","url":"/docs/web-api/getting-started/make-a-first-call#generate-your-access-token","content":" Example of a request:  POST /auth/token  curl -X POST 'https://&lt;example&gt;/auth/token' -H &quot;Content-Type: application/json&quot; --data '{ &quot;grant_type&quot;: &quot;client_credentials&quot;, &quot;client_id&quot;: &quot;your_generated_client_id&quot;, &quot;client_secret&quot;: &quot;your_generated_client_secret&quot; }'   Response example:  { &quot;token_type&quot;:&quot;Bearer&quot;, &quot;expires_in&quot;:1800, &quot;access_token&quot;:&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJwcG1zIiwiYXVkIjoiaHR0cHM6XC9cL3Rlc3RpbmcucGl3aWsucHJvXC9zZXR5LCJzdWIiOiJkNmNkZGMxMS1iZDA1L0aW5ncyIsImlhdCI6MTUzNzI3MDQ1OSwiZXhwIjoxNTM3MzU2ODUTRhYmUtYWIyZC02YjlhNjIxZmU0ZDciLCJvcmciOiJkZWZhdWx0In0.Nec2mYFRv6manzXjq0sHQxINZvu-fbDYT8AedVHBKYvu1F9hYKaFReY8rNgfsMANw2OX8-IKpTrQb1DyRkG4nxpIEbob528_lPd7roho5mtKlE8sfS9WZE1piYOwaNDySDEUwUowgj2xBiJqSODjxBI6qVhLkynGEEeNBVh-lrUmlcjpYqUc3saHvX72L-rqbIHa_1dzGarR-dcPyns-RpKjZEILzUSYOHdM09KDti-xsG-nbKHGdP8fVEEJPyupnAfJPOLHQg_j1c5IvJSvTKVF3j4_zo6Zw5g8YkaheT9Iwph5BGHFRneXatcmbwKI8JzSDFi6CinzI-okYKRPbg&quot; }   Note: access_token contains your token. You'll need it for all API calls. Every token is valid for 30 minutes.  ","version":"Next","tagName":"h2"},{"title":"Invite a user​","type":1,"pageTitle":"Make a first call","url":"/docs/web-api/getting-started/make-a-first-call#invite-a-user","content":" Request example:  POST /api/users/v2  curl -X POST 'https://&lt;example&gt;/api/users/v2' -H &quot;Authorization: Bearer &lt;your_access_token&gt;&quot; -H &quot;Content-Type: application/vnd.api+json&quot; --data '{ &quot;data&quot;: { &quot;type&quot;: &quot;ppms/user&quot;, &quot;attributes&quot;: { &quot;email&quot;: &quot;user@example.com&quot;, &quot;language&quot;: &quot;en-US&quot; } } }'   Replace in your request the following fields:  &lt;example&gt; with your account address. Example: example.piwik.pro.&lt;your_access_token&gt; with your generated access token  Example of a response:  { &quot;data&quot;: { &quot;id&quot;: &quot;b30e538d-4b05-4a75-ae25-7eb565901f38&quot;, &quot;type&quot;: &quot;ppms/user&quot;, &quot;attributes&quot;: { &quot;email&quot;: &quot;user@example.com&quot;, &quot;role&quot;: &quot;USER&quot;, &quot;addedAt&quot;: &quot;2021-08-02T12:16:30+00:00&quot;, &quot;language&quot;: &quot;en-US&quot; } } }   ","version":"Next","tagName":"h2"},{"title":"Get a user​","type":1,"pageTitle":"Make a first call","url":"/docs/web-api/getting-started/make-a-first-call#get-a-user","content":" After inviting a user, you can get a user.  Request example:  GET /api/users/v2/&lt;user_id&gt;  curl 'https://&lt;example&gt;/api/users/v2/b30e538d-4b05-4a75-ae25-7eb565901f38' -H &quot;Authorization: Bearer &lt;your_access_token&gt;&quot;   Note: The URL contains b30e538d-4b05-4a75-ae25-7eb565901f38. What is it? It is a user ID. If you want to update a given resource, you need to specify which one. You'll find a user ID in the data/id field in the response for adding a user.  Response example:  { &quot;data&quot;: { &quot;id&quot;: &quot;b30e538d-4b05-4a75-ae25-7eb565901f38&quot;, &quot;type&quot;: &quot;ppms/user&quot;, &quot;attributes&quot;: { &quot;email&quot;: &quot;user@example.com&quot;, &quot;role&quot;: &quot;USER&quot;, &quot;addedAt&quot;: &quot;2021-08-02T12:16:30+00:00&quot;, &quot;language&quot;: &quot;en-US&quot; } } }   ","version":"Next","tagName":"h2"},{"title":"Change the user's language​","type":1,"pageTitle":"Make a first call","url":"/docs/web-api/getting-started/make-a-first-call#change-the-users-language","content":" If you want to change the user's language after adding a user, you can use the following method.  Request example:  PATCH /api/users/v2/&lt;user_id&gt;  curl -X PATCH 'https://&lt;example&gt;/api/users/v2/b30e538d-4b05-4a75-ae25-7eb565901f38' -H &quot;Authorization: Bearer &lt;your_access_token&gt;&quot; -H &quot;Content-Type: application/vnd.api+json&quot; -v --data '{ &quot;data&quot;: { &quot;type&quot;: &quot;ppms/user&quot;, &quot;id&quot;: &quot;b30e538d-4b05-4a75-ae25-7eb565901f38&quot;, &quot;attributes&quot;: { &quot;language&quot;: &quot;de-DE&quot; } } }'   This request changed the user's language name from en-US to de-DE.  Here are some things to know:  We use -X PATCH before the URL. It means that this request is available using HTTP PATCH method.You also need to specify data/id. It's a JSON API requirement.data/type is required. For example, when you want to work with a user resource, specify its type as ppms/user.You can set only parameters you want to update. For more user attributes, go to User edit reference  API will return 204 No Content status code with an empty response.  ","version":"Next","tagName":"h2"},{"title":"Delete a user​","type":1,"pageTitle":"Make a first call","url":"/docs/web-api/getting-started/make-a-first-call#delete-a-user","content":" When you want to remove a user, you can use the following method.  Request example:  DELETE /api/users/v2/&lt;user_id&gt;  curl -X DELETE 'https://&lt;example&gt;/api/users/v2/b30e538d-4b05-4a75-ae25-7eb565901f38' -H &quot;Authorization: Bearer &lt;your_access_token&gt;&quot;   API will only return 204 No Content status code. ","version":"Next","tagName":"h2"},{"title":"Tags","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tag-manager-api/tags","content":"Tags","keywords":"","version":"Next"},{"title":"Tracking HTTP API","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tracker-api/http_api","content":"Tracking HTTP API Tracking HTTP API collects events such as page views, custom events and content impressions. The data sent to this API will be processed and eventually appear in Analytics reports. Warning All query parameter values inserted into URL must be URL encoded. For example, action_name parameter with value #1 Coffee &amp; Cookies should become action_name=%231%20Coffee%20%26%20Cookies in the URL. Requests with unencoded parameter values can create malformed events or be rejected completely.","keywords":"","version":"Next"},{"title":"Permissions","type":0,"sectionRef":"#","url":"/docs/web-api/resources/permissions","content":"Permissions Here's a list of permissions avaliable in Piwik PRO. Site/App permissions ↓ Action Permission →\tview\tedit\tedit-publish\tmanageview\t✔\t✔\t✔\t✔ edit ✔\t✔\t✔ publish ✔\t✔ manage ✔ view: allows viewing an appedit: allows editing an apppublish: allows publishing changes in Tag Managermanage: allows managing user permissions for an appadd: allows adding apps (owner only)delete: allows deleting an app (owner only) Meta site/app permissions ↓ Action Permission →\tview\tedit\tmanageview\t✔\t✔\t✔ edit ✔\t✔ view_details ✔ edit_details ✔ list_apps_in_meta_site ✔ manage ✔ view: allows viewing a meta site in Analyticsedit: allows editing meta site reports in Analyticsview_details: allows viewing meta site details in Administrationedit_details: allows editing meta site details in Administrationlist_apps_in_meta_site: allows listing apps in a meta sitemanage: allows managing user permissions for a meta siteadd: allows creating new meta site (owner only)delete: allows deleting meta site (owner only)add_app_to_meta_site: allows adding apps to a meta site (owner only)remove_app_from_meta_site: allows removing apps from a meta site (owner only)","keywords":"","version":"Next"},{"title":"Metrics","type":0,"sectionRef":"#","url":"/docs/web-api/resources/columns/google-search-console","content":"Google Search Console: metrics &amp; dimensions ===================== Metrics Here's a list of metrics that are avaliable in Piwik PRO when you use Google Search Console integration. Metric name\tColumn ID\tScope\tTypeClicks (search engine)\tsearch_engine_clicks\texternal\tint Impressions (search engine)\tsearch_engine_impressions\texternal\tint CTR (search engine)\tsearch_engine_ctr\texternal\tfloat Average position (search engine)\tsearch_engine_average_position\texternal\tfloat Dimensions Here's a list of dimensions that are avaliable in Piwik PRO when you use Google Search Console integration. Dimension name\tColumn ID\tScope\tType\tDatabase type (1)\tNullable\tNotesSource\tsource\tsession\tstr\tstring\tFalse Medium\tmedium\tsession\tstr\tstring\tFalse Source/Medium\tsource_medium\tsession\tstr\tstring\tFalse Channel\treferrer_type\tsession\t[int, str]\tuint8\tFalse\treferrer_type.json &lt;/pstatic/json/enum/referrer_type.json&gt; Referrer URL\treferrer_url\tsession\tstr\tstring\tFalse Device type\tdevice_type\tsession\t[int, str]\tuint8\tTrue\tdevice_type.json &lt;/pstatic/json/enum/device_type.json&gt; Continent\tlocation_continent_iso_code\tsession\t[str, str]\tstring(2)\tTrue\tlocation_continent_iso_code.json &lt;/pstatic/json/enum/location_continent_iso_code.json&gt; Country\tlocation_country_name\tsession\t[str, str]\tstring\tTrue\tISO 3166-2 codes (e.g. &quot;PL&quot;) Session entry URL\tsession_entry_url\tsession\tstr\tstring\tFalse Timestamp\ttimestamp\tsession\tdate\tnot applicable\tFalse\tby default in Raw data API Search engine keyword\tsearch_engine_keyword\texternal\tstr\tstring\tFalse\tnot available in Raw data API Website Name\twebsite_name\tsession\t[str, str]\tnot applicable\tFalse\twebsite UUID Database type is the source column of a dimension. Enum shows the ID type. Not applicable shows a dymamic dimension. Mixed queries It is possible to request both internal analytics and Google Search Console metrics in a single query (for example: &quot;Sessions&quot; and &quot;Clicks (search engine)&quot;), however only the common dimensions listed belowmay be used in such queries. Dimension name\tColumn ID\tScope\tType\tDatabase type (1)\tNullable\tNotesSource\tsource\tsession\tstr\tstring\tFalse Medium\tmedium\tsession\tstr\tstring\tFalse Source/Medium\tsource_medium\tsession\tstr\tstring\tFalse Channel\treferrer_type\tsession\t[int, str]\tuint8\tFalse\treferrer_type.json &lt;/pstatic/json/enum/referrer_type.json&gt; Referrer URL\treferrer_url\tsession\tstr\tstring\tFalse Device type\tdevice_type\tsession\t[int, str]\tuint8\tTrue\tdevice_type.json &lt;/pstatic/json/enum/device_type.json&gt; Continent\tlocation_continent_iso_code\tsession\t[str, str]\tstring(2)\tTrue\tlocation_continent_iso_code.json &lt;/pstatic/json/enum/location_continent_iso_code.json&gt; Country\tlocation_country_name\tsession\t[str, str]\tstring\tTrue\tISO 3166-2 codes (e.g. &quot;PL&quot;) Session entry URL\tsession_entry_url\tsession\tstr\tstring\tFalse Timestamp\ttimestamp\tsession\tdate\tnot applicable\tFalse\tby default in Raw data API Website Name\twebsite_name\tsession\t[str, str]\tnot applicable\tFalse\twebsite UUID Database type is the source column of a dimension. Enum shows the ID type. Not applicable shows a dymamic dimension. Warning Using dimensions that are not explicitly listed in the table above in such queries (either as query columns or as filters) will result in aBad Request response.","keywords":"","version":"Next"},{"title":"Simple metrics","type":0,"sectionRef":"#","url":"/docs/web-api/resources/columns/metrics_mapping","content":"Legacy vs. new metrics =============== If you migrate from Analytics classic to Analytics new, you need to use different metric names in your API calls. Here's a list that will help you with that. Simple metrics +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Metric name | Legacy API | New API | +==================================+=============================================+=====================================================+ | Events | nb_actions | {&quot;column_id&quot;: &quot;events&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Sessions | nb_visits | {&quot;column_id&quot;: &quot;sessions&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Visitors | nb_uniq_visitors | {&quot;column_id&quot;: &quot;visitors&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Users | nb_users | {&quot;column_id&quot;: &quot;users&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Page views | nb_pageviews | {&quot;column_id&quot;: &quot;page_views&quot;} | | | nb_hits | | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Unique page views | nb_uniq_pageviews | {&quot;column_id&quot;: &quot;unique_page_views&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Outlinks | nb_outlinks | {&quot;column_id&quot;: &quot;outlinks&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Unique outlinks | nb_uniq_outlinks | {&quot;column_id&quot;: &quot;unique_outlinks&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Downloads | nb_downloads | {&quot;column_id&quot;: &quot;downloads&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Unique downloads | nb_uniq_downloads | {&quot;column_id&quot;: &quot;unique_downloads&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Searches | – | {&quot;column_id&quot;: &quot;searches&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Unique searches | nb_searches | {&quot;column_id&quot;: &quot;unique_searches&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Custom events | nb_events | {&quot;column_id&quot;: &quot;custom_events&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Unique custom events | – | {&quot;column_id&quot;: &quot;unique_custom_events&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Content impressions | nb_impressions | {&quot;column_id&quot;: &quot;content_impressions&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Unique content impressions | – | {&quot;column_id&quot;: &quot;unique_content_impressions&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Content interactions | nb_interactions | {&quot;column_id&quot;: &quot;content_interactions&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Unique content interactions | – | {&quot;column_id&quot;: &quot;unique_content_interactions&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Content interaction rate | interaction_rate | {&quot;column_id&quot;: &quot;content_interaction_rate&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Goal conversions | nb_conversions | {&quot;column_id&quot;: &quot;goal_conversions&quot;} | | | | | +----------------------------------+ Note: Ecommerce conversion was reported +-----------------------------------------------------+ | Ecommerce conversions | as goal conversion for goal_id 0. | {&quot;column_id&quot;: &quot;ecommerce_conversions&quot;} | | | | | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Goal conversions (specific goal) | &lt;idGoal&gt;_nb_conversions | {&quot;column_id&quot;: &quot;goal_conversions&quot;, &quot;goal_id&quot;: 1} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Ecommerce abandoned carts | – | {&quot;column_id&quot;: &quot;ecommerce_abandoned_carts&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Goal conversion rate | conversion_rate | {&quot;column_id&quot;: &quot;goal_conversion_rate&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Ecommerce conversion rate | – | {&quot;column_id&quot;: &quot;ecommerce_conversion_rate&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Entries | entry_nb_visits | {&quot;column_id&quot;: &quot;entries&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Entry rate | – | {&quot;column_id&quot;: &quot;entry_rate&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Exits | exit_nb_visits | {&quot;column_id&quot;: &quot;exits&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Exit rate | exit_rate | {&quot;column_id&quot;: &quot;exit_rate&quot;} | | | | | +----------------------------------+ Note: Definition switches depending +-----------------------------------------------------+ | Exit rate (events) | on report | {&quot;column_id&quot;: &quot;exit_rate_events&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Bounces | bounce_count | {&quot;column_id&quot;: &quot;bounces&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Bounce rate | bounce_rate | {&quot;column_id&quot;: &quot;bounce_rate&quot;} | | | | | +----------------------------------+ Note: Definition switches depending +-----------------------------------------------------+ | Bounce rate (events) | on report | {&quot;column_id&quot;: &quot;bounce_rate_events&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | % of returning visitors | – | {&quot;column_id&quot;: &quot;returning_visitors_rate&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Visitor IPs | – | {&quot;column_id&quot;: &quot;visitor_ips&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Events per session | nb_actions_per_visit | {&quot;column_id&quot;: &quot;events_per_session&quot;} | | | | | | | Note: Does not include all event types | | | | | | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ | Unique purchases | – | {&quot;column_id&quot;: &quot;unique_purchases&quot;} | +----------------------------------+---------------------------------------------+-----------------------------------------------------+ Note Note: Event dimensions can only be used with metrics calculated for an event dimension. Calculated metrics Here's a list of common examples of calculated metrics. Not all possible combinations are listed here. +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Metric name | Legacy API | New API | +=====================================+=================================+=============================================================================+ | Sum of goal revenue | revenue | {&quot;column_id&quot;: &quot;goal_revenue&quot;, &quot;transformation_id&quot;: &quot;sum&quot;} | +-------------------------------------+ ecommerce revenue was reported +-----------------------------------------------------------------------------+ | Sum of ecommerce revenue | as goal revenue for goal_id 0 |{&quot;column_id&quot;: &quot;revenue&quot;, &quot;transformation_id&quot;: &quot;sum&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Sum of goal revenue (specific goal) | &lt;idGoal&gt;_revenue |{&quot;column_id&quot;: &quot;goal_revenue&quot;, &quot;transformation_id&quot;: &quot;sum&quot;, &quot;goal_id&quot;: 1} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Average generation time | avg_time_generation | {&quot;column_id&quot;: &quot;page_generation_time&quot;, &quot;transformation_id&quot;: &quot;average&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Max generation time | max_time_generation | {&quot;column_id&quot;: &quot;page_generation_time&quot;, &quot;transformation_id&quot;: &quot;max&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Average time on page | avg_time_on_page | {&quot;column_id&quot;: &quot;time_on_page&quot;, &quot;transformation_id&quot;: &quot;average&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Sum of time on page | sum_time_spent | {&quot;column_id&quot;: &quot;time_on_page&quot;, &quot;transformation_id&quot;: &quot;sum&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Sum of session time | sum_visit_length | {&quot;column_id&quot;: &quot;session_total_time&quot;, &quot;transformation_id&quot;: &quot;sum&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Average session time | avg_time_on_site | {&quot;column_id&quot;: &quot;session_total_time&quot;, &quot;transformation_id&quot;: &quot;average&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Max events in session | max_actions | {&quot;column_id&quot;: &quot;session_total_events&quot;, &quot;transformation_id&quot;: &quot;max&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Sum of custom events value | sum_event_value | {&quot;column_id&quot;: &quot;custom_event_value&quot;, &quot;transformation_id&quot;: &quot;sum&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ | Average custom events value | avg_event_value | {&quot;column_id&quot;: &quot;custom_event_value&quot;, &quot;transformation_id&quot;: &quot;average&quot;} | +-------------------------------------+---------------------------------+-----------------------------------------------------------------------------+ Note Note: Event dimensions can only be used with metrics calculated for an event dimension. Not available +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Name | Legacy API | Closest equivalent in Analytics new | +====================================================================+==================================+======================================================================+ | Number of sessions that converted a goal | nb_visits_converted | Sessions metric with filter goal_conversions &gt; 0 | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Number of custom events which had a value set | nb_events_with_value | Custom events metric with filter custom event value &gt; 0 | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Number of hits that included generation time information | nb_hits_with_time_generation | Page views metric with filter page_generation_time &gt; 0 | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Number of unique visitors that started their visit on this page | entry_nb_uniq_visitors | - | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Number of page views for sessions that started on this page | entry_nb_actions | Entries metric (all entries are page views now) | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Time spent, in seconds, by sessions that started on this page | entry_sum_visit_length | - | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Number of sessions that started on this page, and bounced | entry_bounce_count | Bounces metric | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Number of unique visitors that ended their visit on this page | exit_nb_uniq_visitors | - | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Sum of daily unique visitors over days in the period | sum_daily_nb_uniq_visitors | No longer relevant, unique visitors are calculated across any period | +--------------------------------------------------------------------+----------------------------------+ | | Sum of daily unique visitors that started their visit on this page | sum_daily_entry_nb_uniq_visitors | | | | sum_daily_exit_nb_uniq_visitors | | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+ | Number of times this action was done after a site search | nb_hits_following_search | - | +--------------------------------------------------------------------+----------------------------------+----------------------------------------------------------------------+","keywords":"","version":"Next"},{"title":"API call definition","type":0,"sectionRef":"#","url":"/docs/web-api/resources/call-definition","content":"API call definition When you want to query your database, you can use an API call definition in Piwik PRO. The definition is avaliable for each report inside Piwik PRO. Just make a few clicks and have your API call ready. To fetch data directly from a report, follow these steps: Log in to Piwik PRO.Go to Menu &gt; Analytics.Navigate to Reports, Custom reports, Goals, orEcommerce.On the left, click a report that you want to work with.Click the three-dot icon next to the report section that you want to use. Click View API call definition. Copy an API endpoint or API query.","keywords":"","version":"Next"},{"title":"Triggers","type":0,"sectionRef":"#","url":"/docs/web-api/methods/tag-manager-api/triggers","content":"Triggers","keywords":"","version":"Next"},{"title":"Metrics","type":0,"sectionRef":"#","url":"/docs/web-api/resources/columns/sharepoint","content":"SharePoint: metrics &amp; dimensions ========== Metrics Here's a list of metrics that are avaliable in Piwik PRO when you use SharePoint integration. Metric name\tColumn ID\tScope\tTypeSharePoint shares\tsharepoint_shares\tsession\tint SharePoint likes\tsharepoint_likes\tsession\tint SharePoint comments\tsharepoint_comments\tsession\tint SharePoint promotions\tsharepoint_promotions\tsession\tint SharePoint creations\tsharepoint_creations\tsession\tint SharePoint edits\tsharepoint_edits\tsession\tint SharePoint deletions\tsharepoint_deletions\tsession\tint SharePoint opens\tsharepoint_opens\tsession\tint SharePoint uploads\tsharepoint_uploads\tsession\tint SharePoint item views\tsharepoint_item_views\tsession\tint SharePoint item attachment views\tsharepoint_item_attachment_views\tsession\tint SharePoint item shares\tsharepoint_item_shares\tsession\tint Dimensions Here's a list of dimensions that are avaliable in Piwik PRO when you use SharePoint integration. Dimension name\tColumn ID\tScope (1)\tType\tDatabase type (2)\tNullable\tNotesSharePoint display name\tsharepoint_display_name\tsession\tstr\tstring\tTrue SharePoint office\tsharepoint_office\tsession\tstr\tstring\tTrue SharePoint department\tsharepoint_department\tsession\tstr\tstring\tTrue SharePoint job title\tsharepoint_job_title\tsession\tstr\tstring\tTrue SharePoint shares in session\tsession_total_sharepoint_shares\tsession\tint\tuint16\tFalse SharePoint likes in session\tsession_total_sharepoint_likes\tsession\tint\tuint16\tFalse SharePoint comments in session\tsession_total_sharepoint_comments\tsession\tint\tuint16\tFalse SharePoint promotions in session\tsession_total_sharepoint_promotions\tsession\tint\tuint16\tFalse SharePoint creations in session\tsession_total_sharepoint_creations\tsession\tint\tuint16\tFalse SharePoint edits in session\tsession_total_sharepoint_edits\tsession\tint\tuint16\tFalse SharePoint deletions in session\tsession_total_sharepoint_deletions\tsession\tint\tuint16\tFalse SharePoint opens in session\tsession_total_sharepoint_opens\tsession\tint\tuint16\tFalse SharePoint uploads in session\tsession_total_sharepoint_uploads\tsession\tint\tuint16\tFalse SharePoint item views in session\tsession_total_sharepoint_item_views\tsession\tint\tuint16\tFalse SharePoint item attachment views in session\tsession_total_sharepoint_item_attachment_views\tsession\tint\tuint16\tFalse SharePoint item shares in session\tsession_total_sharepoint_item_shares\tsession\tint\tuint16\tFalse SharePoint action\tsharepoint_action\tevent\t[int, str]\tuint8\tTrue\tsharepoint_action.json &lt;/pstatic/json/enum/sharepoint_action.json&gt; SharePoint object type\tsharepoint_object_type\tevent\t[int, str]\tuint8\tTrue\tsharepoint_object_type.json &lt;/pstatic/json/enum/sharepoint_object_type.json&gt; SharePoint content type\tsharepoint_content_type\tevent\tstr\tstring\tTrue SharePoint author\tsharepoint_author\tevent\tstr\tstring\tTrue SharePoint author's display name\tsharepoint_author_display_name\tevent\tstr\tstring\tTrue SharePoint author's office\tsharepoint_author_office\tevent\tstr\tstring\tTrue SharePoint author's department\tsharepoint_author_department\tevent\tstr\tstring\tTrue SharePoint author's job title\tsharepoint_author_job_title\tevent\tstr\tstring\tTrue SharePoint file url\tsharepoint_file_url\tevent\tstr\tstring\tTrue SharePoint file type\tsharepoint_file_type\tevent\tstr\tstring\tTrue If you make a call that includes one or more columns with theevent scope, the whole query will be calculated using events – not sessions. This might distort some custom metrics like average session time.Database type is the source column of a dimension. Enum shows the ID type. Not applicable shows a dymamic dimension.","keywords":"","version":"Next"},{"title":"Tags","type":0,"sectionRef":"#","url":"/docs/web-api/resources/tags","content":"","keywords":"","version":"Next"},{"title":"Deprecated tags​","type":1,"pageTitle":"Tags","url":"/docs/web-api/resources/tags#deprecated-tags","content":" Here's a list of tags that are deprecated and soon will be removed. We reccomend not using them.  Clicktale Tracking Code tagDoubleClick Conversion tag  ","version":"Next","tagName":"h2"},{"title":"Renamed tags​","type":1,"pageTitle":"Tags","url":"/docs/web-api/resources/tags#renamed-tags","content":" Here's a list of renamed tags. The attribute value used for these tags remained unchanged so you don't need to change anything in your setup.  Old tag name\tNew tag nameFacebook Retargeting Pixel tag\tMeta Pixel tag DoubleClick Floodlight Sales tag\tFloodlight Sales tag DoubleClick Floodlight Counter tag\tFloodlight Counter tag ","version":"Next","tagName":"h2"},{"title":"Built-in variables","type":0,"sectionRef":"#","url":"/docs/web-api/resources/built-in-variables","content":"Built-in variables Here's a list of built-in variables avaliable in Tag Manager. Name\tVariable_id\tDescriptionHistory source\tcaf01b44-cdbf-4a7e-a7e8-0150744b4e32\tContains information about the last method/event that updated the History object. It changes its value when a pushState, replaceState, popState or hashchange event occurs. History state\tc98aff1e-a24a-4ab7-bad4-d7e0f056b42e\tContains the current value of HTML5 history state which is of type any. It changes its value when a history state meets a defined condition. Old history state\ta489adb8-f2cf-4a09-8b7a-e6a048b943d7\tContains the previous value of HTML5 history state which is of type any. It changes its value when a previous history state meets a defined condition. History fragment\td462fb15-d23c-40e2-bc54-494377accccb\tContains the current value of URL fragment identifier (hash). It changes its value when a hash in the page URL meets a defined condition. Old history fragment\t44ef5a4b-4009-4f66-8fb4-c8137c0ed1b0\tContains the previous value of URL fragment identifier (hash). It changes its value when a previous hash in the page URL meets a defined condition. Click ID\tf39468e9-ae2d-4e58-9e2c-73a4d44add6f\tContains the ID of the clicked element. It changes its value when the visitor clicks an element with the chosen ID. Click Url\tefd3558a-714d-4b33-9edd-2bbeb0b5eaf7\tContains the URL of the clicked element. It changes its value when the visitor clicks a link with the chosen URL. Click Classes\tefc09356-e1f2-40f7-8a0a-4c454429e678\tContains the class(es) of the clicked element. It changes its value when the visitor clicks an element with the chosen CSS class. Click Element\tdb5a673e-dabe-4dfa-908c-d08b369d08c9\tContains DOM object of clicked HTML element. Form ID\tb1504526-de0d-4c27-9ff0-1ee7734561ed\tContains the ID of the submitted form element. It changes its value when the visitor submits a form with the chosen ID. Form Url\t0e45761b-d00d-4b18-88c1-eb8fc233d3da\tContains the URL of the submitted form element. It changes its value when the visitor submits a form that sends a request to the chosen URL. Form Classes\td7c47336-342d-4c9b-b35a-fa13f238ca44\tContains the class(es) of the submitted form element. It changes its value when the visitor submits a form with the chosen CSS class. Form Name\t028f3993-dc39-4ad1-8602-f6345c91f3bb\tContains name of the submitted form. Event\t977a1f9d-4fdb-43bf-9549-bdf68a7b69a6\tThe name of the event emitted on dataLayer. It changes its value when a chosen custom event occurs in dataLayer. Time on website\t4a3cbab8-e239-44ca-b1c9-6c1bc5cc3fbd\tIt changes its value when the visitor is on the website or page for a certain amount of time. For example, fires a tag when the visitor spends at least 15 seconds on a page or website. Page Scroll\ta9a87b7d-d565-433d-8090-df9d80bf91f5\tIt changes its value when the visitor scrolls to the chosen point on the page. For example, the visitor scrolls 50% of the page or scrolls to 1440 px on the page. Leave content\tc2fe42d6-2cbc-45d0-b4df-af92fdbdc2fc\tIt changes its value when the cursor leaves a page. You can choose two options for this condition: page exit intent — the cursor leaves page via top edge or cursor leaving the browser's area — the cursor leaves page via any edge. Page Url\t67ed6060-eace-4370-8ede-a083f7c909f1\tContains the whole URL of the current page. Page Path\te1e2b185-464f-4eb5-8575-feec34c5e281\tContains the path of the URL of the current page. Page Hostname\t42ff090e-f97c-45b5-8625-21ae26891382\tContains the hostname of the URL of the current page. View within session\t18c827bd-43e2-409a-a25d-cd8b0f6b95f7\tContains time in seconds from last interaction. Referrer\t8530b589-aaac-42e4-b4c0-dfeef1360ee5\tThe URL of the page that linked to the current page. External referrer\t6fa9617f-00b8-4bed-8112-ccbb32033c74\tThe URL of the page from the website with a different hostname that linked to your current website. Campaign\ta3f51ab7-ea76-4adc-a839-a32d392df37c\tIts value based on the utm_campaign or pk_campaign parameter from URL. Traffic source\t78fec807-3991-4fbc-ad57-238a6960d0b7\tContains traffic source: campaign, organic search, social, website, direct. It changes its value when the visitor clicks an element on any page to which they came from the chosen traffic source: campaign, organic search, social, referral, direct. Returning Visitor\td76335ca-0ae1-4540-8b7e-5ff7acb0d14f\tLogical condition which says if this is the user’s first visit or not. It changes its value when a returning visitor clicks an element on the chosen page (this mechanism is based on the cookie). Audience manager audience\t86068b14-804c-4b44-8a48-68ab37244ffc\tContains the audience list of the visitor Consents\t67f49c79-bab6-4b0f-95c8-3bf624b6398f\tContains information about the current and previous state of visitor consents. Found elements\t7dead2a9-5804-4cdd-8d73-b04d338952e9\tVariable used in Element presence trigger. It contains the class name of the found elements that the trigger was set to look for.","keywords":"","version":"Next"},{"title":"Flutter SDK","type":0,"sectionRef":"#","url":"/docs/sdks/Flutter-sdk","content":"","keywords":"","version":"Next"},{"title":"SDK Configuration​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#sdk-configuration","content":" ","version":"Next","tagName":"h2"},{"title":"Server​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#server","content":" You need a Piwik PRO account on the cloud or an on-premises setup which your mobile app will communicate with. For details, please visit the Piwik PRO website.Create a new website (or app) in the Piwik PRO web interface.Copy and note the Website ID from “Administration &gt; Websites &amp; apps &gt; Installation” and your server address.  ","version":"Next","tagName":"h3"},{"title":"Client​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#client","content":" Run this command:​  With Dart:​  $ dart pub add flutter_piwikpro  With Flutter:​  $ flutter pub add flutter_piwikpro  This will add a line like this to your package's pubspec.yaml (and run an implicit dart pub get):  dependencies: flutter_piwikpro: ^0.0.1   Alternatively, your editor might support dart pub get or flutter pub get. Check the docs for your editor to learn more.  Import it​  Now in your Dart code, you can use:  import 'package:flutter_piwikpro/flutter_piwikpro.dart';  Configuration​  You'll need to configure the tracker before using any other methods - for that you will need the base URL address of your tracking server and website ID (you can find it in Administration &gt; Websites &amp; apps &gt; Installation on the web interface).  await FlutterPiwikPro.sharedInstance.configureTracker(baseURL: 'https://your.piwik.pro.server.com', siteId: '01234567-89ab-cdef-0123-456789abcdef');   iOS and Android parameters:​  String baseURL - base URL of your tracking serverString siteId - ID of your website or application  Usage and general info​  Every method from the sdk is async, and every method can throw exceptions - for example if you try to use sdk methods without configuring the tracker first - which you can capture using the standard try-catch approach. For example:  try { final result = await FlutterPiwikPro.sharedInstance.trackDownload('http://your.server.com/bonusmap2.zip'); print(result); } catch (exception) { //handle an exception }   If a method call is succesful, most of the methods, unless specified, will return a String that describes which method was called, and which parameters were used, for example:  FlutterPiwikPro - configureTracker completed with parameters: baseURL: https://your.piwik.pro.server.com, siteId: 01234567-89ab-cdef-0123-456789abcdef   ","version":"Next","tagName":"h3"},{"title":"Using Piwik PRO SDK Flutter Wrapper​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#using-piwik-pro-sdk-flutter-wrapper","content":" Data Anonymization​  Anonymization is a feature that allows tracking a user’s activity for aggregated data analysis even if the user doesn’t consent to track the data. If a user does not agree to being tracked, he will not be identified as the same person across multiple sessions.  Personal data will not be tracked during the session (i.e. user ID) If the anonymization is enabled, a new visitor ID will be created each time the application starts.  Anonymization is enabled by default.  You can turn the anonymization on and off by calling setAnonymizationState:  await FlutterPiwikPro.sharedInstance.setAnonymizationState(true);   bool shouldAnonymize - pass true to enable anonymization, or false to disable it.  Tracking Screen Views​  The basic functionality of the SDK is Tracking Screen Views which represent the content the user is viewing in the application. To track a screen you only need to provide the name of the screen. This name is internally translated by the SDK to an HTTP URL as the Piwik PRO server uses URLs for tracking views. Additionally, Piwik PRO SDK uses prefixes which are inserted in generated URLs for various types of action(s).  To track screen views you can use the trackScreen method:   await FlutterPiwikPro.sharedInstance.trackScreen(screenName: &quot;menuScreen&quot;);   iOS and Android parameters:​  String path – title of the action being tracked. The appropriate screen path will be generated for this action.  Additional Android only parameters:​  String? title (optional) – the title of the action being tracked.  Tracking Custom Events​  Custom events can be used to track the user’s interaction with various custom components and features of your application, such as playing a song or a video. You can read more about events in the Piwik PRO documentation and ultimate guide to event tracking.  To track custom events you can use the trackCustomEvent method:  await FlutterPiwikPro.sharedInstance.trackCustomEvent( action: 'test action', category: 'test category', name: 'test name', value: 120);   iOS and Android parameters:​  String category – this String defines the event category. You may define event categories based on the class of user actions ( e.g. taps, gestures, voice commands), or you may define them based upon the features available in your application (e.g. play, pause, fast forward, etc.).String action – this String defines the specific event action within the category specified. In the example, we are essentially saying that the category of the event is user clicks, and the action is a button click.String? name (optional) – this String defines a label associated with the event. For example, if you have multiple button controls on a screen, you might use the label to specify the specific identifier of a button that was clicked.double? value (optional) – this Float defines a numerical value associated with the event. For example, if you were tracking “Buy” button clicks, you might log the number of items being purchased, or their total cost.  Additional Android only parameters:​  String? path (optional) - the path under which this event occurred.  ","version":"Next","tagName":"h2"},{"title":"Tracking Exceptions​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-exceptions","content":" Tracking exceptions allow the measurement of exceptions and errors in your app. Exceptions are tracked on the server in a similar way as screen views, however, URLs internally generated for exceptions always use the fatal or caught prefix.  To track exceptions you can use the trackException method:  await FlutterPiwikPro.sharedInstance.trackException(description: &quot;description of an exception&quot;, isFatal: false);   iOS and Android parameters:​  String description – provides the exception message.bool isFatal – true if an exception is fatal.  ","version":"Next","tagName":"h3"},{"title":"Tracking Social Interactions​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-social-interactions","content":" Social interactions such as likes, shares and comments in various social networks can be tracked as below. This is tracked in a similar way as screen views.  To track social interactions you can use the trackSocialInteraction method:  await FlutterPiwikPro.sharedInstance.trackSocialInteraction( interaction: 'like', network: 'Facebook', target: 'Dogs');   iOS and Android parameters​  String interaction – defines the social interaction, e.g. “Like”.String network – defines the social network associated with interaction, e.g. “Facebook”String? target (optional) – the target for which this interaction occurred, e.g. “Dogs”.  ","version":"Next","tagName":"h3"},{"title":"Tracking Downloads​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-downloads","content":" You can track downloads initiated by your application by using the trackDownload method:  await FlutterPiwikPro.sharedInstance.trackDownload('http://your.server.com/bonusmap2.zip');   iOS and Android parameters​  String url - URL of the downloaded content.  ","version":"Next","tagName":"h3"},{"title":"Tracking Application Installs​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-application-installs","content":" You can also track installations of your application. This event is sent to the server only once per application version (additional events won't be sent).  You can track app installs using the trackAppInstall method:  await FlutterPiwikPro.sharedInstance.trackAppInstall();   ","version":"Next","tagName":"h3"},{"title":"Tracking Outlinks​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-outlinks","content":" For tracking outlinks to external websites or other apps opened from your application you can use the trackOutlink method:  await FlutterPiwikPro.sharedInstance.trackOutlink('http://great.website.com');   iOS and Android parameters​  String url - defines the outlink target. HTTPS, HTTP and FTP are valid.  ","version":"Next","tagName":"h3"},{"title":"Tracking Search Operations​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-search-operations","content":" Tracking search operations allow the measurement of popular keywords used for various search operations performed inside your application. To track them you can use the trackSearch method:  await FlutterPiwikPro.sharedInstance.trackSearch(keyword: 'Space', category: &quot;Movies&quot;, numberOfHits: 100);   iOS and Android parameters​  String keyword – the searched query that was used in the app.String category – specify a search category.int? numberOfHits(optional) – we recommend setting the search count to the number of search results displayed on the results page. When keywords are tracked with a count of 0, they will appear in the “No Result Search Keyword” report.  ","version":"Next","tagName":"h3"},{"title":"Tracking Content Impressions​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-content-impressions","content":" You can track the impression of an ad using the trackContentImpression method:   await FlutterPiwikPro.sharedInstance.trackContentImpression( contentName: &quot;name&quot;, piece: 'piece', target: 'target');   iOS and Android parameters​  String contentName – the name of the content, e.g. “Ad Foo Bar”.String? piece (optional) – the actual content. For instance the path to an image, video, audio, any text.String? target (optional) – the target of the content e.g. the URL of a landing page.  ","version":"Next","tagName":"h3"},{"title":"Tracking Content Interactions​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-content-interactions","content":" When a user interacts with an ad by tapping on it, you can track it using the trackContentInteraction method:  await FlutterPiwikPro.sharedInstance.trackContentInteraction( contentName: &quot;name&quot;, piece: 'piece', target: 'target', contentInteraction: 'Clicked really hard');   iOS and Android parameters​  String contentName – the name of the content, e.g. “Ad Foo Bar”.String? piece (optional) – the actual content. For instance the path to an image, video, audio, any text.String? target (optional) – the target of the content e.g. the URL of a landing page.String? contentInteraction (optional) - a type of interaction that occured, e.g. &quot;tap&quot;  ","version":"Next","tagName":"h3"},{"title":"Tracking Goals​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-goals","content":" Goal tracking is used to measure and improve your business objectives. To track goals, you first need to configure them on the server in your web panel. Goals such as, for example, subscribing to a newsletter can be tracked as below with the goal ID that you will see on the server after configuring the goal and optional revenue. The currency for the revenue can be set in the Piwik PRO Analytics settings. You can read more about goals hereTo track goals you can use the trackGoal method:  await FlutterPiwikPro.sharedInstance.trackGoal(goal: 10, revenue: 102.2);   iOS and Android parameters​  int goal – a tracking request will trigger a conversion for the goal of the website being tracked with this ID.double? revenue (optional) – a monetary value that has been generated as revenue by goal conversion.  ","version":"Next","tagName":"h3"},{"title":"Tracking Ecommerce Transactions​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-ecommerce-transactions","content":" Ecommerce transactions (in-app purchases) can be tracked to help you improve your business strategy. To track a transaction you must provide two required values - the transaction identifier and grandTotal. Optionally, you can also provide values for subTotal, tax, shippingCost, discount and list of purchased items. To track an ecommerce transaction you can use the trackEcommerceTransaction method:  final ecommerceTransactionItems = [ EcommerceTransactionItem(category: 'cat1', sku: 'sku1', name: 'name1', price: 20, quantity: 1), EcommerceTransactionItem(category: 'cat2', sku: 'sku2', name: 'name2', price: 10, quantity: 1), EcommerceTransactionItem(category: 'cat3', sku: 'sku3', name: 'name3', price: 30, quantity: 2), ]; await FlutterPiwikPro.sharedInstance.trackEcommerceTransaction( identifier: &quot;transactionID&quot;, grandTotal: 100, subTotal: 10, tax: 5, shippingCost: 100, discount: 6, transactionItems: ecommerceTransactionItems, );   iOS and Android parameters​  String identifier – a unique string identifying the orderint grandTotal – The total amount of the order, in centsint? subTotal (optional) – the subtotal (net price) for the order, in centsint? tax (optional) – the tax for the order, in centsint? shippingCost (optional) – the shipping for the order, in centsint? discount (optional) – the discount for the order, in centsList&lt;EcommerceTransactionItem&gt;? transactionItems (optional) – the items included in the order  ","version":"Next","tagName":"h3"},{"title":"Tracking Campaigns​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-campaigns","content":" Tracking campaign URLs created with the online Campaign URL Builder tool allow you to measure how different campaigns (for example with Facebook ads or direct emails) bring traffic to your application. You can register a custom URL schema in your project settings to launch your application when users tap on the campaign link. You can track these URLs from the application delegate as below. The campaign information will be sent to the server together with the next analytics event. More details about campaigns can be found in the documentation. To track a campaign you can use the trackCampaign method:  await FlutterPiwikPro.sharedInstance.trackCampaign(&quot;http://example.org/offer.html?pk_campaign=Email-SummerDeals&amp;pk_keyword=LearnMore&quot;);   iOS and Android parameters​  String url - the campaign URL. HTTPS, HTTP and FTP are valid - the URL must contain a campaign name and keyword parameters.  ","version":"Next","tagName":"h3"},{"title":"Tracking Custom Variables​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-custom-variables","content":" The feature will soon be disabled. We recommend using custom dimensions instead.  To track custom name-value pairs assigned to your users or screen views, you can use custom variables. A custom variable can have a visit scope, which means that they are assigned to the whole visit of the user or action scope meaning that they are assigned only to the next tracked action such as screen view. It is required for names and values to be encoded in UTF-8. You can add a custom variable using the trackCustomVariable method:  await FlutterPiwikPro.sharedInstance.trackCustomVariable( index: 1, name: 'filter', value: 'lcd', scope: CustomVariableScope.visit);   iOS and Android parameters​  int index – a given custom variable name must always be stored in the same “index” per session. For example, if you choose to store the variable name = “Gender” in index = 1 and you record another custom variable in index = 1, then the “Gender” variable will be deleted and replaced with new custom variable stored in index 1. Please note that some of the indexes are already reserved. See Default custom variables section for details.String name – this String defines the name of a specific Custom Variable such as “User type”. Limited to 200 characters.String value – this String defines the value of a specific Custom Variable such as “Customer”. Limited to 200 characters.CustomVariableScope scope – this String allows the specification of the tracking event type - “visit”, “action”, etc. The scope is the value from the enum CustomVariableScope and can be visit or action.  ","version":"Next","tagName":"h3"},{"title":"Tracking Custom Dimensions​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-custom-dimensions","content":" You can also use custom dimensions to track custom values. Custom dimensions first have to be defined on the server in your web panel. More details about custom dimensions can be found in the documentationYou can add a custom dimension using the trackCustomDimension method:  await FlutterPiwikPro.sharedInstance.trackCustomDimension(id: 1, value: 'english');   iOS and Android parameters​  int index – a given custom dimension must always be stored in the same “index” per session, similar to custom variables. In example 1 is our dimension slot.String value – this String defines the value of a specific custom dimension such as “English”. Limited to 200 characters.  ","version":"Next","tagName":"h3"},{"title":"Tracking Profile Attributes​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#tracking-profile-attributes","content":" Requires Audience Manager  The Audience Manager stores visitors’ profiles, which have data from a variety of sources. One of them can be a mobile application. It is possible to enrich the profiles with more attributes by passing any key-value pair like gender: male, favourite food: Italian, etc. It is recommended to set additional user identifiers such as email or User ID. This will allow the enrichment of existing profiles or merging profiles rather than creating a new profile. For example, if the user visited the website, browsed or filled in a form with his/her email (his data was tracked and profile created in Audience Manager) and, afterwards started using a mobile application, the existing profile will be enriched only if the email was set. Otherwise, a new profile will be created. To set profile attributes you can use the trackProfileAttribute method:  await FlutterPiwikPro.sharedInstance.trackProfileAttribute(name: 'food', value: 'chips');   iOS and Android parameters​  String name – defines profile attribute name (non-null string).String value – defines profile attribute value (non-null string).  Aside from attributes, each event also sends parameters which are retrieved from the tracker instance:  WEBSITE_ID – always sent.USER_ID – if set.EMAIL – if set.VISITOR_ID – always sent, ID of the mobile application user, generated by the SDK.DEVICE_ID – Advertising ID that, by default, is fetched automatically when the tracker instance is created (only on Android).  ","version":"Next","tagName":"h3"},{"title":"Reading User Profile Attributes​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#reading-user-profile-attributes","content":" Requires Audience Manager  It is possible to read the attributes of a given profile, however, with some limitations. Due to of security reasons to avoid personal data leakage, it is possible to read only attributes that were enabled for API access (whitelisted) in the Attributes section of Audience Manager. To get user profile attributes you can use the readUserProfileAttributes method:  await FlutterPiwikPro.sharedInstance.readUserProfileAttributes()   Returned Value​  Future&lt;Map&lt;String, String&gt;&gt; - this method returns a Map of key-value pairs, where each pair represent attribute name (key) and value (instead of a usual String that describes which method was called with which parameters)  ","version":"Next","tagName":"h3"},{"title":"Checking Audience Membership​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#checking-audience-membership","content":" Requires Audience Manager  Checking audience membership allows one to check if the user belongs to a specific group of users defined in the audience manger panel based on analytics data and audience manager profile attributes. You can check if a user belongs to a given audience, for example, to display him/her some type of special offer. You can check audience membership using the checkAudienceMembership method:  await FlutterPiwikPro.sharedInstance.checkAudienceMembership('audienceId');   iOS and Android parameters​  String audienceId – ID of the audience (Audience Manager -&gt; Audiences tab)  Returned Value​  Future&lt;bool&gt; - this method returns a bool value (true if a user is a member of an audience, false otherwise) instead of a usual String that describes which method was called with which parameters.  ","version":"Next","tagName":"h3"},{"title":"Advanced usage​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#advanced-usage","content":" ","version":"Next","tagName":"h2"},{"title":"User ID​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#user-id","content":" The user ID is an additional, optional non-empty unique string identifying the user (not set by default). It can be, for example, a unique username or user’s email address. If the provided user ID is sent to the analytics part together with the visitor ID (which is always automatically generated by the SDK), it allows the association of events from various platforms (for example iOS and Android) to the same user provided that the same user ID is used on all platforms. You can read more about User ID here. You can set a user id using the setUserId method:  await FlutterPiwikPro.sharedInstance.setUserId('testUserId')   iOS and Android parameters​  String id – any non-empty unique string identifying the user. Passing null will delete the current user ID  ","version":"Next","tagName":"h3"},{"title":"User Email Address​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#user-email-address","content":" The user email address is an another string used for identifying users - a provided user email is sent to the audience manager part when you send the custom profile attribute configured on the audience manager web panel. Similarly to the user ID, it allows the association of data from various platforms (for example iOS and Android) to the same user as long as the same email is used on all platforms.  It is recommended to set the user email to track audience manager profile attributes as it will create a better user profile.  You can set a user email using the setUserEmail method:  await FlutterPiwikPro.sharedInstance.setUserEmail('user@email.com');   iOS and Android parameters​  String email – a string representing an email address  ","version":"Next","tagName":"h3"},{"title":"Visitor ID​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#visitor-id","content":" SDK uses various IDs for tracking the user. The main one is visitor ID, which is internally randomly generated once by the SDK on the first usage and is then stored locally on the device. The visitor ID will never change unless the user removes the application from the device so that all events sent from his device will always be assigned to the same user in the Piwik PRO web panel. When the anonymization is enabled, a new visitor id is generated each time the application is started. We recommend using userID instead of VisitorID. Still, you can set a visitor ID using the setVisitorId method:  await FlutterPiwikPro.sharedInstance.setVisitorId('Id');   iOS and Android parameters​  String id - a string containing a new Visitor ID  ","version":"Next","tagName":"h3"},{"title":"Setting Session Timeout​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#setting-session-timeout","content":" A session represents a set of user’s interactions with your app. By default, Analytics is closing the session after 30 minutes of inactivity, counting from the last recorded event in session and when the user will open up the app again the new session is started. You can configure the tracker to automatically close the session when users have placed your app in the background for a period of time. You can change the session timeout using the setSessionTimeout method:  await FlutterPiwikPro.sharedInstance.setSessionTimeout(1000)   iOS and Android parameters​  int timeoutInMilliseconds - Session timeout in milliseconds. Default: 1800000 (30 minutes)  ","version":"Next","tagName":"h3"},{"title":"Setting Dispatch Interval​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#setting-dispatch-interval","content":" All tracking events are saved locally and by default. They are automatically sent to the server every 30 seconds. You can change this interval using the setDispatchInterval method:  await FlutterPiwikPro.sharedInstance.setDispatchInterval(10000)   iOS and Android parameters​  int intervalInMilliseconds - Dispatch interval in milliseconds. Default: 30000  ","version":"Next","tagName":"h3"},{"title":"Default Custom Variables​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#default-custom-variables","content":" The SDK, by default, automatically adds some information in custom variables about the device (index 1), system version (index 2) and app version (index 3). By default, this option is turned on.  In case you need to configure custom variables separately, turn off this option and see the section above about tracking custom variables.  You can disable this behavior using the setIncludeDefaultVariables method:  await FlutterPiwikPro.sharedInstance.setIncludeDefaultVariables(false);   iOS and Android parameters​  bool shouldInclude - a boolean value that removes Default Variables when false  ","version":"Next","tagName":"h3"},{"title":"Opt-Out​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#opt-out","content":" You can disable all tracking in the application by using the opt-out feature. No events will be sent to the server if the opt-out is set. By default, opt-out is not set and events are tracked. You can opt out of tracking using the optOut method:  await FlutterPiwikPro.sharedInstance.optOut(true);   iOS and Android parameters​  bool shouldOptOut - a boolean value that disables all tracking in the app when set to true.  ","version":"Next","tagName":"h3"},{"title":"Dry Run​","type":1,"pageTitle":"Flutter SDK","url":"/docs/sdks/Flutter-sdk#dry-run","content":" The SDK provides a dryRun flag that, when set, prevents any data from being sent to Piwik. The dryRun flag should be set whenever you are testing or debugging an implementation and do not want test data to appear in your Piwik reports. You can set set the dry run flag using the dryRun method:  await FlutterPiwikPro.sharedInstance.dryRun(true);   iOS and Android parameters​  bool shouldDryRun - a boolean value that prevents any data being sent to a tracker when set to true ","version":"Next","tagName":"h3"},{"title":"iOS SDK","type":0,"sectionRef":"#","url":"/docs/sdks/iOS-sdk","content":"","keywords":"","version":"Next"},{"title":"SDK configuration​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#sdk-configuration","content":" ","version":"Next","tagName":"h2"},{"title":"Server​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#server","content":" You need a Piwik PRO account on the cloud or an on-premises setup which your mobile app will communicate with. For details, please visit the Piwik PRO website.Create a new website (or app) in the Piwik PRO web interface.Copy and note the Website ID from &quot;Administration &gt; Websites &amp; apps &gt; Installation&quot; and your server address.  ","version":"Next","tagName":"h3"},{"title":"Client​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#client","content":" Including the library​  Use the following in your Podfile:  pod 'PiwikPROSDK', '~&gt; VERSION'   Replace VERSION with the latest release name, e.g. '~&gt; 1.0.7'.  Then run pod install. In every file you wish to use the PiwikPROSDK, don't forget to import it.  Configuration​  To configure the tracker you will need the URL address of your tracking server and website ID (you can find it in Administration &gt; Websites &amp; apps &gt; Installation on the web interface).  Open the AppDelegate.m file and add sdk import:  #import &lt;PiwikPROSDK/PiwikPROSDK.h&gt;   Configure the tracker with your website ID and URL in the application delegate:  - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions { // Configure the tracker in your application delegate [PiwikTracker sharedInstanceWithSiteID:@&quot;01234567-89ab-cdef-0123-456789abcdef&quot; baseURL:[NSURL URLWithString:@&quot;https://your.piwik.pro.server.com&quot;]]; return YES; }   Using Piwik PRO SDK with the Swift programming language​  The Piwik PRO SDK is written in the Objective-C programming language. However, after installing the library from cocoapods, Xcode automatically generates Swift syntax for Objective-C calls. When you edit a Swift file and type in an Objective-C class name, Swift version of the header file will be displayed.  Example of using the method to track a view in Objective-c:  [[PiwikTracker sharedInstance] sendView:@&quot;Menu&quot;];   Same example in Swift:  import PiwikPROSDK PiwikTracker.sharedInstance()?.sendView(view: &quot;Menu&quot;)   If there is a need to create the bridging header, see the apple tutorial &quot;Importing Objective-C into Swift&quot; for additional information.  ","version":"Next","tagName":"h3"},{"title":"Using Piwik PRO SDK​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#using-piwik-pro-sdk","content":" SDK supports several different types of actions which can be tracked. If the event dispatch was unsuccessful (network error, server error, etc), the event will be saved in the disk cache and processing will be retried during the next dispatch attempt (in configured dispatch interval). Each event is stored in the disk cache for a specified cache age - the time which defines the maximum time for which event is saved locally.  ","version":"Next","tagName":"h2"},{"title":"Data anonymization​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#data-anonymization","content":" Anonymization is the feature that allows tracking a user's activity for aggregated data analysis even if the user doesn't consent to track the data. If a user does not agree to be tracked, he will not be identified as the same person across multiple sessions.  Personal data will not be tracked during the session (i.e. user ID, device ID) If the anonymization is enabled, a new visitor ID will be created each time the application starts.  Anonymization is enabled by default.  You can turn the anonymization on and off by setting the value of the variable isAnonymizationEnabled:  [PiwikTracker sharedInstance].isAnonymizationEnabled = NO;   ","version":"Next","tagName":"h3"},{"title":"Tracking screen views​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-screen-views","content":" Requires Analytics  The basic functionality of the SDK is the tracking screen views which represent the content the user is viewing in the application. To track a screen you only need to provide the name of the screen. This name is internally translated by the SDK to an HTTP URL as the Piwik PRO server uses URLs for tracking views. Additionally, Piwik PRO SDK uses prefixes which are inserted in generated URLs for various types of action(s). For tracking screen views it will use prefix screen by default however automatic prefixing can be disabled with the isPrefixingEnabled option. To start tracking screen views, add the following code to your view controllers.  - (void)viewDidAppear:(BOOL)animated { [super viewDidAppear:animated]; [[PiwikTracker sharedInstance] sendView:@&quot;Menu&quot;]; }   A screen name (required) – title of the action being tracked. The appropriate screen path will be generated for this action.  ","version":"Next","tagName":"h3"},{"title":"Tracking custom events​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-custom-events","content":" Requires Analytics  Custm events can be used to track the user's interaction with various custom components and features of your application, such as playing a song or a video. Category and action parameters are required while the name and value are optional. You can read more about events in the Piwik PRO documentation and ultimate guide to event tracking.  [[PiwikTracker sharedInstance] sendEventWithCategory:@&quot;Video&quot; action:@&quot;Play&quot; name:@&quot;Pirates&quot; value:@185];   The sendEventWithCategory method allows to specify next parameters:  A category (required) – this String defines the event category. You may define event categories based on the class of user actions ( e.g. clicks, gestures, voice commands), or you may define them based upon the features available in your application (e.g. play, pause, fast forward, etc.). An action (required) – this String defines the specific event action within the category specified. In the example, we are essentially saying that the category of the event is user clicks, and the action is a button click. A name (optional) – this String defines a label associated with the event. For example, if you have multiple button controls on a screen, you might use the label to specify the specific View control identifier that was clicked. A value (optional) – this Float defines a numerical value associated with the event. For example, if you were tracking &quot;Buy&quot; button clicks, you might log the number of items being purchased, or their total cost.  ","version":"Next","tagName":"h3"},{"title":"Tracking exceptions​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-exceptions","content":" Requires Analytics  Tracking exceptions allow the measurement of exceptions and errors in your app. Exceptions are tracked on the server in a similar way as screen views, however, URLs internally generated for exceptions always use the fatal or caught prefix and, additionally, if the isPrefixingEnabled option is enabled, then the additional exception prefix is added.  [[PiwikTracker sharedInstance] sendExceptionWithDescription:@&quot;Content download error&quot; isFatal:YES];   A description (required) – provides the exception message. An isFatal (required) – true if an exception is fatal.  Bear in mind that Piwik is not a crash tracker, use this sparingly.  ","version":"Next","tagName":"h3"},{"title":"Tracking social interactions​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-social-interactions","content":" Requires Analytics  Social interactions such as likes, shares and comments in various social networks can be tracked as below. This, again, is tracked in a similar way as screen views but the social prefix is used when the default isPrefixingEnabled option is enabled.  [[PiwikTracker sharedInstance] sendSocialInteractionWithAction:@&quot;like&quot; target:@&quot;Dogs&quot; network:@&quot;Facebook&quot;];   An interaction (required) – defines the social interaction, e.g. &quot;Like&quot;. A network (required) – defines the social network associated with interaction, e.g. &quot;Facebook&quot; A target (optional) – the target for which this interaction occurred, e.g. &quot;Dogs&quot;.  The URL corresponds to String, which includes network, interaction and target parameters separated by a slash.  ","version":"Next","tagName":"h3"},{"title":"Tracking downloads​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-downloads","content":" Requires Analytics  You can track the downloads initiated by your application.  [[PiwikTracker sharedInstance] sendDownload:@&quot;http://your.server.com/bonusmap.zip&quot;];   A URL (required) – the URL of the downloaded content.  No prefixes are used for tracking downloads, but each event of this type use an additional parameter download whose value equals to specified URL. On the analytics panel all, downloads can be viewed in the corresponding section.  ","version":"Next","tagName":"h3"},{"title":"Tracking application installs​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-application-installs","content":" Requires Analytics  You can also track installations of your application. This event is sent to the server only once per application version therefore if you wish to track installs, then you can add it in your application delegate immediately after configuring the tracker.  - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions { // Configure the tracker in your application delegate [PiwikTracker sharedInstanceWithSiteID:@&quot;01234567-89ab-cdef-0123-456789abcdef&quot; baseURL:[NSURL URLWithString:@&quot;https://your.piwik.pro.server.com&quot;]]; [[PiwikTracker sharedInstance] sendApplicationDownload]; return YES; }   Application installation is only tracked during the first launch. In the case of the application being installed but not run, the app installation will not be tracked.  ","version":"Next","tagName":"h3"},{"title":"Tracking outlinks​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-outlinks","content":" Requires Analytics  For tracking outlinks to external websites or other apps opened from your application use the sendOutlink method:  [[PiwikTracker sharedInstance] sendOutlink:@&quot;http://great.website.com&quot;];   A URL (required) – defines the outlink target. HTTPS, HTTP and FTP are valid.  ","version":"Next","tagName":"h3"},{"title":"Tracking search operations​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-search-operations","content":" Requires Analytics  Tracking search operations allow the measurement of popular keywords used for various search operations performed inside your application. It can be done via the sendSearchWithKeyword method:  [[PiwikTracker sharedInstance] sendSearchWithKeyword:@&quot;Space&quot; category:@&quot;Movies&quot; numberOfHits:@42];   keyword (required) – the searched query that was used in the app. category (optional) – specify a search category. numberOfHits (optional) – we recommend setting the search count to the number of search results displayed on the results page. When keywords are tracked with a count of 0, they will appear in the &quot;No Result Search Keyword&quot; report.  ","version":"Next","tagName":"h3"},{"title":"Tracking content impressions and interactions​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-content-impressions-and-interactions","content":" Requires Analytics  You can track the impression of the ad in your application as below:  [[PiwikTracker sharedInstance] sendContentImpressionWithName:@&quot;name&quot; piece:@&quot;piece&quot; target:@&quot;target&quot;];   When the user interacts with the ad by tapping on it, you can also track it with a similar method:  [[PiwikTracker sharedInstance] sendContentInteractionWithName:@&quot;name&quot; piece:@&quot;piece&quot; target:@&quot;target&quot;];   A contentName (required) – the name of the content, e.g. &quot;Ad Foo Bar&quot;. A piece (optional) – the actual content. For instance the path to an image, video, audio, any text. A target (optional) – the target of the content e.g. the URL of a landing page.  ","version":"Next","tagName":"h3"},{"title":"Tracking goals​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-goals","content":" Requires Analytics  Goaltracking is used to measure and improve your business objectives. To track goals, you first need to configure them on the server in your web panel. Goals such as, for example, subscribing to a newsletter can be tracked as below with the goal ID that you will see on the server after configuring the goal and optional revenue. The currency for the revenue can be set in the Piwik PRO Analytics settings. You can read more about goals here.  [[PiwikTracker sharedInstance] sendGoalWithID:2 revenue:@30];   A goal (required) – tracking request will trigger a conversion for the goal of the website being tracked with this ID. revenue (optional) – a monetary value that was generated as revenue by this goal conversion.  ","version":"Next","tagName":"h3"},{"title":"Tracking ecommerce transactions​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-ecommerce-transactions","content":" Requires Analytics  Ecommerce transactions (in-app purchases) can be tracked to help you improve your business strategy. To track a transaction you must provide two required values - the transaction identifier and grandTotal. Optionally, you can also provide values for subTotal, tax, shippingCost, discount and list of purchased items as in the example below.  [[PiwikTracker sharedInstance] sendTransaction:[PiwikTransaction transactionWithBlock:^(PiwikTransactionBuilder *builder) { builder.identifier = @&quot;transactionID&quot;; builder.grandTotal = @5.0; builder.subTotal = @4.0; builder.tax = @0.5; builder.shippingCost = @1.0; builder.discount = @0.0; [builder addItemWithSku:@&quot;sku1&quot; name:@&quot;bonus&quot; category:@&quot;maps&quot; price:@2.0 quantity:@1]; [builder addItemWithSku:@&quot;sku2&quot; name:@&quot;home&quot; category:@&quot;maps&quot; price:@3.0 quantity:@1]; }]];   An identifier (required) – a unique string identifying the order grandTotal (required) – The total amount of the order, in cents subTotal (optional) – the subtotal (net price) for the order, in cents tax (optional) – the tax for the order, in cents shipping (optional) – the shipping for the order, in cents discount (optional) – the discount for the order, in cents Items (optional) – the items included in the order, use the addItemWithSku method to instantiate items  ","version":"Next","tagName":"h3"},{"title":"Tracking campaigns​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-campaigns","content":" Requires Analytics  Tracking campaign URLs created with the online Campaign URL Builder tool allow you to measure how different campaigns (for example with Facebook ads or direct emails) bring traffic to your application. You can register a custom URL schema in your project settings to launch your application when users tap on the campaign link. You can track these URLs from the application delegate as below. The campaign information will be sent to the server together with the next analytics event. More details about campaigns can be found in the documentation.  - (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary *)options { return [[PiwikTracker sharedInstance] sendCampaign:url.absoluteString]; }   A URL (required) – the campaign URL. HTTPS, HTTP and FTP are valid - the URL must contain a campaign name and keyword parameters.  ","version":"Next","tagName":"h3"},{"title":"Tracking with custom variables​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-with-custom-variables","content":" The feature will soon be disabled. We recommend using custom dimensions instead.  Requires Analytics  To track custom name-value pairs assigned to your users or screen views, you can use custom variables. A custom variable can have a visit scope, which means that they are assigned to the whole visit of the user or action scope meaning that they are assigned only to the next tracked action such as screen view. You can find more information about custom variables here:  It is required for names and values to be encoded in UTF-8.  [[PiwikTracker sharedInstance] setCustomVariableForIndex:1 name:@&quot;filter&quot; value:@&quot;lcd&quot; scope:CustomVariableScopeAction];   An index (required) – a given custom variable name must always be stored in the same &quot;index&quot; per session. For example, if you choose to store the variable name = &quot;Gender&quot; in index = 1 and you record another custom variable in index = 1, then the &quot;Gender&quot; variable will be deleted and replaced with new custom variable stored in index 1. Please note that some of the indexes are already reserved. See Default custom variables section for details. A name (required) – this String defines the name of a specific Custom Variable such as &quot;User type&quot;. Limited to 200 characters. A value (required) – this String defines the value of a specific Custom Variable such as &quot;Customer&quot;. Limited to 200 characters. A scope (required) – this String allows the specification of the tracking event type - &quot;visit&quot;, &quot;action&quot;, etc. The scope is the value from the enum CustomVariableScope and could be CustomVariableScopeVisit or CustomVariableScopeAction.  ","version":"Next","tagName":"h3"},{"title":"Tracking with custom dimensions​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-with-custom-dimensions","content":" Requires Analytics  You can also use custom dimensions to track custom values as below. Custom dimensions first have to be defined on the server in your web panel. More details about custom dimensions can be found in the documentation:  [[PiwikTracker sharedInstance] setCustomDimensionForID:1 value:@&quot;english&quot;];   An index (required) – a given custom dimension must always be stored in the same &quot;index&quot; per session, similar to custom variables. In example 1 is our dimension slot. A value (required) – this String defines the value of a specific custom dimension such as &quot;English&quot;. Limited to 200 characters.  Assigning a value to an already used index will overwrite the previously assigned value.  ","version":"Next","tagName":"h3"},{"title":"Tracking profile attributes​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#tracking-profile-attributes","content":" Requires Audience Manager  The Audience Manager stores visitors' profiles, which have data from a variety of sources. One of them can be a mobile application. It is possible to enrich the profiles with more attributes by passing any key-value pair like gender: male, favourite food: Italian, etc. It is recommended to set additional user identifiers such as email or User ID. This will allow the enrichment of existing profiles or merging profiles rather than creating a new profile. For example, if the user visited the website, browsed or filled in a form with his/her email (his data was tracked and profile created in Audience Manager) and, afterwards started using a mobile application, the existing profile will be enriched only if the email was set. Otherwise, a new profile will be created.  For sending profile attributes use the sendProfileAttributeWithName method:  [[PiwikTracker sharedInstance] sendProfileAttributeWithName:@&quot;food&quot; value:@&quot;chips&quot;];   A name (required) – defines profile attribute name (non-null string). A value (required) – defines profile attribute value (non-null string).  Aside from attributes, each event also sends parameters, that are retrieved from the tracker instance:  WEBSITE_ID - always sent,USER_ID - if It is set. Read more about the User ID,EMAIL - if It is set. Read more about the email,VISITOR_ID - always sent, ID of the mobile application user, generated by SDKDEVICE_ID - it is a device IDFA, which is not set by default (due to platform limitations). In order to set device ID see Device ID section below.  Profile attributes for the user that are tracked will be shown on the Audience Manager - Profile Browser tab.  ","version":"Next","tagName":"h3"},{"title":"Reading user profile attributes​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#reading-user-profile-attributes","content":" Requires Audience Manager  It is possible to read the attributes of a given profile, however, with some limitations. Due to of security reasons to avoid personal data leakage, it is possible to read only attributes that were enabled for API access (whitelisted) in the Attributes section of Audience Manager. To get user profile attributes use the audienceManagerGetProfileAttributes method:  [[PiwikTracker sharedInstance] audienceManagerGetProfileAttributes:^(NSDictionary *profileAttributes, NSError * _Nullable error) { // do something with attributes list }];   completionBlock (required) – callback to handle request result (call is asynchronous) profileAttributes (output) – dictionary of key-value pairs, where each pair represent attribute name (key) and value. errorData (output) – in case of error only, this method will be called. This method passes the error string.  ","version":"Next","tagName":"h3"},{"title":"Checking audience membership​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#checking-audience-membership","content":" Requires Audience Manager  Audience check allows one to check if the user belongs to a specific group of users defined in the audience manger panel based on analytics data and audience manager profile attributes. You can check if the user belongs to a given audience, for example, to display him/her some type of special offer like in the example below:  [[PiwikTracker sharedInstance] checkMembershipWithAudienceID:@&quot;12345678-90ab-cdef-1234-567890abcdef&quot; completionBlock:^(BOOL isMember, NSError * _Nullable error) { // do something if is member or handle error }];   audienceId (required) – ID of the audience (Audience Manager -&gt; Audiences tab) completionBlock (required) – callback to handle request result (call is asynchronous) isMember (output) – a boolean value that indicates if the user belongs to an audience with a given ID error (output) – in case of error only, this method will be called. Method pass the error string.  ","version":"Next","tagName":"h3"},{"title":"Advanced usage​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#advanced-usage","content":" ","version":"Next","tagName":"h2"},{"title":"User ID​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#user-id","content":" The user ID is an additional, optional non-empty unique string identifying the user (not set by default). It can be, for example, a unique username or user's email address. If the provided user ID is sent to the analytics part together with the visitor ID (which is always automatically generated by the SDK), it allows the association of events from various platforms (for example iOS and Android) to the same user provided that the same user ID is used on all platforms. More about UserID. In order to set User ID use userID field:  [PiwikTracker sharedInstance].userID = @&quot;User Name&quot;;   userID (required) – any non-empty unique string identifying the user. Passing null will delete the current user ID  ","version":"Next","tagName":"h3"},{"title":"User email address​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#user-email-address","content":" The user email address is another additional, optional string for user identification - if the provided user email is sent to the audience manager part when you send the custom profile attribute configured on the audience manager web panel. Similarly to the user ID, it allows the association of data from various platforms (for example iOS and Android) to the same user as long as the same email is used on all platforms. To set user email use the userEmail field:  [PiwikTracker sharedInstance].userEmail = @&quot;user@email.com&quot;;   A userMail (required) – any non-null string representing email address  It is recommended to set the user email to track audience manager profile attributes as it will create a better user profile.  ","version":"Next","tagName":"h3"},{"title":"Visitor ID​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#visitor-id","content":" SDK uses various IDs for tracking the user. The main one is visitor ID, which is internally randomly generated once by the SDK on the first usage and is then stored locally on the device. The visitor ID will never change unless the user removes the application from the device so that all events sent from his device will always be assigned to the same user in the Piwik PRO web panel. When the anonymization is enabled, a new visitor id is generated each time the application is started. We recommend using userID instead of VisitorID.  ","version":"Next","tagName":"h3"},{"title":"Sessions​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#sessions","content":" A session represents a set of user's interactions with your app. By default, Analytics is closing the session after 30 minutes of inactivity, counting from the last recorded event in session and when the user will open up the app again the new session is started. You can configure the tracker to automatically close the session when users have placed your app in the background for a period of time. That period is defined by the sessionTimeout:  [PiwikTracker sharedInstance].sessionTimeout = 1800   sessionTimeout (required) – session timeout time in seconds. Default: 1800 seconds (30 minutes).  ","version":"Next","tagName":"h3"},{"title":"Device ID​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#device-id","content":" The device ID is used to track the IDFA (identifier for advertising). The IDFA is an additional, optional non-empty unique string identifying the device. If you wish to use the IDFA for tracking then you should set the device ID by yourself. Note that if you plan to send your application to the App Store and your application uses IDFA, but does not display ads, then it may be rejected in the App Store review process. You can set the IDFA as in the example below:  #import &lt;AdSupport/ASIdentifierManager.h&gt; NSString *idfa = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString]; [PiwikTracker sharedInstance].deviceID = idfa;   ","version":"Next","tagName":"h3"},{"title":"Dispatching​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#dispatching","content":" All tracking events are saved locally and by default. They are automatically sent to the server every 30 seconds. You can change this interval to any other number as below:  [PiwikTracker sharedInstance].dispatchInterval = 60;   ","version":"Next","tagName":"h3"},{"title":"Gzip compression​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#gzip-compression","content":" You can enable gzip compression for communication with the server as below. By default, requests to the server do not use compression.  [PiwikTracker sharedInstance].useGzip = YES;   This feature must also be set on server-side using mod_deflate/APACHE or lua_zlib/NGINX (lua_zlib - lua-nginx-module - inflate.lua samples).  ","version":"Next","tagName":"h3"},{"title":"Default custom variables​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#default-custom-variables","content":" The SDK, by default, automatically adds some information in custom variables about the device (index 1), system version (index 2) and app version (index 3). By default, this option is turned on. This behavior can be disabled with the following setting:  [PiwikTracker sharedInstance].includeDefaultCustomVariable = NO;   In case you need to configure custom variables separately, turn off this option and see the section above about tracking custom variables.  ","version":"Next","tagName":"h3"},{"title":"Local storage limits​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#local-storage-limits","content":" You can set limits for storing events related to maximum size and time for which events are saved in local storage. By default, the maximum number of queued events is set to 500 and there is no age limit. It can be changed as below:  [PiwikTracker sharedInstance].maxNumberOfQueuedEvents = 100; [PiwikTracker sharedInstance].maxAgeOfQueuedEvents = 60 * 60 * 24;   maxNumberOfQueuedEvents (required) – the maximum number of events after which events in the queue are deleted. By default, the limit is set to 500. maxAgeOfQueuedEvents (required) – time in ms after which events are deleted. By default, the limit is set to 7 * 24 * 60 * 60 * 1000 ms = 7 days.  ","version":"Next","tagName":"h3"},{"title":"Opt-out​","type":1,"pageTitle":"iOS SDK","url":"/docs/sdks/iOS-sdk#opt-out","content":" You can disable all tracking in the application by using the opt-out feature. No events will be sent to the server if the opt-out is set. By default, opt-out is not set and events are tracked.  [PiwikTracker sharedInstance].optOut = YES;  ","version":"Next","tagName":"h3"},{"title":"Google Ads: metrics & dimensions","type":0,"sectionRef":"#","url":"/docs/web-api/resources/columns/google-ads","content":"","keywords":"","version":"Next"},{"title":"Metrics​","type":1,"pageTitle":"Google Ads: metrics & dimensions","url":"/docs/web-api/resources/columns/google-ads#metrics","content":" Here's a list of metrics that are avaliable in Piwik PRO when you use Google Ads integration.  Metric name\tColumn ID\tScope\tTypeImpressions (Google Ads)\tgoogle_ads_impressions\texternal\tint Clicks (Google Ads)\tgoogle_ads_clicks\texternal\tint Cost (Google Ads)\tgoogle_ads_cost\texternal\tfloat Average CPC (Google Ads)\tgoogle_ads_average_cpc\texternal\tfloat CTR (Google Ads)\tgoogle_ads_ctr\texternal\tfloat ROAS (Google Ads)\tgoogle_ads_roas\tsession\tfloat  ","version":"Next","tagName":"h2"},{"title":"Dimensions​","type":1,"pageTitle":"Google Ads: metrics & dimensions","url":"/docs/web-api/resources/columns/google-ads#dimensions","content":" Here's a list of dimensions that are avaliable in Piwik PRO when you use Google Ads integration.  Dimension name\tColumn ID\tScope\tType\tDatabase type (1)\tNullable\tNotesSource\tsource\tsession\tstr\tstring\tFalse Medium\tmedium\tsession\tstr\tstring\tFalse Source/Medium\tsource_medium\tsession\tstr\tstring\tFalse Keyword\tkeyword\tsession\tstr\tstring\tFalse Device type\tdevice_type\tsession\t[int, str]\tuint8\tTrue\tdevice_type.json &lt;/pstatic/json/enum/device_type.json&gt; Session entry URL\tsession_entry_url\tsession\tstr\tstring\tFalse Timestamp\ttimestamp\tsession\tdate\tnot applicable\tFalse\tby default in Raw data API Website Name\twebsite_name\tsession\t[str, str]\tnot applicable\tFalse\twebsite UUID Customer ID (Google Ads)\tgoogle_ads_customer_id\tsession\tstr_id\tstring\tFalse Customer Name (Google Ads)\tgoogle_ads_customer_name\tsession\t[str, str]\tnot applicable\tFalse Campaign ID (Google Ads)\tgoogle_ads_campaign_id\tsession\tint_id\tint64\tFalse Campaign Name (Google Ads)\tgoogle_ads_campaign_name\tsession\t[int, str]\tnot applicable\tFalse Ad Group ID (Google Ads)\tgoogle_ads_ad_group_id\tsession\tint_id\tint64\tFalse Ad Group Name (Google Ads)\tgoogle_ads_ad_group_name\tsession\t[int, str]\tnot applicable\tFalse Ad Group Ad ID (Google Ads)\tgoogle_ads_ad_group_ad_id\tsession\tstr_id\tstring\tFalse Ad Group Ad Network Type (Google Ads)\tgoogle_ads_ad_network_type\tsession\t[str, str]\tstring\tFalse\tgoogle_ads_ad_network_type.json &lt;/pstatic/json/enum/google_ads_ad_network_type.json&gt; Ad Group Keyword Match Type (Google Ads)\tgoogle_ads_keyword_match_type\texternal\t[str, str]\tstring\tFalse\tgoogle_ads_keyword_match_type.json &lt;/pstatic/json/enum/google_ads_keyword_match_type.json&gt;, not available in Raw data API  Database type is the source column of a dimension. Enum shows the ID type. Not applicable shows a dymamic dimension.  ","version":"Next","tagName":"h2"},{"title":"Mixed queries​","type":1,"pageTitle":"Google Ads: metrics & dimensions","url":"/docs/web-api/resources/columns/google-ads#mixed-queries","content":" If you want to mix Piwik PRO metrics with Google Ads metrics in a single call or filter, you can only use the metrics that are common in both products. Otherwise, you'll receive a Bad Request response.  Here's a list of the metrics that you can use.  Dimension name\tColumn ID\tScope\tType\tDatabase type (1)\tNullable\tNotesSource\tsource\tsession\tstr\tstring\tFalse Medium\tmedium\tsession\tstr\tstring\tFalse Source/Medium\tsource_medium\tsession\tstr\tstring\tFalse Keyword\tkeyword\tsession\tstr\tstring\tFalse Device type\tdevice_type\tsession\t[int, str]\tuint8\tTrue\tdevice_type.json &lt;/pstatic/json/enum/device_type.json&gt; Session entry URL\tsession_entry_url\tsession\tstr\tstring\tFalse Timestamp\ttimestamp\tsession\tdate\tnot applicable\tFalse\tby default in Raw data API Website Name\twebsite_name\tsession\t[str, str]\tnot applicable\tFalse\twebsite UUID Customer ID (Google Ads)\tgoogle_ads_customer_id\tsession\tstr_id\tstring\tFalse Customer Name (Google Ads)\tgoogle_ads_customer_name\tsession\t[str, str]\tnot applicable\tFalse Campaign ID (Google Ads)\tgoogle_ads_campaign_id\tsession\tint_id\tint64\tFalse Campaign Name (Google Ads)\tgoogle_ads_campaign_name\tsession\t[int, str]\tnot applicable\tFalse Ad Group ID (Google Ads)\tgoogle_ads_ad_group_id\tsession\tint_id\tint64\tFalse Ad Group Name (Google Ads)\tgoogle_ads_ad_group_name\tsession\t[int, str]\tnot applicable\tFalse Ad Group Ad ID (Google Ads)\tgoogle_ads_ad_group_ad_id\tsession\tstr_id\tstring\tFalse Ad Group Ad Network Type (Google Ads)\tgoogle_ads_ad_network_type\tsession\t[str, str]\tstring\tFalse\tgoogle_ads_ad_network_type.json &lt;/pstatic/json/enum/google_ads_ad_network_type.json&gt;  Database type is the source column of a dimension. Enum shows the ID type. Not applicable shows a dymamic dimension. ","version":"Next","tagName":"h2"},{"title":"Metrics","type":0,"sectionRef":"#","url":"/docs/web-api/resources/columns/","content":"Piwik PRO: metrics &amp; dimensions =========================== Metrics Here's a list of core metrics that you can use in API calls. You can create additional metrics using transformations. Metric name\tColumn ID\tScope (1)\tTypeEvents\tevents\tsession\tint Consent form impressions\tconsent_form_impressions\tevent\tint Consent form clicks\tconsent_form_clicks\tevent\tint First consents\tconsents_first\tevent\tint Changed consents\tconsents_changed\tevent\tint Full consents\tconsents_full\tevent\tint Any consents\tconsents_any\tevent\tint No consents\tconsents_none\tevent\tint No decisions\tconsents_no_decision\tevent\tint Analytics consents\tconsents_analytics\tevent\tint A/B testing personalization consents\tconsents_ab_testing_personalization\tevent\tint Conversion tracking consents\tconsents_conversion_tracking\tevent\tint Marketing automation consents\tconsents_marketing_automation\tevent\tint Remarketing consents\tconsents_remarketing\tevent\tint User feedback consents\tconsents_user_feedback\tevent\tint Custom consent 1\tconsents_custom_1\tevent\tint Page views\tpage_views\tsession\tint Unique page views\tunique_page_views\tsession\tint Entries\tentries\tsession\tint Exits\texits\tsession\tint Bounces\tbounces\tsession\tint Sessions\tsessions\tsession\tint Visitors\tvisitors\tsession\tint % of returning visitors\treturning_visitors_rate\tsession\tfloat Users\tusers\tsession\tint Visitor IPs\tvisitor_ips\tsession\tint Outlinks\toutlinks\tsession\tint Unique outlinks\tunique_outlinks\tsession\tint Downloads\tdownloads\tsession\tint Unique downloads\tunique_downloads\tsession\tint Searches\tsearches\tsession\tint Unique searches\tunique_searches\tsession\tint Custom events\tcustom_events\tsession\tint Unique custom events\tunique_custom_events\tsession\tint Content impressions\tcontent_impressions\tsession\tint Unique content impressions\tunique_content_impressions\tsession\tint Content interactions\tcontent_interactions\tsession\tint Unique content interactions\tunique_content_interactions\tsession\tint Goal conversions\tgoal_conversions\tsession\tint Unique goal conversions\tunique_goal_conversions\tsession\tint Ecommerce conversions\tecommerce_conversions\tsession\tint Ecommerce abandoned carts\tecommerce_abandoned_carts\tsession\tint Unique purchases\tunique_purchases\tevent\tint Entry rate\tentry_rate\tsession\tfloat Exit rate\texit_rate\tsession\tfloat Exit rate events\texit_rate_events\tsession\tfloat Bounce rate\tbounce_rate\tsession\tfloat Bounce rate\tbounce_rate_events\tsession\tfloat Content interaction rate\tcontent_interaction_rate\tsession\tfloat Goal conversion rate\tgoal_conversion_rate\tsession\tfloat Ecommerce conversion rate\tecommerce_conversion_rate\tsession\tfloat Events per session\tevents_per_session\tsession\tfloat If you make a call that includes one or more columns with theevent scope, the whole query will be calculated using events – not sessions. This might distort some custom metrics like average session time. Dimensions Here's a list of core dimensions that you can use in API calls. Dimension name\tColumn ID\tScope (1)\tType\tDatabase type (2)\tNullable\tNotesVisitor ID\tvisitor_id\tsession\thex\tuint64\tFalse\tby default in Raw data API User ID\tuser_id\tsession\tstr\tstring\tFalse Cookie ID\tcookie_id\tsession\thex\tuint64\tFalse Returning visitor\tvisitor_returning\tsession\t[int, str]\tuint8\tFalse\tvisitor_returning.json &lt;/pstatic/json/enum/visitor_returning.json&gt; Session number\tvisitor_session_number\tsession\tint\tuint16\tFalse Days since last session\tvisitor_days_since_last_session\tsession\tint\tuint16\tTrue Days since first session\tvisitor_days_since_first_session\tsession\tint\tuint16\tTrue Days since order\tvisitor_days_since_order\tsession\tint\tuint16\tTrue Events in session\tsession_total_events\tsession\tint\tuint16\tFalse Session time\tsession_total_time\tsession\tint\tuint32\tFalse Page views in session\tsession_total_page_views\tsession\tint\tuint16\tFalse Outlinks in session\tsession_total_outlinks\tsession\tint\tuint16\tFalse Downloads in session\tsession_total_downloads\tsession\tint\tuint16\tFalse Site searches in session\tsession_total_site_searches\tsession\tint\tuint16\tFalse Custom events in session\tsession_total_custom_events\tsession\tint\tuint16\tFalse Content impressions in session\tsession_total_content_impressions\tsession\tint\tuint16\tFalse Content interactions in session\tsession_total_content_interactions\tsession\tint\tuint16\tFalse Goal conversions in session\tsession_total_goal_conversions\tsession\tint\tuint16\tFalse Ecommerce conversions in session\tsession_total_ecommerce_conversions\tsession\tint\tuint16\tFalse Abandoned carts in session\tsession_total_abandoned_carts\tsession\tint\tuint16\tFalse Unique page views in session\tsession_unique_page_views\tsession\tint\tuint16\tFalse Unique outlinks in session\tsession_unique_outlinks\tsession\tint\tuint16\tFalse Unique downloads in session\tsession_unique_downloads\tsession\tint\tuint16\tFalse Unique site searches in session\tsession_unique_searches\tsession\tint\tuint16\tFalse Unique custom events in session\tsession_unique_custom_events\tsession\tint\tuint16\tFalse Unique content impressions in session\tsession_unique_content_impressions\tsession\tint\tuint16\tFalse Unique content interactions in session\tsession_unique_content_interactions\tsession\tint\tuint16\tFalse Goals converted in session\tsession_goals\tsession\tarray\tarray of int32\tFalse Shopping stage\tsession_ecommerce_status\tsession\t[int, str]\tuint8\tFalse\tsession_ecommerce_status.json &lt;/pstatic/json/enum/session_ecommerce_status.json&gt; Source\tsource\tsession\tstr\tstring\tFalse Medium\tmedium\tsession\tstr\tstring\tFalse Source/Medium\tsource_medium\tsession\tstr\tstring\tFalse Keyword\tkeyword\tsession\tstr\tstring\tFalse Channel\treferrer_type\tsession\t[int, str]\tuint8\tFalse\treferrer_type.json &lt;/pstatic/json/enum/referrer_type.json&gt; Referrer URL\treferrer_url\tsession\tstr\tstring\tFalse Campaign name\tcampaign_name\tsession\tstr\tstring\tFalse Campaign ID\tcampaign_id\tsession\tstr\tstring\tFalse Campaign content\tcampaign_content\tsession\tstr\tstring\tFalse Google Click ID\tcampaign_gclid\tsession\tstr\tstring\tTrue Operating system\toperating_system\tsession\t[str, str]\tstring(3)\tTrue\toperating_system.json &lt;/pstatic/json/enum/operating_system.json&gt; Operating system version\toperating_system_version\tsession\tstr\tstring\tFalse Browser engine\tbrowser_engine\tsession\tstr\tstring\tFalse Browser name\tbrowser_name\tsession\t[str, str]\tstring(2)\tTrue\tbrowser_name.json &lt;/pstatic/json/enum/browser_name.json&gt; Browser version\tbrowser_version\tsession\tstr\tstring\tFalse Browser language\tbrowser_language_iso639\tsession\t[str, str]\tstring(2)\tTrue\tbrowser_language_iso639.json &lt;/pstatic/json/enum/browser_language_iso639.json&gt; Browser fingerprint\tbrowser_fingerprint\tsession\tint\tuint64\tFalse\tnot available in Queries API Device type\tdevice_type\tsession\t[int, str]\tuint8\tTrue\tdevice_type.json &lt;/pstatic/json/enum/device_type.json&gt; Device brand\tdevice_brand\tsession\t[str, str]\tstring(2)\tTrue\tdevice_brand.json &lt;/pstatic/json/enum/device_brand.json&gt; Device model\tdevice_model\tsession\tstr\tstring\tFalse Resolution\tresolution\tsession\tstr\tstring\tTrue Resolution width\tresolution_width\tsession\tint\tuint16\tTrue Resolution height\tresolution_height\tsession\tint\tuint16\tTrue PDF plugin\tplugin_pdf\tsession\tint(0,1)\tuint8\tFalse Flash plugin\tplugin_flash\tsession\tint(0,1)\tuint8\tFalse Java plugin\tplugin_java\tsession\tint(0,1)\tuint8\tFalse Director plugin\tplugin_director\tsession\tint(0,1)\tuint8\tFalse QuickTime plugin\tplugin_quicktime\tsession\tint(0,1)\tuint8\tFalse RealPlayer plugin\tplugin_realplayer\tsession\tint(0,1)\tuint8\tFalse Windows Media Player plugin\tplugin_windowsmedia\tsession\tint(0,1)\tuint8\tFalse Gears plugin\tplugin_gears\tsession\tint(0,1)\tuint8\tFalse Silverlight plugin\tplugin_silverlight\tsession\tint(0,1)\tuint8\tFalse Cookie support\tplugin_cookie\tsession\tint(0,1)\tuint8\tFalse Continent\tlocation_continent_iso_code\tsession\t[str, str]\tstring(2)\tTrue\tlocation_continent_iso_code.json &lt;/pstatic/json/enum/location_continent_iso_code.json&gt; Country\tlocation_country_name\tsession\t[str, str]\tstring\tTrue\tISO 3166-2 codes (e.g. &quot;PL&quot;) Subdivision\tlocation_subdivision_1_name\tsession\t[str, str]\tstring\tTrue\tISO 3166-2 codes (e.g. &quot;PL-DS&quot;) Subdivision 2\tlocation_subdivision_2_name\tsession\t[str, str]\tstring\tTrue\tISO 3166-2 codes (e.g. &quot;ES-M&quot;) City\tlocation_city_name\tsession\t[int, str]\tstring\tTrue\tunique identifiers as specified by GeoNames Designated market area\tlocation_metro_code\tsession\t[str, str]\tstring(3)\tTrue\tDeprecated. Available only in old reports. Latitude\tlocation_latitude\tsession\tfloat\tfloat64\tTrue Longitude\tlocation_longitude\tsession\tfloat\tfloat64\tTrue Provider\tlocation_provider\tsession\tstr\tstring\tFalse Organization\tlocation_organization\tsession\tstr\tstring\tFalse Session exit URL\tsession_exit_url\tsession\tstr\tstring\tFalse Session exit title\tsession_exit_title\tsession\tstr\tstring\tFalse Session entry URL\tsession_entry_url\tsession\tstr\tstring\tFalse Session entry title\tsession_entry_title\tsession\tstr\tstring\tFalse Session second URL\tsession_second_url\tsession\tstr\tstring\tFalse Session second title\tsession_second_title\tsession\tstr\tstring\tFalse Session bounce\tis_bounce\tsession\tint(0,1)\tuint8\tFalse Event ID\tevent_id\tevent\tint\tuint64\tFalse\tby default in Raw data API Session ID\tsession_id\tsession\tint\tuint64\tFalse\tby default in Raw data API Exit view\tis_exit\tevent\tint(0,1)\tuint8\tFalse\tnot available in Queries API Entry view\tis_entry\tevent\tint(0,1)\tuint8\tFalse\tnot available in Queries API Event type\tevent_type\tevent\t[int, str]\tuint8\tFalse\tevent_type.json &lt;/pstatic/json/enum/event_type.json&gt; Page URL\tevent_url\tevent\tstr\tstring\tFalse Page title\tevent_title\tevent\tstr\tstring\tFalse Outlink URL\toutlink_url\tevent\tstr\tstring\tFalse Download URL\tdownload_url\tevent\tstr\tstring\tFalse Search keyword\tsearch_keyword\tevent\tstr\tstring\tFalse Search category\tsearch_category\tevent\tstr\tstring\tFalse Search results count\tsearch_results_count\tevent\tint\tuint16\tTrue Custom event category\tcustom_event_category\tevent\tstr\tstring\tFalse Custom event action\tcustom_event_action\tevent\tstr\tstring\tFalse Custom event name\tcustom_event_name\tevent\tstr\tstring\tFalse Custom event value\tcustom_event_value\tevent\tfloat\tfloat64\tTrue Content name\tcontent_name\tevent\tstr\tstring\tFalse Content piece\tcontent_piece\tevent\tstr\tstring\tFalse Content target\tcontent_target\tevent\tstr\tstring\tFalse Previous page view URL\tprevious_event_url\tevent\tstr\tstring\tFalse Previous page view title\tprevious_event_title\tevent\tstr\tstring\tFalse Next page view URL\tnext_event_url\tevent\tstr\tstring\tFalse Next page view title\tnext_event_title\tevent\tstr\tstring\tFalse Event index\tevent_index\tevent\tint\tuint16\tFalse\tnot available in Queries API Page view index\tpage_view_index\tevent\tint\tuint16\tTrue\tnot available in Queries API Time on page\ttime_on_page\tevent\tint\tuint32\tTrue Page generation time\tpage_generation_time\tevent\tfloat\tfloat64\tTrue Goal name\tgoal_id\tevent\t[int, str]\tint32\tTrue\tgoal IDs from Analytics Goal revenue\tgoal_revenue\tevent\tfloat\tfloat64\tTrue Lost revenue\tlost_revenue\tevent\tfloat\tfloat64\tTrue Order ID\torder_id\tevent\tstr\tstring\tFalse Item count\titem_count\tevent\tint\tuint16\tTrue Revenue\trevenue\tevent\tfloat\tfloat64\tTrue Revenue (Subtotal)\trevenue_subtotal\tevent\tfloat\tfloat64\tTrue Revenue (Tax)\trevenue_tax\tevent\tfloat\tfloat64\tTrue Revenue (Shipping)\trevenue_shipping\tevent\tfloat\tfloat64\tTrue Revenue (Discount)\trevenue_discount\tevent\tfloat\tfloat64\tTrue Time until DOM is ready\ttiming_dom_interactive\tevent\tint\tuint32\tTrue Time to interact\ttiming_event_end\tevent\tint\tuint32\tTrue Consent form view source\tconsent_source\tevent\t[int, str]\tuint8\tTrue\tconsent_source.json &lt;/pstatic/json/enum/consent_source.json&gt; Consent form interaction type\tconsent_form_button\tevent\t[int, str]\tuint8\tTrue\tconsent_form_button.json &lt;/pstatic/json/enum/consent_form_button.json&gt; Consent scope\tconsent_scope\tevent\t[int, str]\tuint8\tTrue\tconsent_scope.json &lt;/pstatic/json/enum/consent_scope.json&gt; Consent action\tconsent_action\tevent\t[int, str]\tuint8\tTrue\tconsent_action.json &lt;/pstatic/json/enum/consent_action.json&gt; Analytics consent\tconsent_type_analytics\tevent\tint(0,1)\tuint8\tTrue AB testing personalization consent\tconsent_type_ab_testing_personalization\tevent\tint(0,1)\tuint8\tTrue Conversion tracking consent\tconsent_type_conversion_tracking\tevent\tint(0,1)\tuint8\tTrue Marketing automation consent\tconsent_type_marketing_automation\tevent\tint(0,1)\tuint8\tTrue Remarketing consent\tconsent_type_remarketing\tevent\tint(0,1)\tuint8\tTrue User feedback consent\tconsent_type_user_feedback\tevent\tint(0,1)\tuint8\tTrue Custom consent 1\tconsent_type_custom_1\tevent\tint(0,1)\tuint8\tTrue Event custom dimension 1\tevent_custom_dimension_1\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom dimension 2\tevent_custom_dimension_2\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom dimension 3\tevent_custom_dimension_3\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom dimension 4\tevent_custom_dimension_4\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom dimension 5\tevent_custom_dimension_5\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable key 1\tevent_custom_variable_key_1\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable value 1\tevent_custom_variable_value_1\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable key 2\tevent_custom_variable_key_2\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable value 2\tevent_custom_variable_value_2\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable key 3\tevent_custom_variable_key_3\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable value 3\tevent_custom_variable_value_3\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable key 4\tevent_custom_variable_key_4\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable value 4\tevent_custom_variable_value_4\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable key 5\tevent_custom_variable_key_5\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Event custom variable value 5\tevent_custom_variable_value_5\tevent\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom dimension 1\tsession_custom_dimension_1\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom dimension 2\tsession_custom_dimension_2\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom dimension 3\tsession_custom_dimension_3\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom dimension 4\tsession_custom_dimension_4\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom dimension 5\tsession_custom_dimension_5\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable key 1\tsession_custom_variable_key_1\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable value 1\tsession_custom_variable_value_1\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable key 2\tsession_custom_variable_key_2\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable value 2\tsession_custom_variable_value_2\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable key 3\tsession_custom_variable_key_3\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable value 3\tsession_custom_variable_value_3\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable key 4\tsession_custom_variable_key_4\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable value 4\tsession_custom_variable_value_4\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable key 5\tsession_custom_variable_key_5\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Session custom variable value 5\tsession_custom_variable_value_5\tsession\tstr\tstring\tFalse\tThe number of slots depend on your account type. Timestamp\ttimestamp\tsession\tdate\tnot applicable\tFalse\tby default in Raw data API Local hour\tlocal_hour\tsession\tint\tnot applicable\tFalse Time of redirections\tredirections_time\tevent\tint\tnot applicable\tTrue Domain Lookup Time\tdomain_lookup_time\tevent\tint\tnot applicable\tTrue Server Connection Time\tserver_connection_time\tevent\tint\tnot applicable\tTrue Server Response Time\tserver_response_time\tevent\tint\tnot applicable\tTrue Page Rendering Time\tpage_rendering_time\tevent\tint\tnot applicable\tTrue IPv4 address\tipv4_address\tsession\tipv4\tnot applicable\tTrue IPv6 address\tipv6_address\tsession\tipv6\tnot applicable\tTrue Website name\twebsite_name\tsession\t[str, str]\tnot applicable\tFalse\twebsite UUID If you make a call that includes one or more columns with theevent scope, the whole query will be calculated using events – not sessions. This might distort some custom metrics like average session time.Database type is the source column of a dimension. Enum shows the ID type. Not applicable shows a dymamic dimension. Transformation: dimension to metric Here's a list of transformations that you can use. Transformation name\tTransformation ID\tSource types\tResult typeUnique Count\tunique_count\tint, str\tint Min\tmin\tint, float\t(as source) Max\tmax\tint, float\t(as source) Average\taverage\tint, float\tfloat Median\tmedian\tint, float\t(as source) Sum\tsum\tint, float\t(as source) Transformation: dimension to dimension Here's a list of transformations that you can use. Transformation name\tTransformation ID\tSource types\tResult typeDate To Day\tto_date\tdatetime, date\tdate Date To Start Of Hour\tto_start_of_hour\tdatetime\tdatetime Date To Start Of Week\tto_start_of_week\tdatetime, date\tdate Date To Start Of Month\tto_start_of_month\tdatetime, date\tdate Date To Start Of Quarter\tto_start_of_quarter\tdatetime, date\tdate Date To Start Of Year\tto_start_of_year\tdatetime, date\tdate Date To Hour Of Day\tto_hour_of_day\tdatetime\tint Date To Day Of Week\tto_day_of_week\tdatetime, date\tint Date To Month Number\tto_month_number\tdatetime, date\tint URL To Path\tto_path\tstr\tstr URL To Domain\tto_domain\tstr\tstr URL Strip Query String\tstrip_qs\tstr\tstr","keywords":"","version":"Next"},{"title":"React Native SDK","type":0,"sectionRef":"#","url":"/docs/sdks/React-Native-sdk","content":"","keywords":"","version":"Next"},{"title":"Installation​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#installation","content":" npm install @piwikpro/react-native-piwik-pro-sdk   ","version":"Next","tagName":"h3"},{"title":"Configuration​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#configuration","content":" In order to set up the Piwik PRO tracker you have to call init method passing a server address and website ID (you can find it in Administration -&gt; Sites &amp; apps):  import PiwikProSdk from &quot;@piwikpro/react-native-piwik-pro-sdk&quot;; // ... await PiwikProSdk.init('https://your.piwik.pro.server.com', '01234567-89ab-cdef-0123-456789abcdef')   Parameters:  serverAddress: string (required) – URL of your Piwik PRO server.websiteId: string (required) – ID of your website or application.  Note: Each tracking method is implemented as a Promise which will be rejected if the PiwikProSdk has not been initialized.  ","version":"Next","tagName":"h3"},{"title":"Using Piwik PRO SDK​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#using-piwik-pro-sdk","content":" ","version":"Next","tagName":"h2"},{"title":"Data anonymization​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#data-anonymization","content":" Anonymization is the feature that allows tracking a user’s activity for aggregated data analysis even if the user doesn’t consent to track the data. If a user does not agree to be tracked, he will not be identified as the same person across multiple sessions.  Personal data will not be tracked during the session (i.e. user ID, device ID). If the anonymization is enabled, a new visitor ID will be created each time the application starts.  Anonymization is enabled by default.  You can turn the anonymization on and off using the setAnonymizationState method:  await PiwikProSdk.setAnonymizationState(false);   Parameters:  anonymizationState: boolean (required) – new anonymization state.  You can also check the anonymization status using the isAnonymizationOn method:  const anonymizationState = await PiwikProSdk.isAnonymizationOn();   Returns:  anonymizationState: boolean – current anonymization state.  ","version":"Next","tagName":"h3"},{"title":"Tracking screen views​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-screen-views","content":" Requires Analytics  During a valid tracking session, you can track screen views which represent the content the user is viewing in the application. To track a screen you only need to provide the screen path. This path is internally translated by the SDK to an HTTP URL as the Piwik PRO server uses URLs for tracking views. Additionally, Piwik PRO SDK uses prefixes which are inserted in a generated URL for various types of action(s). For tracking screen views it will use a prefix 'screen' by default, however, automatic prefixing can be disabled with the setPrefixing(false) option.  const options = { title: 'actionTitle', customDimensions: { 1: 'some custom dimension value' }, }; await PiwikProSdk.trackScreen(`your_screen_path`, options);   Parameters:  path: string (required) – screen path (it will be mapped to the URL path).options – screen tracking options, object containing four properties (all of them are optional): title: string – the title of the action being tracked (it will be omitted in iOS application).customDimensions – the object specifying custom dimensions.screenCustomVariables – the object specifying screen custom variables.visitCustomVariables – the object specifying visit custom variables.  ","version":"Next","tagName":"h3"},{"title":"Tracking custom events​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-custom-events","content":" Requires Analytics  To collect data about the user’s interaction with the interactive components of the application, like a button presses or the use of a particular item in the game – use event method.  const options = { name: 'customEvent', path: 'some/path', value: 1.5, customDimensions: { 1: 'some custom dimension value' }, } await PiwikProSdk.trackCustomEvent(`custom_event`, 'custom_event_action', options);   Parameters:  category: string (required) – event category. You may define event categories based on the class of user actions (e.g. clicks, gestures, voice commands), or you may define them based on the features available in your application (e.g. play, pause, fast forward, etc.).action: string (required) – specific event action within the category specified. In the example, we are effectively saying that the category of the event is user clicks, and the action is a button click.options – custom event options, object containing five properties (all of them are optional): name: string – label associated with the event. For example, if you have multiple button controls on a screen, you may use the label to specify the specific view control identifier that was clicked.value: number – float, numerical value associated with the event. For example, if you were tracking 'Buy' button clicks, you may log the number of items being purchased or their total cost.path: string – the path under which this event occurred (it will be omitted in iOS application).customDimensions – the object specifying custom dimensions.visitCustomVariables – the object specifying visit custom variables.  For more resources, please visit documentation.  ","version":"Next","tagName":"h3"},{"title":"Tracking exceptions​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-exceptions","content":" Requires Analytics  Caught exceptions are errors in your app for which you’ve defined an exception handling code, such as the occasional timeout of a network connection during a request for data. Exceptions are tracked on the server in a similar way as screen views, however, action internally generated for exceptions always uses the 'fatal' or 'caught' prefix, and additionally the 'exception' prefix if isPrefixingOn() option is enabled (true).  Measure a caught exception by setting the exception field values on the tracker and sending the hit, as with this example:  const options = { visitCustomVariables: { 4: { name: 'food', value: 'pizza' } }, customDimensions: { 1: 'some custom dimension value' }, }; await PiwikProSdk.trackException('exception', false, options);   Parameters:  description: string (required) – the exception message.isFatal: boolean (required) – true if an exception is fatal. Determines whether the exception prefix will be 'fatal' or 'caught'.options – exception tracking options, object containing two properties (all of them are optional): customDimensions – the object specifying custom dimensions.visitCustomVariables – the object specifying visit custom variables.  ","version":"Next","tagName":"h3"},{"title":"Tracking social interactions​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-social-interactions","content":" Requires Analytics  Social interactions such as likes, shares and comments in various social networks can be tracked as below. This, again, is tracked in a similar way as with screen views but the 'social' prefix is used when the default isPrefixing() option is enabled.  const options = { visitCustomVariables: { 4: { name: 'food', value: 'pizza' } }, target: 'Photo', }; await PiwikProSdk.trackSocialInteraction(`Like`, 'Facebook', options);   Parameters:  interaction: string (required) – the social interaction, e.g. 'Like'.network: string (required) – social network associated with interaction, e.g. 'Facebook'.options – social interaction tracking options, object containing three properties (all of them are optional): target: string – the target for which this interaction occurred, e.g. 'Photo'.customDimensions – the object specifying custom dimensions.visitCustomVariables – the object specifying visit custom variables.  The generated URL corresponds to string, which includes the network, interaction and target parameters separated by slash.  ","version":"Next","tagName":"h3"},{"title":"Tracking downloads​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-downloads","content":" Requires Analytics  You can track the downloads initiated by your application:  const options = { visitCustomVariables: 4: { name: 'food', value: 'pizza' }, customDimensions: { 1: 'beta', 2: 'gamma', }, }; await PiwikProSdk.trackDownload(`http://your.server.com/bonusmap.zip`, options);   Parameters:  url: string (required) – URL of the downloaded content.options – download tracking options, object containing two properties (all of them are optional): customDimensions – object specifying custom dimensions.visitCustomVariables – object specifying visit custom variables.  All downloads can be viewed in the corresponding section in the analytics panel.  Note: Generated URLs may differ between Android and iOS.  ","version":"Next","tagName":"h3"},{"title":"Tracking outlinks​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-outlinks","content":" Requires Analytics  For tracking outlinks to external websites or other apps opened from your application use the trackOutlink method:  const options = { visitCustomVariables: 4: { name: 'food', value: 'pizza' }, customDimensions: { 1: 'beta', 2: 'gamma', }, }; await PiwikProSdk.trackOutlink(`http://your.server.com/bonusmap.zip`, options);   Parameters:  URL (required) – outlink target. HTTPS, HTTP and FTP are valid.options – outlinks tracking options, object containing two properties (all of them are optional): customDimensions – object specifying custom dimensions.visitCustomVariables – object specifying visit custom variables.  ","version":"Next","tagName":"h3"},{"title":"Tracking search operations​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-search-operations","content":" Requires Analytics  Tracking search operations allow the measurement of popular keywords used for various search operations performed inside your application. It can be done via the trackSearch method:  const options = { category: `Movies`, count: 3, visitCustomVariables: 4: { name: 'food', value: 'pizza' }, customDimensions: { 1: 'beta', 2: 'gamma', }, }; await PiwikProSdk.trackSearch('Space', options);   Parameters:  keyword: string (required) – searched query that was used in the app.options – search tracking options, object containing four properties (all of them are optional): category: string – search category.count: number – we recommend setting the search count to the number of search results displayed on the results page. When keywords are tracked with a count of 0, they will appear in the 'No Result Search Keyword' report.customDimensions – object specifying custom dimensions.visitCustomVariables – object specifying visit custom variables.  ","version":"Next","tagName":"h3"},{"title":"Tracking content impressions and interactions​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-content-impressions-and-interactions","content":" Requires Analytics  You can track an impression of an ad in your application as below.  const options = { piece: 'banner', target: 'https://www.dn.se/', visitCustomVariables: 4: { name: 'food', value: 'pizza' }, customDimensions: { 1: 'beta', 2: 'gamma', }, }; await PiwikProSdk.trackImpression('Some content impression', options);   When the user interacts with the ad by tapping on it, you can also track it with a similar method:  const options = { piece: 'banner', target: 'https://www.dn.se/', visitCustomVariables: 4: { name: 'food', value: 'pizza' }, customDimensions: { 1: 'beta', 2: 'gamma', }, }; await PiwikProSdk.trackInteraction('Some content interaction', options);   Parameters:  contentName: string (required) – name of the content, e.g. 'Ad Foo Bar'.options – impression tracking options, object containing four properties (all of them are optional): piece: string – actual content. For instance, path to the image, video, audio or any text.target: string – the target of the content. For instance the URL of a landing page.customDimensions – object specifying custom dimensions.visitCustomVariables – object specifying visit custom variables.  ","version":"Next","tagName":"h3"},{"title":"Tracking goals​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-goals","content":" Requires Analytics  Goal tracking is used to measure and improve your business objectives. To track goals, you first need to configure them on the server in your web panel. Goals such as, for example, subscribing to a newsletter can be tracked as below with the goal ID that you will see on the server after configuring the goal and optional revenue. The currency for the revenue can be set in the Piwik PRO Analytics settings. You can read more about goals here.  const options = { revenue: 30, visitCustomVariables: 4: { name: 'food', value: 'pizza' }, customDimensions: { 1: 'beta', 2: 'gamma', }, }; await PiwikProSdk.trackGoal(1, options);   Parameters:  goal: number (required) – tracking request will trigger a conversion for the goal of the website being tracked with this ID.options – goal tracking options, object containing three properties (all of them are optional): revenue: number – monetary value that was generated as revenue by this goal conversion.customDimensions – object specifying custom dimensions.visitCustomVariables – object specifying visit custom variables.  ","version":"Next","tagName":"h3"},{"title":"Tracking ecommerce transactions​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-ecommerce-transactions","content":" Requires Analytics  Ecommerce transactions (in-app purchases) can be tracked to help you improve your business strategy. To track a transaction you must provide two required values – the transaction identifier and grandTotal. Optionally, you can also provide values for subTotal, tax, shippingCost, discount and list of purchased items as in the example below.  const options: TrackEcommerceOptions = { discount: 0, shipping: 1000, subTotal: 33110, tax: 9890, items: [ { sku: '0123456789012', category: &quot;Men's T-shirts&quot;, name: 'Polo T-shirt', price: 3000, quantity: 2, }, ], visitCustomVariables: 4: { name: 'food', value: 'pizza' }, customDimensions: { 1: 'beta', 2: 'gamma', }, }; await PiwikProSdk.trackEcommerce('order_1', 124144, options);   Parameters:  orderId: string (required) – unique string identifying the order.grandTotal: number (required) – total amount of the order, in cents.options – goal tracking options, object containing five properties (all of them are optional): subTotal: number – subtotal (net price) for the order, in cents.tax: number – tax for the order, in cents.shipping: number – shipping for the order, in cents.discount: number – discount for the order, in cents.items – items included in the order, array of objects containing five required properties: sku: string – identifier of the item.name: string – name of the item.category: string – category of the item.price: string – price of the single item, in cents.quantity: string – quantity of the item. customDimensions – object specifying custom dimensions.visitCustomVariables – object specifying visit custom variables.  ","version":"Next","tagName":"h3"},{"title":"Tracking campaigns​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-campaigns","content":" Requires Analytics  Tracking campaigns URLs configured with the online Campaign URL Builder tool allow you to measure how different campaigns (for example with Facebook ads or direct emails) bring traffic to your application:  const options = { visitCustomVariables: 4: { name: 'food', value: 'pizza' }, customDimensions: { 1: 'beta', 2: 'gamma', }, }; await PiwikProSdk.trackCampaign('http://example.org/offer.html?pk_campaign=Email-SummerDeals&amp;pk_keyword=LearnMore', options);   Parameters:  url: string (required) – the campaign URL. HTTPS, HTTP and FTP are valid, however, the URL must contain campaign name and keyword parameters.options – campaign tracking options, object containing two properties (all of them are optional): customDimensions – object specifying custom dimensions.visitCustomVariables – object specifying visit custom variables.  Note: On iOS the campaign information will be sent to the server together with the next analytics event.  ","version":"Next","tagName":"h3"},{"title":"Tracking custom variables​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-custom-variables","content":" The feature will soon be disabled. We recommend using custom dimensions instead.  Requires Analytics  A custom variable is a custom name-value pair that you can assign to your users or screen views, and then visualize the reports of how many visits, conversions, etc. occurred for each custom variable. A custom variable is defined by a name – for example, 'User status' – and a value – for example, 'LoggedIn' or 'Anonymous'. It is required for names and values to be encoded in UTF-8.  Each custom variable has a scope. There are two types of custom variables scope – visit scope and screen scope. The visit scope can be used for any tracking action, and the screen scope can only be applied to tracking screen views.  To set the custom variable of the screen scope, use the screenCustomVariables object, for the visit scope – visitCustomVariables in the screen tracking method options:  const options = { screenCustomVariables: { 4: { name: 'food', value: 'pizza' } }, visitCustomVariables: { 5: { name: 'drink', value: 'water' } }, }; await PiwikProSdk.trackScreen(`your_screen_path`, options);   Please note that for the Default custom variables option, use the custom variables of the visit scope with indexes 1-3. Custom variables of each scope is the object with the following format:  const customVariables = { 4: { name: 'food', value: 'pizza' }, 5: { name: 'drink', value: 'water' }, }   where:  index: number, the key (required) – a given custom variable name must always be stored in the same 'index' per session. For example, if you choose to store the variable with name 'Gender' in index 1 and you record another custom variable in index 1, then the 'Gender' variable will be deleted and replaced with a new custom variable stored in index 1.name: string (required) – the name of a specific custom variable such as 'User type' (Limited to 200 characters).value: string (required) – the value of a specific custom variable such as 'Customer' (Limited to 200 characters).  ","version":"Next","tagName":"h3"},{"title":"Tracking custom dimensions​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-custom-dimensions","content":" Requires Analytics  To track a custom key-value pair assigned to your users or screen views, use custom dimensions. Note that the custom value data is not sent by itself, but only with other tracking actions such as screen views, events or other tracking actions (see the documentation of other tracking methods), for example:  const customDimensions = { 1: 'dashboard', 2: 'menu', } await PiwikProSdk.trackScreen(`your_screen_path`, { customDimensions });   1 and 2 are dimension IDs. dashboard, menu are the dimension values for the tracked screen view event.  ","version":"Next","tagName":"h3"},{"title":"Tracking user profile attributes​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#tracking-user-profile-attributes","content":" Requires Audience Manager  The Audience Manager stores visitors’ profiles which have data from a variety of sources. One of them can be a mobile application. It is possible to enrich the profiles with more attributes by passing any key-value pair e.g. gender: male, favourite food: Italian, etc. It is recommended to set additional user identifiers such as email or user ID which will allow the enrichment of existing profiles or merging of profiles rather than creating a new profile. For example, if the user visited the website, performed some actions, filled in a form with his email (his data was tracked and profile created in Audience Manager) and afterwards started using a mobile application, the existing profile will be enriched only if the email was set. Otherwise, a new profile will be created.  For sending profile attributes use trackProfileAttributes method:  const profileAttributes: TrackProfileAttributes = [ { name: 'food', value: 'pizza' }, { name: 'drink', value: 'water' }, ]; // Profile attributes can be also a single object: // const profileAttributes: TrackProfileAttributes = { name: 'food', value: 'pizza' }; await PiwikProSdk.trackProfileAttributes(profileAttributes);   Parameters:  profileAttributes – an object or an array of objects with two required properties: name: string (required) – profile attribute name.value: string (required) – the profile attribute value.  Aside from attributes, each event also sends parameters which are retrieved from the tracker instance:  WEBSITE_ID – always sent.USER_ID – if set. Read more about the User ID.EMAIL – if set. Read more about the email.VISITOR_ID – always sent, ID of the mobile application user, generated by the SDK.DEVICE_ID – Advertising ID that, by default, is fetched automatically when the tracker instance is created (only on Android).  Profile attributes for the user that are tracked will be shown on the Audience Manager -&gt; Profile Browser tab.  ","version":"Next","tagName":"h3"},{"title":"Reading user profile attributes​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#reading-user-profile-attributes","content":" Requires Audience Manager  It is possible to read the attributes of a given profile, however, with some limitations. Due to security reasons (to avoid personal data leakage), it is possible to read only attributes that were enabled for API access (whitelisted) in the Attributes section in the Audience Manager. You can get user profile attributes in the following manner:  const attributes = await PiwikProSdk.getProfileAttributes(); console.log(attributes); // {&quot;device_type&quot;: &quot;desktop&quot;, ...}   Returns:  attributes: object – dictionary of key-value pairs, where each pair represents the attribute name (key) and value. In case of error (for example when user profile does not yet exist), returns error message.  ","version":"Next","tagName":"h3"},{"title":"Checking audience membership​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#checking-audience-membership","content":" Requires Audience Manager  Audiences are allowed to check whether or not the user belongs to a specific group of users defined in the data manger panel based on analytics data and audience manager profile attributes. You can check if the user belongs to a given audience, for example, to show a special offer. To check it, use the checkAudienceMembership method:  const audienceId = 'a83d4aac-faa6-4746-96eb-5ac110083f8e'; const isMember = await PiwikProSdk.checkAudienceMembership(audienceId); console.log(isMember); // true   Parameters:  audienceId: string (required) – ID of the audience (Audience Manager -&gt; Audiences).  Returns:  isMember: boolean – value indicating whether user belongs to the audience with given ID or error message if an error occurred.  ","version":"Next","tagName":"h3"},{"title":"Advanced usage​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#advanced-usage","content":" ","version":"Next","tagName":"h2"},{"title":"User ID​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#user-id","content":" The user ID is an additional, optional non-empty unique string identifying the user (not set by default). It can be, for example, a unique username or user’s email address. If the provided user ID is sent to the analytics part together with the visitor ID, it allows the association of events from various platforms (for example iOS and Android) to the same user provided that the same user ID is used on all platforms. More about user ID. In order to set user ID use the setUserId method:  await PiwikProSdk.setUserId(&quot;John Doe&quot;);   Parameters:  userId: string (required) – any non-empty unique string identifying the user. Passing null will delete the current user ID.  You can obtain current user ID value with getUserId:  const currentUserId = await PiwikProSdk.getUserId();   Returns:  userId: string – current user ID.  ","version":"Next","tagName":"h3"},{"title":"User email address​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#user-email-address","content":" Used only by Audience Manager  The user email address is an optional parameter for user identification. Similar to user ID, it allows the association of events from various sources to the same user. To set user email use the setUserEmail method:  await PiwikProSdk.setUserEmail('john@doe.com');   Parameters:  email: string (required) – non-empty string representing email address.  Setting up an email helps the Audience Manager to enrich existing profiles or merge profiles which come from other sources (if they also have an email). Check Tracking user profile attributes for more information.  You can obtain current user email value with getUserEmail:  const currentUserEmail = await PiwikProSdk.getUserEmail();   Returns:  email: string – current user email.  ","version":"Next","tagName":"h3"},{"title":"Visitor ID​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#visitor-id","content":" To track user sessions on different sources, the visitor ID parameter is used. Visitor ID is randomly generated when the tracker instance is created, and stored between application launches. It is also possible to reset the visitor ID manually:  await PiwikProSdk.setVisitorId(&quot;0123456789abcdef&quot;);   Parameters:  visitorId: string (required) – unique visitor ID, must be 16 characters hexadecimal string.  Every unique visitor must be assigned a different ID and this ID must not change after it is assigned. We recommend using user ID instead of visitor ID.  You can check current visitor ID value with getVisitorId:  const currentVisitorId = await PiwikProSdk.getVisitorId();   Returns:  visitorId: string – current visitor ID.  ","version":"Next","tagName":"h3"},{"title":"Sessions​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#sessions","content":" A session represents a set of user’s interactions with your app. By default, Analytics is closing the session after 30 minutes of inactivity, counting from the last recorded event in session and when the user will open up the app again the new session is started. You can configure the tracker to automatically close the session when users have placed your app in the background for a period of time. That period is defined by the setSessionTimeout:  await PiwikProSdk.setSessionTimeout(1800);   Parameters:  sessionTimeout: number (required) – session timeout time in seconds. Default: 1800 seconds (30 minutes).  You can obtain current sessionTimeout value with getSessionTimeout:  const currentSessionTimeout = await PiwikProSdk.getSessionTimeout(); console.log(currentSessionTimeout); // 1800   Returns:  sessionTimeout: number – current session timeout value in seconds.  You can manually start a new session when sending a hit to Piwik by using the startNewSession method.  await PiwikProSdk.startNewSession();   ","version":"Next","tagName":"h3"},{"title":"Dispatching​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#dispatching","content":" Tracked events are stored temporarily on the queue and dispatched in batches every 30 seconds (default setting). This behavior can be changed in the following way:  const dispatchInterval = 25; // 25 seconds await PiwikProSdk.setDispatchInterval(dispatchInterval);   Parameters:  dispatchInterval: number (required) – new dispatch interval (in seconds).  If dispatchValue is equal to 0 then events will be dispatched immediately. When its value is negative then events will not be dispatched automatically. This gives you full control over dispatch process using manual dispatch:  await PiwikProSdk.dispatch();   You can obtain current dispatchInterval value with getDispatchInterval:  const currentDispatchInterval = await PiwikProSdk.getDispatchInterval();   Returns:  dispatchInterval: number – current dispatch interval (in seconds) or negative number if automatic dispatch has been disabled.  ","version":"Next","tagName":"h3"},{"title":"Default custom variables​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#default-custom-variables","content":" SDK can automatically add information about the platform version, OS version and app version in custom variables with indexes 1-3. By default, this option is turned on. This can be changed via the setIncludeDefaultCustomVars method:  await PiwikProSdk.setIncludeDefaultCustomVariables(true);   Parameters:  includeDefaultCustomVariables: boolean (required) – flag that determines whether default custom variables should be added to each tracking event.  The status of the option can be checked with getIncludeDefaultCustomVariables:  const includeDefaultCustomVariables = await PiwikProSdk.getIncludeDefaultCustomVariables();   Returns:  includeDefaultCustomVariables: boolean – flag that determines whether default custom variables should be added to each tracking event.  ","version":"Next","tagName":"h3"},{"title":"Opt out​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#opt-out","content":" You can set an app-level opt-out flag that will disable Piwik PRO tracking across the entire app. Note that this flag must be set each time the app starts up and by default is set to false. To enable the app-level opt-out, use:  await PiwikProSdk.setOptOut(true);   Parameters:  optOut: boolean (required) – flag that determines whether opt-out is enabled.  You can obtain current optOut value with getOptOut:  const currentOptOutState = await PiwikProSdk.getOptOut(); console.log(currentOptOutState); // false   Returns:  optOut: boolean – current opt-out state.  ","version":"Next","tagName":"h3"},{"title":"Dry run​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#dry-run","content":" The SDK provides a dryRun flag that, when set, prevents any data from being sent to Piwik. The dryRun flag should be set whenever you are testing or debugging an implementation and do not want test data to appear in your Piwik reports. To set the dryRun flag, use:  await PiwikProSdk.setDryRun(true);   Parameters:  dryRun: boolean (required) – flag that determines whether dry run is enabled.  You can obtain current dryRun value with getDryRun:  const currentDryRunState = await PiwikProSdk.getDryRun();   Returns:  dryRun: boolean – current dry run state.  ","version":"Next","tagName":"h3"},{"title":"Prefixing​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#prefixing","content":" In case of tracking events like screen view, exception or social interaction event path in the tracker will contain corresponding prefix. You can disable prefixing with:  await PiwikProSdk.setPrefixing(false);   Parameters:  prefixingEnabled: boolean (required) – flag that determines whether prefixing is enabled  You can also check the prefixing status using the isPrefixingOn method:  const currentPrefixingState = await PiwikProSdk.isPrefixingOn(); console.log(currentPrefixingState); // false   Returns:  prefixingEnabled: boolean – current prefixing state.  ","version":"Next","tagName":"h3"},{"title":"License​","type":1,"pageTitle":"React Native SDK","url":"/docs/sdks/React-Native-sdk#license","content":" MIT ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}